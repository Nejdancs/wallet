{"version":3,"file":"static/js/819.861a23bd.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/style-value-types/dist/es/utils.mjs","../node_modules/style-value-types/dist/es/numbers/units.mjs","../node_modules/style-value-types/dist/es/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/style-value-types/dist/es/color/utils.mjs","../node_modules/style-value-types/dist/es/color/rgba.mjs","../node_modules/style-value-types/dist/es/color/hex.mjs","../node_modules/style-value-types/dist/es/color/hsla.mjs","../node_modules/style-value-types/dist/es/color/index.mjs","../node_modules/style-value-types/dist/es/complex/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framesync/dist/es/on-next-frame.mjs","../node_modules/framesync/dist/es/index.mjs","../node_modules/framesync/dist/es/create-render-step.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.19\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.19\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.19 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n"],"names":["LayoutGroupContext","createContext","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","useEffect","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","parse","parseFloat","degrees","percent","px","vh","vw","progressPercentage","assign","number","alpha","scale","default","int","round","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","env","warnOnce","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","useUnmountEffect","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substr","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyse","numColors","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","ease","duration","keyframes","defaultTransitions","backgroundColor","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","delay","timeout","performance","now","checkElapsed","elapsed","timestamp","cancelSync","sync","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","splice","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","framesync","update","passTimestamp","stop","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getDelayFromTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","getFrameData","inertia","finalTarget","potentialUnitType","controls","cancelDelay","delayBy","isZeroValueString","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","subscription","add","clear","passiveEffect","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","animateVariant","variant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","useLayoutEffect","warned","condition","message","console","warn","defaultTimestep","getCurrentTime","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","frame","stepsOrder","steps","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","process","frameData","createRenderStep","keepAlive","immediate","startLoop","processStep","stepId","processFrame"],"sourceRoot":""}