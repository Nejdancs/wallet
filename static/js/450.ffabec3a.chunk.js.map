{"version":3,"file":"static/js/450.ffabec3a.chunk.js","mappings":"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","sources":["../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  animateBegin,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  gradientDirection,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  beforeMask,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  gradientDirection: 'left-right',\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n  beforeMask: null,\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart: TypedChartComponent = forwardRef(\n  ChartComponent\n) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["SVG","_a","animate","animateBegin","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","gradientDirection","uniqueKey","interval","rtl","speed","style","title","beforeMask","props","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","React.createElement","role","id","React.isValidElement","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","defaultProps","ContentLoader","Svg","__assign","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_superPropBase","object","property","Object","prototype","hasOwnProperty","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","this","noop","uid","isNullOrUndef","type","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","keyResolvers","v","_getKeyResolver","parts","split","tmp","push","_splitKey","obj","resolveObjectKey","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","c","hex","h1","h2","eq","hexString","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","colorLib","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","DateAdapterBase","init","formats","diff","startOf","endOf","members","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","_element","afterInit","_args","afterDraw","afterEvent","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","forwardRef","createTypedChart","registerables","Doughnut"],"sourceRoot":""}