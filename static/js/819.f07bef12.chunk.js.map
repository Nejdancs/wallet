{"version":3,"file":"static/js/819.f07bef12.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/style-value-types/dist/es/utils.mjs","../node_modules/style-value-types/dist/es/numbers/units.mjs","../node_modules/style-value-types/dist/es/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/style-value-types/dist/es/color/utils.mjs","../node_modules/style-value-types/dist/es/color/rgba.mjs","../node_modules/style-value-types/dist/es/color/hex.mjs","../node_modules/style-value-types/dist/es/color/hsla.mjs","../node_modules/style-value-types/dist/es/color/index.mjs","../node_modules/style-value-types/dist/es/complex/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framesync/dist/es/on-next-frame.mjs","../node_modules/framesync/dist/es/index.mjs","../node_modules/framesync/dist/es/create-render-step.mjs"],"sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.19\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.19\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.19 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_superPropBase","object","property","Object","prototype","hasOwnProperty","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","this","LayoutGroupContext","createContext","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","useEffect","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","parse","parseFloat","degrees","percent","px","vh","vw","progressPercentage","assign","number","alpha","scale","default","int","round","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","env","warnOnce","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","useUnmountEffect","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","prev","prevLength","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substr","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyse","numColors","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","ease","duration","keyframes","defaultTransitions","backgroundColor","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","delay","timeout","performance","now","checkElapsed","elapsed","timestamp","cancelSync","sync","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","splice","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","framesync","update","passTimestamp","stop","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getDelayFromTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","getFrameData","inertia","finalTarget","potentialUnitType","controls","cancelDelay","delayBy","isZeroValueString","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","subscription","add","clear","passiveEffect","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","animateVariant","variant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","useLayoutEffect","warned","condition","message","console","warn","defaultTimestep","getCurrentTime","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","frame","stepsOrder","steps","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","process","frameData","createRenderStep","keepAlive","immediate","startLoop","processStep","stepId","processFrame"],"sourceRoot":""}