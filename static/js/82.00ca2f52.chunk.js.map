{"version":3,"file":"static/js/82.00ca2f52.chunk.js","mappings":"uSAmHA,EA9FkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAiBC,GAAjB,WAEMC,EAAQ,mCAAG,WAAOC,EAAP,mFAAiBC,EAAjB,EAAiBA,UAChCC,QAAQC,IAAI,SADG,SAEGV,EAASW,EAAAA,EAAAA,MAAiBJ,IAF7B,YAETK,EAFS,QAIPC,OAAyB,MAAhBD,EAAIE,QAJN,qDAMJF,EAAIC,MANA,mDAUfL,IAVe,4CAAH,wDAed,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEO,cAAe,CACbC,MAAO,GACPC,SAAU,IAGZX,SAAUA,EANZ,SAQG,gBAAGY,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcZ,EAA/B,EAA+BA,OAA/B,OACC,UAAC,KAAD,CAAMD,SAAUY,EAAhB,WACE,SAAC,KAAD,WACE,SAACE,EAAA,EAAD,OAEF,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAOhB,EAAOS,MACdQ,SAAUL,EACVM,YAAY,YAEd,SAAC,IAAD,KACA,SAAC,KAAD,CACEH,KAAK,QACLI,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,WAG/B,UAAC,KAAD,YACE,SAAC,KAAD,CACEN,KAAK,WACLC,KAAK,WACLC,MAAOhB,EAAOU,SACdO,SAAUL,EACVM,YAAY,WACZG,QAAS,SAAAC,GAAG,OAAIxB,EAAYwB,EAAIC,OAAOP,WAEzC,SAAC,KAAD,KACA,SAAC,KAAD,CACED,KAAK,WACLI,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,WAG/B,SAACI,EAAA,MAAD,CACEC,QAAS,CAAEC,GAAI,IAAKC,QAAS,GAC7BC,QAAS,CAAEF,EAAG,EAAGC,QAAS,GAC1BE,WAAY,CAAEC,SAAU,GAAKC,MAAO,KAHtC,UAKE,SAACC,EAAA,EAAD,CAAQC,MAAI,EAACnB,KAAK,SAAlB,uBAIF,SAACU,EAAA,MAAD,CACEC,QAAS,CAAEC,EAAG,IAAKC,QAAS,GAC5BC,QAAS,CAAEF,EAAG,EAAGC,QAAS,GAC1BE,WAAY,CAAEC,SAAU,GAAKC,MAAO,GAHtC,UAKE,SAACC,EAAA,EAAD,CACElB,KAAK,SACLoB,QAAS,WACPvC,EAAS,YAHb,iC,UCnEd,EArBkB,WAChB,OACE,SAAC6B,EAAA,MAAD,CACEC,QAAS,CAAEU,MAAO,GAAKR,QAAS,IAChCC,QAAS,CAAEO,MAAO,EAAGR,QAAS,GAC9BE,WAAY,CAAEC,SAAU,KAH1B,UAKE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,8BAEF,SAAC,KAAD,WACE,SAAC,EAAD","sources":["components/Login/LoginForm.jsx","pages/AuthenticationPage/LoginPage.jsx"],"sourcesContent":["import { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { motion } from 'framer-motion';\nimport Button from 'components/Button/Button';\nimport Logo from 'components/Logo/Logo';\nimport onValidate from 'assets/ValidateSchema/onValidate';\nimport {\n  FormContainer,\n  Form,\n  FormField,\n  FormLabel,\n  LogoContainer,\n  ErrorText,\n  IconMail,\n  IconPassword,\n} from 'components/AuthStyleForm/AutheticationForm.styled';\n\nimport operations from 'redux/auth/auth-operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n\n  const onSubmit = async (values, { resetForm }) => {\n    console.log('first');\n    const res = await dispatch(operations.logIn(values));\n\n    if (res.error && res.payload === 400) {\n      return;\n    } else if (res.error) {\n      return;\n    }\n\n    resetForm();\n  };\n\n  const onRegBtn = () => {};\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        // validationSchema={onValidate}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, handleChange, values }) => (\n          <Form onSubmit={handleSubmit}>\n            <LogoContainer>\n              <Logo />\n            </LogoContainer>\n            <FormLabel>\n              <FormField\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"E-mail\"\n              />\n              <IconMail />\n              <ErrorMessage\n                name=\"email\"\n                render={msg => <ErrorText>{msg}</ErrorText>}\n              />\n            </FormLabel>\n            <FormLabel>\n              <FormField\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n                onInput={evt => setPassword(evt.target.value)}\n              />\n              <IconPassword />\n              <ErrorMessage\n                name=\"password\"\n                render={msg => <ErrorText>{msg}</ErrorText>}\n              />\n            </FormLabel>\n            <motion.div\n              initial={{ x: -340, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              transition={{ duration: 0.9, delay: 1.2 }}\n            >\n              <Button main type=\"submit\">\n                Log In\n              </Button>\n            </motion.div>\n            <motion.div\n              initial={{ x: 340, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              transition={{ duration: 0.9, delay: 2 }}\n            >\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  navigate('/signup');\n                }}\n              >\n                Register\n              </Button>\n            </motion.div>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import { motion } from 'framer-motion';\nimport LoginForm from 'components/Login/LoginForm';\nimport {\n  PageContainer,\n  ImgContainerLogin,\n  NameApp,\n  ImgSection,\n  Container,\n  FormWrapper,\n} from './AuthenticationPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <motion.div\n      initial={{ scale: 0.7, opacity: 0.5 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{ duration: 1.2 }}\n    >\n      <Container>\n        <PageContainer>\n          <ImgSection>\n            <ImgContainerLogin />\n            <NameApp>Finance App</NameApp>\n          </ImgSection>\n          <FormWrapper>\n            <LoginForm />\n          </FormWrapper>\n        </PageContainer>\n      </Container>\n    </motion.div>\n  );\n};\nexport default LoginPage;\n// style={{ 'min-height': '890px' }}\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useState","setPassword","onSubmit","values","resetForm","console","log","operations","res","error","payload","initialValues","email","password","handleSubmit","handleChange","Logo","type","name","value","onChange","placeholder","render","msg","onInput","evt","target","motion","initial","x","opacity","animate","transition","duration","delay","Button","main","onClick","scale"],"sourceRoot":""}