{"version":3,"file":"static/js/866.2ccadd5d.chunk.js","mappings":"qOAEMA,EAAa,mCAAG,+GAIKC,IAAAA,IACrB,iDALgB,gBAIVC,EAJU,EAIVA,KAGRC,QAAQC,IAAI,kBACZD,QAAQC,IAAIF,EAAKA,KAAKG,UAKtBC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUP,EAAKA,KAAKG,WAb5C,uHAAH,qDAmBnB,I,6BClBaK,EAAqBC,EAAAA,GAAAA,IAAH,6WAkBlBC,EAAeD,EAAAA,GAAAA,GAAH,gdAOCE,GAebC,EAAgBH,EAAAA,GAAAA,GAAH,0OAebI,EAAkBJ,EAAAA,GAAAA,IAAH,6KAYfK,EAAaL,EAAAA,GAAAA,EAAH,mIASVM,EAAmBN,EAAAA,GAAAA,EAAH,gN,SCM7B,MA1EA,WACE,OAAgCO,EAAAA,EAAAA,UAAS,IAAzC,eAAOb,EAAP,KAAiBc,EAAjB,KADkB,SAKHC,IALG,uEAKlB,uFACQlB,EAAOM,KAAKa,MAAMf,aAAagB,QAAQ,mBACjB,IAAhBpB,EAAKqB,QAEfpB,QAAQC,IAAI,wCACZe,EAAYjB,IAINsB,EAAWC,aAAY,WAC3B,IAAMvB,EAAOM,KAAKa,MAAMf,aAAagB,QAAQ,iBACzCpB,GAAQA,EAAKqB,OAAS,GACxBJ,EAAYjB,GACZC,QAAQC,IAAI,2CACZsB,cAAcF,GACdG,YAAW,WACTrB,aAAasB,WAAW,kBACvB,OAEHzB,QAAQC,IAAI,mDACZJ,OAED,KAtBP,4CALkB,sBAwClB,OATA6B,EAAAA,EAAAA,YAAU,WACRT,IACA,IAAMI,EAAWC,aAAY,WAC3BL,MACC,MAEH,OAAO,kBAAMM,cAAcF,MAC1B,KAGD,UAACT,EAAD,YACE,UAACL,EAAD,YACE,SAACM,EAAD,wBACA,SAACA,EAAD,wBACA,SAACA,EAAD,uBAEF,SAACJ,EAAD,UACuB,IAApBP,EAASkB,OACN,yCADH,OAEGlB,QAFH,IAEGA,OAFH,EAEGA,EAAUyB,KAAI,SAACC,EAAIC,GAAL,OACZ,UAAClB,EAAD,YACE,UAACG,EAAD,WACa,IAAVe,GAAe,MACL,IAAVA,GAAe,MACL,IAAVA,GAAe,eAElB,SAACf,EAAD,UACa,IAAVe,GAAyB,IAAVA,EACZC,OAAOF,EAAGG,SAASC,QAAQ,GAC3BF,OAAOF,EAAGG,SAASC,QAAQ,MAEjC,SAAClB,EAAD,UACa,IAAVe,GAAyB,IAAVA,EACZC,OAAOF,EAAGK,UAAUD,QAAQ,GAC5BF,OAAOF,EAAGK,UAAUD,QAAQ,OAdpC,UAAuBH,GAAvB,OAA+BD,EAAGM,0B","sources":["components/Currency/CurrencyApi.jsx","components/Currency/Currency.styled.jsx","components/Currency/Currency.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst fetchCurrency = async () => {\n  try {\n    // const response = await fetch('https://api.monobank.ua/bank/currency');\n    // const { data } = await axios.get('https://api.monobank.ua/bank/currency');\n    const { data } = await axios.get(\n      'https://wallet-test.onrender.com/api/currency'\n    );\n    console.log('fetching datas');\n    console.log(data.data.currency);\n    // return data;\n    // const slicedData = data.slice(0, 3);\n    // console.log('slicedDatay', slicedData);\n    // localStorage.setItem('currencyData', JSON.stringify(slicedData));\n    localStorage.setItem('currencyData', JSON.stringify(data.data.currency));\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default fetchCurrency;\n\n// import axios from 'axios';\n\n// const fetchCurrency = async () => {\n//   try {\n//     // const response = await fetch('https://api.monobank.ua/bank/currency');\n//     const { data } = await axios.get('https://api.monobank.ua/bank/currency');\n\n//     // return data;\n//     const slicedData = data.slice(0, 3);\n//     localStorage.setItem('currencyData', JSON.stringify(slicedData));\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// export default fetchCurrency;\n","import styled from 'styled-components';\nimport BackgroundPicture from '../../images/CurrencyBackground.png';\n\nexport const CurrencyListHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 30px 30px 0px 0px;\n  background-color: #4a56e2;\n  opacity: 0.8;\n  padding: 12px 20px;\n  height: 50px;\n\n  @media (min-width: 768px) {\n    padding: 12px 12px 12px 20px;\n  }\n  @media (min-width: 1280px) {\n    height: 60px;\n    padding: 16px 64px 16px 44px;\n  }\n`;\n\nexport const CurrencyList = styled.ul`\n  margin: 0;\n  height: 124px;\n  padding: 12px 20px 16px 20px;\n  border-radius: 0px 0px 30px 30px;\n\n  background-color: #4a56e2;\n  background-image: url(${BackgroundPicture});\n  background-repeat: no-repeat;\n  background-position: bottom;\n  background-size: 100%;\n\n  @media (min-width: 768px) {\n    height: 132px;\n    padding: 16px 20px 20px 20px;\n  }\n  @media (min-width: 1280px) {\n    height: 287px;\n    padding: 20px 61px 20px 58px;\n  }\n`;\n\nexport const CurrensyItems = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  @media (min-width: 1280px) {\n    &:not(:last-child) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const CurrencyWrapper = styled.div`\n  width: 280px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 336px;\n  }\n  @media (min-width: 1280px) {\n    width: 393px;\n  }\n`;\n\nexport const HeaderText = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n\n  color: #ffffff;\n`;\n\nexport const CurrencyInfoText = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  color: #ffffff;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1280px) {\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport fetchCurrency from './CurrencyApi';\nimport {\n  CurrensyItems,\n  CurrencyList,\n  CurrencyWrapper,\n  CurrencyListHeader,\n  HeaderText,\n  CurrencyInfoText,\n} from './Currency.styled';\n\nfunction Currency() {\n  const [currency, setCurrency] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const [datasTime, setDatasTime] = useState('');\n\n  async function readFromLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('currencyData'));\n    if (data && data.length === 3) {\n      // setTimeout(() => {\n      console.log('data is already in the Local Storage');\n      setCurrency(data);\n\n      // }, 1000);\n    } else {\n      const interval = setInterval(() => {\n        const data = JSON.parse(localStorage.getItem('currencyData'));\n        if (data && data.length > 0) {\n          setCurrency(data);\n          console.log('this is console after data has been got');\n          clearInterval(interval);\n          setTimeout(() => {\n            localStorage.removeItem('currencyData');\n          }, 600000);\n        } else {\n          console.log('data has not been found. calling fetch function');\n          fetchCurrency();\n        }\n      }, 3000);\n    }\n  }\n\n  useEffect(() => {\n    readFromLocalStorage();\n    const interval = setInterval(() => {\n      readFromLocalStorage();\n    }, 1200000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <CurrencyWrapper>\n      <CurrencyListHeader>\n        <HeaderText>Currency</HeaderText>\n        <HeaderText>Purchase</HeaderText>\n        <HeaderText>Sale</HeaderText>\n      </CurrencyListHeader>\n      <CurrencyList>\n        {currency.length === 0\n          ? 'waiting for rates.......  some spinner'\n          : currency?.map((el, index) => (\n              <CurrensyItems key={`${index}${el.currencyCodeA}`}>\n                <CurrencyInfoText>\n                  {index === 0 && 'USD'}\n                  {index === 1 && 'EUR'}\n                  {index === 2 && 'Є/$'}\n                </CurrencyInfoText>\n                <CurrencyInfoText>\n                  {index === 0 || index === 1\n                    ? Number(el.rateBuy).toFixed(2)\n                    : Number(el.rateBuy).toFixed(3)}\n                </CurrencyInfoText>\n                <CurrencyInfoText>\n                  {index === 0 || index === 1\n                    ? Number(el.rateSell).toFixed(2)\n                    : Number(el.rateSell).toFixed(3)}\n                </CurrencyInfoText>\n              </CurrensyItems>\n            ))}\n      </CurrencyList>\n    </CurrencyWrapper>\n  );\n}\n\nexport default Currency;\n\n// import React, { useEffect, useState } from 'react';\n// import fetchCurrency from './CurrencyApi';\n// import {\n//   CurrensyItems,\n//   CurrencyList,\n//   CurrencyWrapper,\n//   CurrencyListHeader,\n//   HeaderText,\n//   CurrencyInfoText,\n// } from './Currency.styled';\n\n// function Currency() {\n//   const [currency, setCurrency] = useState([]);\n//   // const [loading, setLoading] = useState(false);\n//   // const [datasTime, setDatasTime] = useState('');\n\n//   async function readFromLocalStorage() {\n//     const data = JSON.parse(localStorage.getItem('currencyData'));\n//     if (data && data.length === 3) {\n//       setTimeout(() => {\n//         setCurrency(data);\n//       }, 1000);\n//     } else {\n//       const interval = setInterval(() => {\n//         fetchCurrency();\n//         const data = JSON.parse(localStorage.getItem('currencyData'));\n//         if (data) {\n//           clearInterval(interval);\n\n//           setCurrency(data);\n\n//           setTimeout(() => {\n//             localStorage.removeItem('currencyData');\n//           }, 120000);\n//         }\n//       }, 7000);\n//     }\n//   }\n\n//   useEffect(() => {\n//     readFromLocalStorage();\n//     const interval = setInterval(() => {\n//       readFromLocalStorage();\n//       // fetchCurrency();\n//       // const data = JSON.parse(localStorage.getItem('currencyData'));\n//       // setCurrency(data);\n//     }, 240000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <CurrencyWrapper>\n//       <CurrencyListHeader>\n//         <HeaderText>Currency</HeaderText>\n//         <HeaderText>Purchase</HeaderText>\n//         <HeaderText>Sale</HeaderText>\n//       </CurrencyListHeader>\n//       <CurrencyList>\n//         {currency.length === 0\n//           ? 'waiting for rates.......  some spinner'\n//           : currency?.map((el, index) => (\n//               <CurrensyItems key={`${index}${el.currencyCodeA}`}>\n//                 <CurrencyInfoText>\n//                   {index === 0 && 'USD'}\n//                   {index === 1 && 'EUR'}\n//                   {index === 2 && 'Є/$'}\n//                 </CurrencyInfoText>\n//                 <CurrencyInfoText>\n//                   {index === 0 || index === 1\n//                     ? el.rateBuy.toFixed(2)\n//                     : el.rateBuy}\n//                 </CurrencyInfoText>\n//                 <CurrencyInfoText>\n//                   {index === 0 || index === 1\n//                     ? el.rateSell.toFixed(2)\n//                     : el.rateSell}\n//                 </CurrencyInfoText>\n//               </CurrensyItems>\n//             ))}\n//       </CurrencyList>\n//     </CurrencyWrapper>\n//   );\n// }\n\n// export default Currency;\n"],"names":["fetchCurrency","axios","data","console","log","currency","localStorage","setItem","JSON","stringify","CurrencyListHeader","styled","CurrencyList","BackgroundPicture","CurrensyItems","CurrencyWrapper","HeaderText","CurrencyInfoText","useState","setCurrency","readFromLocalStorage","parse","getItem","length","interval","setInterval","clearInterval","setTimeout","removeItem","useEffect","map","el","index","Number","rateBuy","toFixed","rateSell","currencyCodeA"],"sourceRoot":""}