{"version":3,"file":"static/js/578.86ac0631.chunk.js","mappings":"6TAgIA,EAzGkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQ,mCAAG,WAAOC,EAAP,mFAAiBC,EAAjB,EAAiBA,UAAjB,SACGT,EAASU,EAAAA,EAAAA,MAAiBF,IAD7B,YACTG,EADS,QAGPC,OAAyB,MAAhBD,EAAIE,QAHN,uBAIbC,EAAAA,GAAAA,MAAY,8BAJC,8BAMJH,EAAIC,MANA,wBAObE,EAAAA,GAAAA,MAAY,2CAPC,2BAWfL,IAXe,4CAAH,wDAcd,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEM,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,EAAAA,MAClBZ,SAAUA,EANZ,SAQG,gBAAGa,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcb,EAA/B,EAA+BA,OAA/B,OACC,UAAC,KAAD,CAAMD,SAAUa,EAAhB,WACE,SAACE,EAAA,MAAD,CACEC,QAAS,CAAEC,GAAI,GAAIC,QAAS,GAC5BC,QAAS,CAAEF,EAAG,EAAGC,QAAS,GAC1BE,WAAY,CAAEC,SAAU,KAH1B,UAKE,SAAC,KAAD,WACE,SAACC,EAAA,EAAD,SAGJ,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAOxB,EAAOQ,MACdiB,SAAUZ,EACVa,YAAY,YAEd,SAAC,IAAD,KACA,SAAC,KAAD,CACEH,KAAK,QACLI,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,WAI/B,UAAC,KAAD,YACE,SAAC,KAAD,CACEN,KAAMzB,EAAe,OAAS,WAC9B0B,KAAK,WACLC,MAAOxB,EAAOS,SACdgB,SAAUZ,EACVa,YAAY,cAEd,SAAC,KAAD,KACA,SAAC,IAAD,CACEJ,KAAK,SACLxB,gBAAiBA,EACjBD,aAAcA,KAGhB,SAAC,KAAD,CACE0B,KAAK,WACLI,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,WAG/B,SAACd,EAAA,MAAD,CACEC,QAAS,CAAEc,GAAI,IAAKZ,QAAS,GAC7BC,QAAS,CAAEW,EAAG,EAAGZ,QAAS,GAC1BE,WAAY,CAAEC,SAAU,GAAKU,MAAO,IAHtC,UAKE,SAACC,EAAA,EAAD,CAAQC,MAAI,EAACV,KAAK,SAAlB,uBAIF,SAACR,EAAA,MAAD,CACEC,QAAS,CAAEc,EAAG,IAAKZ,QAAS,GAC5BC,QAAS,CAAEW,EAAG,EAAGZ,QAAS,GAC1BE,WAAY,CAAEC,SAAU,GAAKU,MAAO,KAHtC,UAKE,SAACC,EAAA,EAAD,CACET,KAAK,SACLW,QAAS,WACPvC,EAAS,YAHb,iC,UC/Ed,EAtBkB,WAChB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAACoB,EAAA,MAAD,CACEC,QAAS,CAAEmB,MAAO,GAAKjB,QAAS,IAChCC,QAAS,CAAEgB,MAAO,EAAGjB,QAAS,GAC9BE,WAAY,CAAEC,SAAU,GAH1B,UAKE,SAAC,KAAD,OAEF,SAAC,KAAD,8BAGF,SAAC,KAAD,WACE,SAAC,EAAD","sources":["components/LoginForm/LoginForm.jsx","pages/AuthenticationPage/LoginPage.jsx"],"sourcesContent":["import { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { motion } from 'framer-motion';\nimport Button from 'components/Button/Button';\nimport Logo from 'components/Logo/Logo';\nimport authValidate from 'assets/ValidateSchema/authValidate';\nimport ButtonShowPassword from 'components/ButtonShowPassworg/ButtonShowPassworg';\nimport {\n  FormContainer,\n  Form,\n  FormField,\n  FormLabel,\n  LogoContainer,\n  ErrorText,\n  IconMail,\n  IconPassword,\n} from 'components/AuthStyleForm/AuthForm.styled';\nimport { toast } from 'react-toastify';\n\nimport operations from 'redux/auth/auth-operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onSubmit = async (values, { resetForm }) => {\n    const res = await dispatch(operations.logIn(values));\n\n    if (res.error && res.payload === 401) {\n      toast.error('Email or password is wrong');\n      return;\n    } else if (res.error) {\n      toast.error('Something went wrong! Please, try again');\n      return;\n    }\n\n    resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={authValidate.login}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, handleChange, values }) => (\n          <Form onSubmit={handleSubmit}>\n            <motion.div\n              initial={{ y: -50, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ duration: 1.2 }}\n            >\n              <LogoContainer>\n                <Logo />\n              </LogoContainer>\n            </motion.div>\n            <FormLabel>\n              <FormField\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"E-mail\"\n              />\n              <IconMail />\n              <ErrorMessage\n                name=\"email\"\n                render={msg => <ErrorText>{msg}</ErrorText>}\n              />\n            </FormLabel>\n\n            <FormLabel>\n              <FormField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n              />\n              <IconPassword />\n              <ButtonShowPassword\n                type=\"button\"\n                setShowPassword={setShowPassword}\n                showPassword={showPassword}\n              />\n\n              <ErrorMessage\n                name=\"password\"\n                render={msg => <ErrorText>{msg}</ErrorText>}\n              />\n            </FormLabel>\n            <motion.div\n              initial={{ x: -340, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              transition={{ duration: 0.9, delay: 0.8 }}\n            >\n              <Button main type=\"submit\">\n                Log In\n              </Button>\n            </motion.div>\n            <motion.div\n              initial={{ x: 340, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              transition={{ duration: 0.9, delay: 1.3 }}\n            >\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  navigate('/signup');\n                }}\n              >\n                Register\n              </Button>\n            </motion.div>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import { motion } from 'framer-motion';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport {\n  PageContainer,\n  ImgContainerLogin,\n  NameApp,\n  ImgSection,\n  Container,\n  FormWrapper,\n} from './AuthenticationPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <PageContainer>\n        <ImgSection>\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0.5 }}\n            animate={{ scale: 1, opacity: 1 }}\n            transition={{ duration: 1 }}\n          >\n            <ImgContainerLogin />\n          </motion.div>\n          <NameApp>Finance App</NameApp>\n        </ImgSection>\n\n        <FormWrapper>\n          <LoginForm />\n        </FormWrapper>\n      </PageContainer>\n    </Container>\n  );\n};\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useState","showPassword","setShowPassword","onSubmit","values","resetForm","operations","res","error","payload","toast","initialValues","email","password","validationSchema","authValidate","handleSubmit","handleChange","motion","initial","y","opacity","animate","transition","duration","Logo","type","name","value","onChange","placeholder","render","msg","x","delay","Button","main","onClick","scale"],"sourceRoot":""}