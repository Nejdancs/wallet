{"version":3,"file":"static/js/660.2f9a7bca.chunk.js","mappings":"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","sources":["components/DiagramTab/Chart/Chart.styled.js","helpers/numberSpace.js","components/DiagramTab/Chart/Chart.jsx","components/DiagramTab/FormFilter/FormFilter.styled.js","components/DiagramTab/FormFilter/FormFilter.jsx","components/DiagramTab/Table/Table.styled.js","components/DiagramTab/Table/Table.jsx","components/DiagramTab/DiagramTab.styled.js","components/DiagramTab/DiagramTab.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  margin-bottom: 32px;\n`;\nexport const DoughnutBalance = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n","export const numberSpace = number => {\n  const units = number.toFixed(2).toString().slice(-6);\n  const thousands = number.toFixed(2).toString().slice(-9, -6);\n  const millions = number.toFixed(2).toString().slice(-13, -9);\n\n  if (millions) return `${millions} ${thousands} ${units}`;\n  if (thousands) return `${thousands} ${units}`;\n\n  return units;\n};\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport theme from '../../../theme/theme';\nimport { ChartContainer, DoughnutBalance } from './Chart.styled';\nimport { numberSpace } from 'helpers';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst Chart = ({ balance, incomingData }) => {\n  const data = {\n    labels: incomingData.map(trans => trans.category),\n    datasets: [\n      {\n        // label: 'Doughnut Chart',\n        data: incomingData.map(trans => trans.amount),\n        backgroundColor: theme.doughnutColors,\n        borderColor: theme.doughnutColors,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = { cutout: '70%' };\n  return (\n    <ChartContainer>\n      <Doughnut data={data} options={options} />\n      <DoughnutBalance>\n        {'\\u20B4'} {numberSpace(balance)}\n      </DoughnutBalance>\n    </ChartContainer>\n  );\n};\nexport default Chart;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport theme from 'theme/theme';\nimport arrowDown from '../../../images/arrow-down.png';\nimport device from 'assets/breakpoints/device';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 20px;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n  }\n`;\n\nexport const InpWrapper = styled.div`\n  position: relative;\n\n  @media ${device.tablet} {\n    flex-basis: 50%;\n  }\n\n  &::after {\n    content: '';\n    z-index: 2;\n    position: absolute;\n    display: block;\n    top: 50%;\n    transform: translate(0, -50%);\n    right: 21px;\n    width: 18px;\n    height: 9px;\n    /* background-color: blue; */\n    background: url(${arrowDown});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  height: 50px;\n  padding: 12px 20px;\n  border: 1px solid ${theme.colors.primaryTextColor};\n  border-radius: 30px;\n  background-color: transparent;\n  /* gap: 20px; */\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  display: block;\n`;\n","import React, { useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { FormEl, Select, InpWrapper } from './FormFilter.styled';\n\nconst FormFilter = props => {\n  // const [month, setMonth] = useState('month');\n  // const [year, setYear] = useState('year');\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          month: 'month',\n          year: 'year',\n        }}\n        onSubmit={() => {}}\n      >\n        <FormEl>\n          <InpWrapper>\n            <Field as={Select} name=\"month\">\n              <option value=\"month\" disabled={true}>\n                Month\n              </option>\n              <option value=\"01\">January</option>\n              <option value=\"02\">February</option>\n              <option value=\"03\">March</option>\n              <option value=\"04\">April</option>\n              <option value=\"05\">May</option>\n              <option value=\"06\">June</option>\n              <option value=\"07\">July</option>\n              <option value=\"08\">August</option>\n              <option value=\"09\">September</option>\n              <option value=\"10\">October</option>\n              <option value=\"11\">November</option>\n              <option value=\"12\">December</option>\n            </Field>\n          </InpWrapper>\n          <InpWrapper>\n            <Field as={Select} name=\"year\">\n              <option value=\"year\" disabled={true}>\n                Year\n              </option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2022\">2022</option>\n              <option value=\"2023\">2023</option>\n              <option value=\"2024\">2024</option>\n              <option value=\"2025\">2025</option>\n              <option value=\"2026\">2026</option>\n              <option value=\"2027\">2027</option>\n              <option value=\"2028\">2028</option>\n              <option value=\"2029\">2029</option>\n              <option value=\"2030\">2030</option>\n            </Field>\n          </InpWrapper>\n        </FormEl>\n      </Formik>\n    </div>\n  );\n};\n\nexport default FormFilter;\n","import styled from 'styled-components';\nimport theme from 'theme/theme';\n\nexport const TableHeader = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  background-color: ${theme.colors.secondaryBg};\n  border-radius: 30px;\n`;\nexport const TableHeaderItem = styled.div`\n  padding: 15px 20px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  /* display: flex;\n  justify-content: space-between; */\n`;\nexport const Transaction = styled.div`\n  height: 54px;\n  padding: 15px 20px;\n  display: flex;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.13;\n  align-items: center;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n`;\n\nexport const IconCol = styled.span`\n  height: 24px;\n  width: 24px;\n  margin-right: 16px;\n  background-color: ${props => (props.color ? props.color : 'grey')};\n  border-radius: 2px;\n`;\n\nexport const ItemCategory = styled.span`\n  margin-right: auto;\n`;\n\nexport const ItemAmount = styled.span``;\n\nexport const Totals = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 20px;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const TotalCategory = styled.span``;\n\nexport const TotalAmountExp = styled.span`\n  color: ${theme.colors.expenseColor};\n`;\nexport const TotalAmountInc = styled.span`\n  color: ${theme.colors.accentPrimary};\n`;\n","import React from 'react';\nimport {\n  TableHeader,\n  TableHeaderItem,\n  Transaction,\n  IconCol,\n  ItemCategory,\n  ItemAmount,\n  Totals,\n  TotalCategory,\n  TotalAmountExp,\n  TotalAmountInc,\n} from './Table.styled';\nimport { numberSpace } from 'helpers';\nimport theme from 'theme/theme';\n\nconst Table = ({ incomingData, totals }) => {\n  const transactions = [];\n  for (let i = 0; i < incomingData.length; i += 1) {\n    transactions.push(\n      <Transaction key={incomingData[i]._id}>\n        <IconCol\n          color={theme.doughnutColors[i] ?? theme.doughnutColors[i - 38]}\n        />\n        <ItemCategory>{incomingData[i].category}</ItemCategory>\n        <ItemAmount>{numberSpace(incomingData[i].amount)}</ItemAmount>\n      </Transaction>\n    );\n  }\n\n  return (\n    <div>\n      <TableHeader>\n        <TableHeaderItem>Category</TableHeaderItem>\n        <TableHeaderItem>Sum</TableHeaderItem>\n      </TableHeader>\n      {transactions}\n      <Totals>\n        <TotalCategory>Expenses:</TotalCategory>\n        <TotalAmountExp>{numberSpace(totals.expenses)}</TotalAmountExp>\n      </Totals>\n      <Totals>\n        <TotalCategory>Income:</TotalCategory>\n        <TotalAmountInc>{numberSpace(totals.income)}</TotalAmountInc>\n      </Totals>\n    </div>\n  );\n};\nexport default Table;\n","import styled from 'styled-components';\nimport theme from 'theme/theme';\nimport device from 'assets/breakpoints/device';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    gap: 32px;\n  }\n  @media ${device.desktop} {\n    margin-top: 32px;\n    margin-left: 69px;\n    flex-basis: 715px;\n  }\n`;\n\nexport const Column = styled.div`\n  &:nth-child(1) {\n    @media ${device.tablet} {\n      flex-basis: 45%;\n    }\n    @media ${device.desktop} {\n      flex-basis: 35%;\n    }\n  }\n  &:nth-child(2) {\n    flex-grow: 1;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 8px;\n  font-family: ${theme.fontFamily.poppins};\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  @media ${device.desktop} {\n    margin-left: 15px;\n  }\n`;\n","import React from 'react';\nimport Chart from './Chart/Chart';\nimport FormFilter from './FormFilter/FormFilter';\nimport Table from './Table/Table';\nimport { Section, Title, Column } from './DiagramTab.styled';\n\nconst DiagramTab = () => {\n  const incomingData = [\n    { _id: 1, category: 'Main expenses', amount: 11000.12 },\n    { _id: 2, category: 'Car', amount: 800 },\n    { _id: 3, category: 'Products', amount: 5600.56 },\n    { _id: 5, category: 'Self care', amount: 2513.32 },\n    { _id: 4, category: 'Child care', amount: 9645.0 },\n    { _id: 6, category: 'Household products', amount: 6561.0 },\n    { _id: 7, category: 'Education', amount: 455.56 },\n    { _id: 8, category: 'Leisure', amount: 1000.02 },\n    { _id: 9, category: 'Other expenses', amount: 4548.0 },\n    { _id: 9, category: 'Entertainment', amount: 2328.0 },\n  ];\n\n  return (\n    <Section>\n      <Column>\n        <Title>Statistics</Title>\n        <Chart balance={26500} incomingData={incomingData} />\n      </Column>\n      <Column>\n        <FormFilter />\n        <Table\n          incomingData={incomingData}\n          totals={{ expenses: 22549.24, income: 27350.0 }}\n        />\n      </Column>\n    </Section>\n  );\n};\nexport default DiagramTab;\n"],"names":["ChartContainer","styled","DoughnutBalance","numberSpace","number","units","toFixed","toString","slice","thousands","millions","ChartJS","ArcElement","Tooltip","balance","incomingData","data","labels","map","trans","category","datasets","amount","backgroundColor","theme","borderColor","borderWidth","options","cutout","FormEl","Form","device","InpWrapper","arrowDown","Select","props","initialValues","month","year","onSubmit","as","name","value","disabled","TableHeader","TableHeaderItem","Transaction","IconCol","color","ItemCategory","ItemAmount","Totals","TotalCategory","TotalAmountExp","TotalAmountInc","totals","transactions","i","length","push","_id","expenses","income","Section","Column","Title"],"sourceRoot":""}