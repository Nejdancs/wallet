{"version":3,"file":"static/js/74.7a98e492.chunk.js","mappings":"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","sources":["components/HomeTab/TabColumns.jsx","components/HomeTab/testData.js","components/HomeTab/MobileTab/MobileTab.styled.jsx","components/HomeTab/MobileTab/MobileTab.jsx","components/HomeTab/NoTransactions/NoTransactions.styled.jsx","components/HomeTab/NoTransactions/NoTransactions.jsx","components/HomeTab/HomeTab.styled.jsx","components/HomeTab/HomeTab.jsx"],"sourcesContent":["export const TAB_COLUMNS = [\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n    disableFilters: true,\n    sticky: \"centre\",\n  },\n  {\n    Header: \"Type\",\n    accessor: \"type\",\n    sticky: \"centre\",\n  },\n  {\n    Header: \"Category\",\n    accessor: \"category\",\n    sticky: \"centre\",\n  },\n  {\n    Header: \"Comment\",\n\n    accessor: \"comment\",\n  },\n  {\n    Header: \"Sum\",\n    accessor: \"amount\",\n    sticky: \"right\",\n  },\n  {\n    Header: \"Balance\",\n    accessor: \"balance\",\n  },\n];","export const testData = [\n    { date: '04.01.19', type: '+', category: 'other', comment: 'gift', amount: '300.00', balance: '6900.00' },\n    { date: '05.01.19', type: '-', category: 'car', comment: 'oil', amount: '200.00', balance: '6700.00' },\n    { date: '06.01.19', type: '-', category: 'products', comment: 'meat', amount: '1000.00', balance: '7700.00'},\n];","import styled from 'styled-components';\n\nexport const MobileTable = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  display: table;\n  table-layout: fixed;\n  width: 100%;\n`;\n\nexport const TableBody = styled.tbody`\n  width: 100%;\n  border-left: 5px solid\n    ${p =>\n      p.type === '+'\n        ? p.theme.colors.incomeColor\n        : p.theme.colors.expenseColor};\n`;\n\nexport const ColHeader = styled.td`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.5;\n  padding: 10px 15px;\n`;\n\nexport const Column = styled.td`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: right;\n  word-wrap: break-word;\n  color: #000;\n  padding: 10px 20px 10px 0;\n`;\n\nexport const TabRow = styled.tr`\n  &:not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n    box-shadow: 0px 1px 0px rgb(255 255 255 / 60%);\n  }\n`;\n\nexport const Table = styled.table`\n  background-color: #ffffff;\n  border-radius: 10px;\n  width: 100%;\n  border-collapse: collapse;\n  overflow: hidden;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  td {\n    border: none !important;\n  }\n`;\n","import React, { useEffect, useMemo } from 'react';\nimport { useSortBy, useTable } from 'react-table';\nimport { testData } from '../testData';\nimport { TAB_COLUMNS } from '../TabColumns';\nimport {\n  MobileTable,\n  Table,\n  TableBody,\n  TabRow,\n  ColHeader,\n  Column,\n} from './MobileTab.styled';\n\nconst MobileTab = () => {\n  const columns = useMemo(() => TAB_COLUMNS, []);\n  const data = testData;\n  const { getTableProps, getTableBodyProps, rows } = useTable(\n    { columns, data },\n    useSortBy\n  );\n\n  return (\n    <>\n      <MobileTable>\n        {rows.map((row, i) => {\n          return (\n            <Table key={i} {...getTableProps()}>\n              <TableBody\n                type={data[i].type}\n                key={row.id}\n                {...getTableBodyProps()}\n              >\n                <TabRow>\n                  <ColHeader>Date</ColHeader>\n                  <Column>{data[i].date}</Column>\n                </TabRow>\n                <TabRow>\n                  <ColHeader>Type</ColHeader>\n                  <Column>{data[i].type}</Column>\n                </TabRow>\n                <TabRow>\n                  <ColHeader>Category</ColHeader>\n                  <Column>{data[i].category}</Column>\n                </TabRow>\n                <TabRow>\n                  <ColHeader>Comment</ColHeader>\n                  <Column>{data[i].comment}</Column>\n                </TabRow>\n                <TabRow>\n                  <ColHeader>Sum</ColHeader>\n                  <Column\n                    style={\n                      data[i].type === '+'\n                        ? { color: '#24cca7' }\n                        : { color: '#ff6596' }\n                    }\n                  >\n                    {data[i].amount}\n                  </Column>\n                </TabRow>\n                <TabRow>\n                  <ColHeader>Balance</ColHeader>\n                  <Column>{data[i].balance}</Column>\n                </TabRow>\n              </TableBody>\n            </Table>\n          );\n        })}\n      </MobileTable>\n    </>\n  );\n};\n\nexport default MobileTab;\n","import styled from \"styled-components\";\nimport device from 'assets/breakpoints/device';\n\nexport const NoTrContainer = styled.div`\n    margin-top: 20px;\n    padding: 20px;\n    text-align: center;\n    @media ${device.tablet} {\n        width: 700px;\n        margin-top: 100px;\n    }\n`;\n\nexport const NoTrMessage = styled.span`\n    font-family: Poppins;\n    font-size: 30px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 45px;\n    letter-spacing: 0em;\n`;","import React from \"react\";\nimport { NoTrContainer, NoTrMessage } from \"./NoTransactions.styled\"\n\nconst NoTransactions = () => {\n  return (\n    <NoTrContainer>\n      <NoTrMessage>Транзакций не найдено</NoTrMessage>\n    </NoTrContainer>\n  );\n};\n\nexport default NoTransactions;","import styled from 'styled-components';\nimport device from 'assets/breakpoints/device';\n\nexport const HomeTabContainer = styled.div`\n  td {\n    border-bottom: 1px solid #dcdcdf;\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  }\n\n  th:last-child,\n  td:last-child {\n    border-right: 0;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 46px;\n    padding-left: 69px;\n  }\n`;\n\nexport const HomeTable = styled.table`\n  width: 100%;\n\n  /* position: absolute;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  color: currentColor;\n  clip: rect(0 0 0 0);\n  overflow: hidden; */\n\n  td {\n    table-layout: fixed;\n    width: 114.66 px;\n    overflow: hidden;\n    word-wrap: break-word;\n    padding: 10px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    text-align: center;\n  }\n\n  td:nth-child(1) {\n    color: #000!important;\n  }\n\n  td:nth-child(2) {\n    color: #000!important;\n  }\n\n  td:nth-child(3) {\n    text-align: left;\n    color: #000!important;\n  }\n\n  th:nth-child(3) {\n    text-align: left;\n  }\n\n  td:nth-child(4) {\n    text-align: left;\n    color: #000!important;\n  }\n\n  td:nth-child(5) {\n    text-align: right;\n    font-weight: 700;\n  }\n\n  td:nth-child(6) {\n    text-align: right;\n    padding-right: 20px;\n    color: #000!important;\n  }\n\n  th:nth-child(5) {\n    text-align: right;\n  }\n\n  th:nth-child(6) {\n    text-align: right;\n    padding-right: 20px;\n  }\n\n  @media ${device.tablet} {\n    margin: 0px;\n    position: static;\n    display: table;\n    border-spacing: 0px;\n    height: auto;\n    table-layout: fixed;\n  }\n`;\n\nexport const HomeTabHeader = styled.thead`\n  th:first-child {\n    background: #ffffff;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  th:last-child {\n    background: #ffffff;\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n\n  th {\n    padding: 10px;\n    text-align: center;\n  }\n\n  th:not(:first-child) {\n    background: #ffffff;\n  }\n`;\n\nexport const ColumnHeader = styled.th`\n  font-family: Circe;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 27px;\n`;\n\nexport const HomeTr = styled.tr`\n  &:not(:nth-child(5)) {\n    color: #000;\n  }\n`;\n\nexport const HomeTabColumn = styled.td`\n  font-family: Circe;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  text-align: right;\n  word-wrap: break-word;\n  color: #000;\n\n  th {\n    table-layout: fixed;\n    width: 114.66 px;\n    overflow: hidden;\n    word-wrap: break-word;\n\n    padding: 10px;\n    text-align: center;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport Media from 'react-media';\nimport { useSortBy, useTable } from 'react-table';\nimport { TAB_COLUMNS } from './TabColumns';\nimport { nanoid } from 'nanoid';\n\nimport BtnAddTransaction from '../ButtonAddTransactions/ButtonAddTransactions';\nimport { testData } from './testData';\nimport MobileTab from './MobileTab/MobileTab';\nimport NoTransactions from './NoTransactions/NoTransactions';\n\nimport {\n  HomeTabContainer,\n  HomeTable,\n  HomeTabHeader,\n  ColumnHeader,\n  HomeTr,\n  HomeTabColumn,\n} from './HomeTab.styled';\n// import API from 'services/api/api';\n\nconst HomeTab = () => {\n  const columns = useMemo(() => TAB_COLUMNS, []);\n  const data = testData;\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data }, useSortBy);\n\n  return (\n    <>\n      {data.length > 0 ? (\n        <>\n          <Media\n            queries={{\n              mobile: '(min-width: 768px)',\n            }}\n          >\n            {({ mobile }) => (\n              <HomeTabContainer>\n                {!mobile ? (\n                  <MobileTab />\n                ) : (\n                  <HomeTable {...getTableProps()}>\n                    <HomeTabHeader>\n                      {headerGroups.map(headerGroup => (\n                        <tr\n                          key={() => {\n                            nanoid();\n                          }}\n                          {...headerGroup.getHeaderGroupProps()}\n                        >\n                          {headerGroup.headers.map(column => (\n                            <ColumnHeader\n                              key={() => {\n                                nanoid();\n                              }}\n                              {...column.getHeaderProps(\n                                column.getSortByToggleProps()\n                              )}\n                            >\n                              {column.render('Header')}\n                            </ColumnHeader>\n                          ))}\n                        </tr>\n                      ))}\n                    </HomeTabHeader>\n\n                    <tbody {...getTableBodyProps()}>\n                      {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                          <HomeTr\n                            key={() => {\n                              nanoid();\n                            }}\n                            {...row.getRowProps()}\n                          >\n                            {row.cells.map(cell => {\n                              return (\n                                <HomeTabColumn\n                                  key={() => {\n                                    nanoid();\n                                  }}\n                                  style={\n                                    row.values.type === '+'\n                                      ? { color: '#24cca7' }\n                                      : { color: '#ff6596' }\n                                  }\n                                  {...cell.getCellProps()}\n                                >\n                                  {cell.render('Cell')}\n                                </HomeTabColumn>\n                              );\n                            })}\n                          </HomeTr>\n                        );\n                      })}\n                    </tbody>\n                  </HomeTable>\n                )}\n              </HomeTabContainer>\n            )}\n          </Media>\n        </>\n      ) : (\n        <NoTransactions />\n      )}\n      <BtnAddTransaction />\n    </>\n  );\n};\n\nexport default HomeTab;\n"],"names":["TAB_COLUMNS","Header","accessor","disableFilters","sticky","testData","date","type","category","comment","amount","balance","MobileTable","styled","TableBody","p","theme","colors","incomeColor","expenseColor","ColHeader","Column","TabRow","Table","columns","useMemo","data","useTable","useSortBy","getTableProps","getTableBodyProps","rows","map","row","i","style","color","id","NoTrContainer","device","NoTrMessage","HomeTabContainer","HomeTable","HomeTabHeader","ColumnHeader","HomeTr","HomeTabColumn","headerGroups","prepareRow","length","queries","mobile","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","nanoid","getRowProps","cells","cell","values","getCellProps"],"sourceRoot":""}