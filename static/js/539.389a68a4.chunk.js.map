{"version":3,"file":"static/js/539.389a68a4.chunk.js","mappings":"8JAKMA,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAD,OAAOA,GAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,ICGpC,IAAMM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAaC,EAAOC,GACrD,IAAMC,GLJCC,EAAAA,EAAAA,YAAWf,GAAegB,cKK3BC,GAAcF,EAAAA,EAAAA,YAAWR,GACzBW,GAAkBH,EAAAA,EAAAA,YAAWd,GAC7BkB,GAAsBJ,EAAAA,EAAAA,YAAWrB,GAAqBK,cACtDqB,GAAmBC,EAAAA,EAAAA,UAIzBR,EAAsBA,GAAuBI,EAAYK,UACpDF,EAAiBG,SAAWV,IAC7BO,EAAiBG,QAAUV,EAAoBH,EAAW,CACtDC,YAAAA,EACAG,OAAAA,EACAF,MAAAA,EACAY,WAAYN,EAAkBA,EAAgBO,QAAKC,EACnDC,wBAAuBT,IACW,IAA5BA,EAAgBU,QAEtBT,oBAAAA,KAGR,IAAMH,EAAgBI,EAAiBG,QAUvC,OATAnB,GAA0B,WACtBY,GAAiBA,EAAca,aAEnCvB,EAAAA,EAAAA,YAAU,WACFU,GAAiBA,EAAcc,gBAC/Bd,EAAcc,eAAeC,oBAGrC3B,GAA0B,kBAAM,kBAAMY,GAAiBA,EAAcgB,OAAO,cAAY,IACjFhB,ECvCX,SAASiB,EAAYC,GACjB,MAAuB,kBAARA,GACXC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,WCClD,SAASK,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,GCJlD,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,MCE7C,IAAMC,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsBlC,GAC3B,OAAQ+B,EAAoB/B,EAAMmC,UAC9BF,EAAaG,MAAK,SAACC,GAAD,OAAUV,EAAe3B,EAAMqC,OAEzD,SAASC,EAActC,GACnB,OAAOuC,QAAQL,EAAsBlC,IAAUA,EAAMwC,UCdzD,SAASC,EAAuBzC,GAC5B,MCFJ,SAAgCA,EAAO0C,GACnC,GAAIR,EAAsBlC,GAAQ,CAC9B,IAAQgB,EAAqBhB,EAArBgB,QAASmB,EAAYnC,EAAZmC,QACjB,MAAO,CACHnB,SAAqB,IAAZA,GAAqBW,EAAeX,GACvCA,OACAF,EACNqB,QAASR,EAAeQ,GAAWA,OAAUrB,GAGrD,OAAyB,IAAlBd,EAAM2C,QAAoBD,EAAU,GDRdE,CAAuB5C,GAAOG,EAAAA,EAAAA,YAAWf,IAA9D4B,EAAR,EAAQA,QAASmB,EAAjB,EAAiBA,QACjB,OAAOU,EAAAA,EAAAA,UAAQ,iBAAO,CAAE7B,QAAAA,EAASmB,QAAAA,KAAY,CAACW,EAA0B9B,GAAU8B,EAA0BX,KAEhH,SAASW,EAA0BC,GAC/B,OAAOlB,MAAMC,QAAQiB,GAAQA,EAAKC,KAAK,KAAOD,EETlD,IAAME,EAAmB,SAACC,GAAD,MAAgB,CACrCC,UAAW,SAACnD,GAAD,OAAWkD,EAAUd,MAAK,SAACC,GAAD,QAAYrC,EAAMqC,SAErDe,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDK,UAAWL,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJM,KAAMN,EAAiB,CAAC,SACxBO,KAAMP,EAAiB,CAAC,OAAQ,iBAChCQ,MAAOR,EAAiB,CAAC,eACzBS,MAAOT,EAAiB,CAAC,aAAc,eAAgB,eACvDU,IAAKV,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DW,IAAKX,EAAiB,CAClB,QACA,aACA,oBACA,aAEJY,OAAQZ,EAAiB,CACrB,cACA,kBACA,qBCpBR,SAASa,EAAYC,GACjB,IAAMzC,GAAMb,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBa,EAAIX,UACJW,EAAIX,QAAUoD,KAEXzC,EAAIX,QCTf,IAAMqD,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBrD,EAAK,ECDT,IAAMsD,GAAqBpF,EAAAA,EAAAA,eAAc,I,uCCAnCqF,EAAAA,SAAAA,I,8IAIF,WACI,MAAiCC,KAAKrE,MAA9BI,EAAR,EAAQA,cAAeJ,EAAvB,EAAuBA,MAGvB,OAFII,GACAA,EAAckE,SAAStE,GACpB,O,gCAEX,c,oBACA,WACI,OAAOqE,KAAKrE,MAAMuE,a,EAZpBH,CAA6BI,EAAAA,WCG7BC,GAA2B1F,EAAAA,EAAAA,eAAc,ICLzC2F,EAAwBC,OAAOC,IAAI,yBC0BzC,SAASC,EAAT,GAA6I,IAA5GC,EAA4G,EAA5GA,kBAAmB7E,EAAyF,EAAzFA,oBAAqB8E,EAAoE,EAApEA,0BAA2BC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,eAAgBnF,EAAc,EAAdA,UAC3HgF,GCzBJ,SAAsBI,GAClB,IAAK,IAAMC,KAAOD,EACF,8BAARC,EACA/B,EAAmB2B,0BAA4BG,EAASC,GAGxD/B,EAAmB+B,GAAKrF,UAAYoF,EAASC,GDmBhCC,CAAaN,GAuDlC,IAAMO,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyBtF,EAAOuF,GAC5B,IAAMC,GAAiB,2BAChBrF,EAAAA,EAAAA,YAAWrB,IACXkB,GAFa,IAGhByF,SAAUC,EAAY1F,KAElBd,EAAasG,EAAbtG,SACJgG,EAAW,KACTxC,EAAUD,EAAuBzC,GAYjC2F,EAAezG,OAAW4B,EL3C7BgD,GAAY,WACf,GAAIE,EAAsBE,eACtB,OAAOrD,OK6CLd,EAAckF,EAAejF,EAAOd,GAC1C,IAAKA,GAAYI,EAAW,CAOxBoD,EAAQtC,cAAgBP,EAAiBC,EAAWC,EAAayF,EAAgBvF,GAKjF,IAAM2F,GAAiBzF,EAAAA,EAAAA,YAAWR,GAAaC,OACzCiG,GAA2B1F,EAAAA,EAAAA,YAAWsE,GACxC/B,EAAQtC,gBACR8E,EAAWxC,EAAQtC,cAAcgF,aAEjCI,EAAgBI,EAAgBd,EAAmBa,EAAcZ,GAC7D3B,EAAmB2B,0BAA2Bc,IAO1D,OAAQC,EAAAA,cAAoB1B,EAAsB,CAAEhE,cAAesC,EAAQtC,cAAeJ,MAAOwF,GAC7FN,EACAY,EAAAA,cAAoB1G,EAAc2G,SAAU,CAAEC,MAAOtD,GAAWsC,EAAUlF,EAAWE,EAAO2F,EEzExG,SAAsB5F,EAAaK,EAAemF,GAC9C,OAAOU,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYnG,EAAYoG,OAASpG,EAAYoG,MAAMD,GAC/C9F,IACA8F,EACM9F,EAAc+F,MAAMD,GACpB9F,EAAcgG,WAEpBb,IAC2B,oBAAhBA,EACPA,EAAYW,GAEP7E,EAAYkE,KACjBA,EAAY5E,QAAUuF,MASlC,CAAC9F,IFmDiHiG,CAAatG,EAAa2C,EAAQtC,cAAemF,GAAcxF,EAAab,EAAUwD,EAAQtC,oBAIhN,OADAiF,EAAoBX,GAAyB5E,EACtCuF,EAEX,SAASK,EAAT,GAAmC,IAAZD,EAAY,EAAZA,SACba,GAAgBnG,EAAAA,EAAAA,YAAWgE,GAAoBtD,GACrD,OAAOyF,QAA8BxF,IAAb2E,EAClBa,EAAgB,IAAMb,EACtBA,EG1EV,SAASc,EAAkBC,GACvB,SAASC,EAAO3G,GAA6C,IAAlC4G,EAAkC,uDAAJ,GACrD,OAAO7B,EAAsB2B,EAAa1G,EAAW4G,IAEzD,GAAqB,qBAAVC,MACP,OAAOF,EAMX,IAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,SAACC,EAAS5B,GAOX,OAHKyB,EAAeI,IAAI7B,IACpByB,EAAeK,IAAI9B,EAAKsB,EAAOtB,IAE5ByB,EAAeE,IAAI3B,MCrCtC,IAAM+B,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAerH,GACpB,MAKqB,kBAAdA,IAIHA,EAAUsH,SAAS,SAOvBF,EAAqBG,QAAQvH,IAAc,GAIvC,QAAQwH,KAAKxH,ICvBrB,IAAMyH,EAAkB,GCGxB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBxC,EAA7B,GAAwD,IAApByC,EAAoB,EAApBA,OAAQnC,EAAY,EAAZA,SACxC,OAAQgC,EAAeT,IAAI7B,IACvBA,EAAI0C,WAAW,YACbD,QAAuB9G,IAAb2E,OACL8B,EAAgBpC,IAAgB,YAARA,GCPvC,IAAM2C,EAAgB,SAAC9B,GAAD,SAAwB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAM+B,c,UCElFC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAKpBC,EAAqB,SAACC,EAAGC,GAAJ,OAAUf,EAAmBH,QAAQiB,GAAKd,EAAmBH,QAAQkB,ICRhG,SAASC,EAAcrD,GACnB,OAAOA,EAAI0C,WAAW,MCD1B,IAAMY,EAAiB,SAACzC,EAAO0C,GAC3B,OAAOA,GAAyB,kBAAV1C,EAChB0C,EAAKC,UAAU3C,GACfA,GCNJ4C,EAAQ,SAACC,EAAKC,GAAN,OAAc,SAAClH,GAAD,OAAOmH,KAAKD,IAAIC,KAAKF,IAAIjH,EAAGkH,GAAMD,KACxDG,EAAW,SAACpH,GAAD,OAAQA,EAAI,EAAIqH,OAAOrH,EAAEsH,QAAQ,IAAMtH,GAClDuH,EAAa,uBACbC,EAAa,+HACbC,EAAmB,mHACzB,SAASC,EAAS1H,GACd,MAAoB,kBAANA,ECJlB,IAAM2H,GAAiB,SAACC,GAAD,MAAW,CAC9BlC,KAAM,SAAC1F,GAAD,OAAO0H,EAAS1H,IAAMA,EAAE6H,SAASD,IAAiC,IAAxB5H,EAAE8H,MAAM,KAAKC,QAC7DC,MAAOC,WACPlB,UAAW,SAAC/G,GAAD,gBAAUA,GAAV,OAAc4H,MAEvBM,GAAUP,GAAe,OACzBQ,GAAUR,GAAe,KACzBS,GAAKT,GAAe,MACpBU,GAAKV,GAAe,MACpBW,GAAKX,GAAe,MACpBY,GAAqB5I,OAAO6I,OAAO7I,OAAO6I,OAAO,GAAIL,IAAU,CAAEH,MAAO,SAAChI,GAAD,OAAOmI,GAAQH,MAAMhI,GAAK,KAAK+G,UAAW,SAAC/G,GAAD,OAAOmI,GAAQpB,UAAc,IAAJ/G,MCV3IyI,GAAS,CACX/C,KAAM,SAAC1F,GAAD,MAAoB,kBAANA,GACpBgI,MAAOC,WACPlB,UAAW,SAAC/G,GAAD,OAAOA,IAEhB0I,GAAQ/I,OAAO6I,OAAO7I,OAAO6I,OAAO,GAAIC,IAAS,CAAE1B,UAAWC,EAAM,EAAG,KACvE2B,GAAQhJ,OAAO6I,OAAO7I,OAAO6I,OAAO,GAAIC,IAAS,CAAEG,QAAS,ICN5DC,IAAM,kBACLJ,IADE,IAEL1B,UAAWI,KAAK2B,QCDdC,GAAmB,CAErBC,YAAaZ,GACba,eAAgBb,GAChBc,iBAAkBd,GAClBe,kBAAmBf,GACnBgB,gBAAiBhB,GACjBiB,aAAcjB,GACdkB,OAAQlB,GACRmB,oBAAqBnB,GACrBoB,qBAAsBpB,GACtBqB,wBAAyBrB,GACzBsB,uBAAwBtB,GAExBuB,MAAOvB,GACPwB,SAAUxB,GACVyB,OAAQzB,GACR0B,UAAW1B,GACX2B,KAAM3B,GACN4B,IAAK5B,GACL6B,MAAO7B,GACP8B,OAAQ9B,GACR+B,KAAM/B,GAENgC,QAAShC,GACTiC,WAAYjC,GACZkC,aAAclC,GACdmC,cAAenC,GACfoC,YAAapC,GACbqC,OAAQrC,GACRsC,UAAWtC,GACXuC,YAAavC,GACbwC,aAAcxC,GACdyC,WAAYzC,GAEZ0C,OAAQ5C,GACR6C,QAAS7C,GACT8C,QAAS9C,GACT+C,QAAS/C,GACTS,MAAAA,GACAuC,OAAQvC,GACRwC,OAAQxC,GACRyC,OAAQzC,GACR0C,KAAMnD,GACNoD,MAAOpD,GACPqD,MAAOrD,GACPsD,SAAUpD,GACVqD,WAAYrD,GACZsD,WAAYtD,GACZuD,WAAYvD,GACZ/B,EAAG+B,GACH9B,EAAG8B,GACH7B,EAAG6B,GACHwD,YAAaxD,GACb5B,qBAAsB4B,GACtByD,QAASnD,GACToD,QAASvD,GACTwD,QAASxD,GACTyD,QAAS5D,GAET6D,OAAQpD,GAERqD,YAAaxD,GACbyD,cAAezD,GACf0D,WAAYvD,IC7DhB,SAASwD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA2DJ,EAA3DI,MAAOC,EAAoDL,EAApDK,KAAM5F,EAA8CuF,EAA9CvF,UAAW6F,EAAmCN,EAAnCM,cAAeC,EAAoBP,EAApBO,gBAC/CD,EAAc7E,OAAS,EAEvB,IAAI+E,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMzJ,KAAOgJ,EAAc,CAC5B,IAAMnI,EAAQmI,EAAahJ,GAI3B,GAAIqD,EAAcrD,GACdoJ,EAAKpJ,GAAOa,MADhB,CAKA,IAAM6I,EAAYlE,GAAiBxF,GAC7B2J,EAAcrG,EAAezC,EAAO6I,GAC1C,GAAIpH,EAAeT,IAAI7B,GAAM,CAMzB,GAJAuJ,GAAe,EACf/F,EAAUxD,GAAO2J,EACjBN,EAAcO,KAAK5J,IAEdyJ,EACD,SAEA5I,KAAW6I,EAAUrE,SAAW,KAChCoE,GAAkB,QAEjBzJ,EAAI0C,WAAW,WAEpB8G,GAAqB,EACrBF,EAAgBtJ,GAAO2J,GAGvBR,EAAMnJ,GAAO2J,GAmBrB,GAhBKX,EAAaxF,YACV+F,GAAgBL,EAChBC,EAAM3F,URrClB,aAA0HqG,EAAoBX,GAAmB,IAAvI1F,EAAuI,EAAvIA,UAAW6F,EAA4H,EAA5HA,cAA4H,IAAxGS,2BAAAA,OAAwG,aAArEC,mBAAAA,OAAqE,SAEzJC,EAAkB,GAEtBX,EAAcY,KAAK/G,GAJ0I,gBAM3ImG,GAN2I,IAM7J,2BAAiC,KAAtBrJ,EAAsB,QAC7BgK,GAAmB,GAAJ,OAAOnH,EAAe7C,IAAQA,EAA9B,YAAqCwD,EAAUxD,GAA/C,OAP0I,8BAqB7J,OAZI8J,IAA+BtG,EAAUR,IACzCgH,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkB1F,EAAWqG,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,EQgBmBG,CAAepB,EAAOE,EAASQ,EAAiBP,GAE7DC,EAAM3F,YAKX2F,EAAM3F,UAAY,SAOtBgG,EAAoB,CACpB,MAA2DF,EAAnDf,QAAAA,OAAR,MAAkB,MAAlB,IAA2De,EAAlCd,QAAAA,OAAzB,MAAmC,MAAnC,IAA2Dc,EAAjBb,QAAAA,OAA1C,MAAoD,EAApD,EACAU,EAAMG,gBAAN,UAA2Bf,EAA3B,YAAsCC,EAAtC,YAAiDC,ICvEzD,IAAM2B,GAAwB,iBAAO,CACjCjB,MAAO,GACP3F,UAAW,GACX6F,cAAe,GACfC,gBAAiB,GACjBF,KAAM,KCCV,SAASiB,GAAkBC,EAAQC,EAAQ1P,GACvC,IAAK,IAAMmF,KAAOuK,EACT5H,EAAc4H,EAAOvK,KAAUwC,EAAoBxC,EAAKnF,KACzDyP,EAAOtK,GAAOuK,EAAOvK,IAWjC,SAASwK,GAAS3P,EAAOD,EAAab,GAClC,IACMoP,EAAQ,GAMd,OAFAkB,GAAkBlB,EALAtO,EAAMsO,OAAS,GAKGtO,GACpCuB,OAAO6I,OAAOkE,EAdlB,WAAuDvO,EAAab,GAAU,IAA5CmP,EAA4C,EAA5CA,kBAC9B,OAAOxL,EAAAA,EAAAA,UAAQ,WACX,IAAMqL,EDfuB,CACjCI,MAAO,GACP3F,UAAW,GACX6F,cAAe,GACfC,gBAAiB,GACjBF,KAAM,ICYF,OADAN,GAAgBC,EAAOnO,EAAa,CAAEkP,4BAA6B/P,GAAYmP,GACxE9M,OAAO6I,OAAO,GAAI8D,EAAMK,KAAML,EAAMI,SAC5C,CAACvO,IASiB6P,CAAuB5P,EAAOD,EAAab,IACzDc,EAAM6P,gBAAkB7P,EAAM6P,gBAAgBvB,GAASA,EAElE,SAASwB,GAAa9P,EAAOD,EAAab,GAEtC,IAAM6Q,EAAY,GACZzB,EAAQqB,GAAS3P,EAAOD,EAAab,GAgB3C,OAfIc,EAAMwD,OAA+B,IAAvBxD,EAAMgQ,eAEpBD,EAAUE,WAAY,EAEtB3B,EAAM4B,WACF5B,EAAM6B,iBACF7B,EAAM8B,mBACF,OAEZ9B,EAAM+B,aACa,IAAfrQ,EAAMwD,KACA,OADN,cAE4B,MAAfxD,EAAMwD,KAAe,IAAM,MAEhDuM,EAAUzB,MAAQA,EACXyB,ECjDX,IAwBMO,GAAmB,IAAI5I,IAAJ,CACrB,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,gBAxCqB,OAZL,CAChB,cACA,kBACA,kBACA,YANa,CAAC,WAAY,QAAS,aAAc,eAV9B,CACnB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,eAGa,CAAC,QAAS,aAAc,oBAAqB,cAmE9D,SAAS6I,GAAkBpL,GACvB,OAAOmL,GAAiBtJ,IAAI7B,GC7EhC,IACiCqL,GAD7BC,GAAgB,SAACtL,GAAD,OAAUoL,GAAkBpL,IAoBhD,KAnBiCqL,GAyBLE,QAAQ,0BAA0BlG,WArB1DiG,GAAgB,SAACtL,GAAD,OAASA,EAAI0C,WAAW,OAAS0I,GAAkBpL,GAAOqL,GAAYrL,KAuB1F,MAAOwL,KAGP,SAASC,GAAY5Q,EAAO6Q,EAAOC,GAC/B,IAAMC,EAAgB,GACtB,IAAK,IAAM5L,KAAOnF,GACVyQ,GAActL,KACU,IAAvB2L,GAA+BP,GAAkBpL,KAChD0L,IAAUN,GAAkBpL,IAE7BnF,EAAK,WAAiBmF,EAAI0C,WAAW,aACtCkJ,EAAc5L,GAAOnF,EAAMmF,IAGnC,OAAO4L,E,eC1CX,SAASC,GAAWC,EAAQC,EAAQvF,GAChC,MAAyB,kBAAXsF,EACRA,EACAjH,GAAGrB,UAAUuI,EAASvF,EAAOsF,GCHvC,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAcpD,EAAvB,EAEaE,EAASmD,EAAUlD,GAAmB,IAFnBmD,EAEmB,EAFnBA,MAAOC,EAEY,EAFZA,MAAO/D,EAEK,EAFLA,QAASC,EAEJ,EAFIA,QAAS+D,EAEb,EAFaA,WAEb,IAFyBC,YAAAA,OAEzB,MAFuC,EAEvC,MAF0CC,WAAAA,OAE1C,MAFuD,EAEvD,EAM/C,GALA3D,GAAgBC,GAD+B,cAChBE,EAASC,GAKpCkD,EACIrD,EAAMI,MAAMuD,UACZ3D,EAAM4D,MAAMD,QAAU3D,EAAMI,MAAMuD,aAF1C,CAMA3D,EAAM4D,MAAQ5D,EAAMI,MACpBJ,EAAMI,MAAQ,GACd,IAAQwD,EAA6B5D,EAA7B4D,MAAOxD,EAAsBJ,EAAtBI,MAAOyD,EAAe7D,EAAf6D,WAKlBD,EAAMnJ,YACFoJ,IACAzD,EAAM3F,UAAYmJ,EAAMnJ,kBACrBmJ,EAAMnJ,WAGboJ,SACajR,IAAZ4M,QAAqC5M,IAAZ6M,GAAyBW,EAAM3F,aACzD2F,EAAMG,gBFzBd,SAAgCsD,EAAYrE,EAASC,GACjD,IAAMqE,EAAYhB,GAAWtD,EAASqE,EAAW9J,EAAG8J,EAAWxG,OACzD0G,EAAYjB,GAAWrD,EAASoE,EAAW7J,EAAG6J,EAAWtG,QAC/D,gBAAUuG,EAAV,YAAuBC,GEsBKC,CAAuBH,OAAwBjR,IAAZ4M,EAAwBA,EAAU,QAAiB5M,IAAZ6M,EAAwBA,EAAU,UAG1H7M,IAAV0Q,IACAM,EAAM7J,EAAIuJ,QACA1Q,IAAV2Q,IACAK,EAAM5J,EAAIuJ,QAEK3Q,IAAf4Q,GD3BR,SAAsBI,EAAOnI,GAAqD,IAA7CwI,EAA6C,uDAAnC,EAAGjB,EAAgC,uDAAvB,EAAGkB,IAAoB,yDAE9EN,EAAMJ,WAAa,EAGnB,IAAMW,EAAOD,EAAcjB,GAAWE,GAEtCS,EAAMO,EAAKnB,QAAUlH,GAAGrB,WAAWuI,GAEnC,IAAMQ,EAAa1H,GAAGrB,UAAUgB,GAC1BgI,EAAc3H,GAAGrB,UAAUwJ,GACjCL,EAAMO,EAAKjB,OAAX,UAAuBM,EAAvB,YAAqCC,GCiBjCW,CAAaR,EAAOJ,EAAYC,EAAaC,GAAY,IC3CjE,IAAMW,GAAuB,0BAAC,UPFO,CACjCjE,MAAO,GACP3F,UAAW,GACX6F,cAAe,GACfC,gBAAiB,GACjBF,KAAM,KOHmB,IAEzBuD,MAAO,MCJLP,GAAW,SAACiB,GAAD,MAAwB,kBAARA,GAA0C,QAAtBA,EAAIC,eCMzD,SAASC,GAAY1S,EAAOD,EAAa4S,EAAW7S,GAChD,IAAM8S,GAAc/P,EAAAA,EAAAA,UAAQ,WACxB,IAAMqL,EAAQqE,KAEd,OADAjB,GAAcpD,EAAOnO,EAAa,CAAEkP,4BAA4B,GAASsC,GAASzR,GAAYE,EAAMqO,oBACpG,kBACOH,EAAM4D,OADb,IAEIxD,OAAO,UAAKJ,EAAMI,WAEvB,CAACvO,IACJ,GAAIC,EAAMsO,MAAO,CACb,IAAMuE,EAAY,GAClBrD,GAAkBqD,EAAW7S,EAAMsO,MAAOtO,GAC1C4S,EAAYtE,OAAZ,kBAAyBuE,GAAcD,EAAYtE,OAEvD,OAAOsE,ECdX,SAASE,KAA4C,IAA5BhC,EAA4B,wDAC3C9L,EAAY,SAAClF,EAAWE,EAAO2F,EAAcrE,EAAjC,EAAwDpC,GAAa,IAA7BiP,EAA6B,EAA7BA,aAIhDyE,GAHiBzL,EAAerH,GAChC4S,GACA5C,IAC6B9P,EAAOmO,EAAcjP,EAAUY,GAC5DiR,EAAgBH,GAAY5Q,EAA4B,kBAAdF,EAAwBgR,GAClEiC,GAAe,0BACdhC,GACA6B,GAFW,IAGdtR,IAAAA,IAKJ,OAHIqE,IACAoN,EAAa,sBAAwBpN,IAElCqN,EAAAA,EAAAA,eAAclT,EAAWiT,IAEpC,OAAO/N,ECpBX,IAAMiO,GAAc,SAACC,GAAD,OAASA,EAAIC,QAAQ,kBAAmB,SAASV,eCHrE,SAASW,GAAWC,EAApB,EAA8CC,EAAWC,GAAY,IAAtCjF,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAGlC,IAAK,IAAMpJ,KAFX5D,OAAO6I,OAAOiJ,EAAQ/E,MAAOA,EAAOiF,GAAcA,EAAWC,oBAAoBF,IAE/D/E,EACd8E,EAAQ/E,MAAMmF,YAAYtO,EAAKoJ,EAAKpJ,ICD5C,IAAMuO,GAAsB,IAAIhM,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,eCnBJ,SAASiM,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAMpO,KADXiO,GAAWC,EAASO,OAAa9S,EAAWyS,GAC1BK,EAAY9B,MAC1BuB,EAAQS,aAAcJ,GAAoB1M,IAAI7B,GAA0BA,EAAnB8N,GAAY9N,GAAYyO,EAAY9B,MAAM3M,ICJvG,SAAS4O,GAA4B/T,GACjC,IAAQsO,EAAUtO,EAAVsO,MACF0F,EAAY,GAClB,IAAK,IAAM7O,KAAOmJ,GACVxG,EAAcwG,EAAMnJ,KAASwC,EAAoBxC,EAAKnF,MACtDgU,EAAU7O,GAAOmJ,EAAMnJ,IAG/B,OAAO6O,ECRX,SAASD,GAA4B/T,GACjC,IAAMgU,EAAYC,GAA8BjU,GAChD,IAAK,IAAMmF,KAAOnF,EAAO,CACrB,GAAI8H,EAAc9H,EAAMmF,IAEpB6O,EAD0B,MAAR7O,GAAuB,MAARA,EAAc,OAASA,EAAI+O,cAAgB/O,GACrDnF,EAAMmF,GAGrC,OAAO6O,ECXX,SAASG,GAAwBnU,EAAOoU,EAAY3N,GAAkD,IAA1C4N,EAA0C,uDAA1B,GAAIC,EAAsB,uDAAJ,GAsB9F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsBtT,IAAX2F,EAAuBA,EAASzG,EAAMyG,OAAQ4N,EAAeC,IAM/D,kBAAfF,IACPA,EAAapU,EAAMwC,UAAYxC,EAAMwC,SAAS4R,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBtT,IAAX2F,EAAuBA,EAASzG,EAAMyG,OAAQ4N,EAAeC,IAElFF,ECtBX,IAAMG,GAAoB,SAAC3S,GACvB,OAAOC,MAAMC,QAAQF,ICInB4S,GAA+B,SAAC5S,GAElC,OAAO2S,GAAkB3S,GAAKA,EAAEA,EAAE+H,OAAS,IAAM,EAAI/H,GCCzD,SAAS6S,GAAmBzO,GACxB,IDPmBpE,ECOb8S,EAAiB5M,EAAc9B,GAASA,EAAMc,MAAQd,EAC5D,ODRmBpE,ECQE8S,EDPdnS,QAAQX,GAAkB,kBAANA,GAAkBA,EAAE+S,KAAO/S,EAAEgT,SCQlDF,EAAeE,UACfF,E,sCCOV,IAAMG,GAAqB,SAACC,GAAD,OAAY,SAAC9U,EAAOd,GAC3C,IAAMwD,GAAUvC,EAAAA,EAAAA,YAAWf,GACrBkB,GAAkBH,EAAAA,EAAAA,YAAWd,GAC7B0V,EAAO,kBAbjB,WAAiF/U,EAAO0C,EAASpC,GAAiB,IAA7FyT,EAA6F,EAA7FA,4BAA6BiB,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,QAC3D/G,EAAQ,CACVC,aAAc+G,GAAiBlV,EAAO0C,EAASpC,EAAiByT,GAChEH,YAAaoB,KAKjB,OAHIC,IACA/G,EAAM/H,MAAQ,SAACD,GAAD,OAAc+O,EAAQjV,EAAOkG,EAAUgI,KAElDA,EAKYiH,CAAUL,EAAQ9U,EAAO0C,EAASpC,IACrD,OAAOpB,EAAW6V,IAASjR,EAAYiR,KAE3C,SAASG,GAAiBlV,EAAO0C,EAASpC,EAAiB8U,GACvD,IAAMC,EAAS,GACTC,EAAeF,EAAmBpV,GACxC,IAAK,IAAMmF,KAAOmQ,EACdD,EAAOlQ,GAAOsP,GAAmBa,EAAanQ,IAElD,IAAMnE,EAAqBhB,EAArBgB,QAASmB,EAAYnC,EAAZmC,QACToT,EAA0BrT,EAAsBlC,GAChDwV,EAAkBlT,EAActC,GAClC0C,GACA8S,IACCD,IACiB,IAAlBvV,EAAM2C,eACU7B,IAAZE,IACAA,EAAU0B,EAAQ1B,cACNF,IAAZqB,IACAA,EAAUO,EAAQP,UAE1B,IAAIsT,IAA4BnV,IACE,IAA5BA,EAAgBU,QAGhB0U,GADND,EAA4BA,IAAyC,IAAZzU,GACRmB,EAAUnB,EACvD0U,GACwB,mBAAjBA,IACN3T,EAAoB2T,KACR7T,MAAMC,QAAQ4T,GAAgBA,EAAe,CAACA,IACtDC,SAAQ,SAACvB,GACV,IAAMwB,EAAWzB,GAAwBnU,EAAOoU,GAChD,GAAKwB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8BpG,GAAWmG,EAA1BE,YAAvB,QAAiDF,EAAjD,KACA,IAAK,IAAMzQ,KAAOsK,EAAQ,CACtB,IAAIsG,EAActG,EAAOtK,GACzB,GAAItD,MAAMC,QAAQiU,GAQdA,EAAcA,EAHAN,EACRM,EAAYpM,OAAS,EACrB,GAGU,OAAhBoM,IACAV,EAAOlQ,GAAO4Q,GAGtB,IAAK,IAAM5Q,KAAO0Q,EACdR,EAAOlQ,GAAO0Q,EAAc1Q,OAGxC,OAAOkQ,ECtEX,ICPIW,GDOEC,GAAkB,CACpBhR,eAAgB4P,GAAmB,CAC/Bd,4BAA6BA,GAC7BiB,kBAAmBzC,GACnB0C,QAAS,SAACjV,EAAOkG,EAAR,GAAoD,IAAhC0N,EAAgC,EAAhCA,YAAazF,EAAmB,EAAnBA,aACtC,IACIyF,EAAY7B,WAEJ,oBADG7L,EAASgQ,QAEVhQ,EAASgQ,UACThQ,EAASiQ,wBAEvB,MAAOC,GAEHxC,EAAY7B,WAAa,CACrB9J,EAAG,EACHC,EAAG,EACHqD,MAAO,EACPE,OAAQ,GAGhB6F,GAAcsC,EAAazF,EAAc,CAAEc,4BAA4B,GAASsC,GAASrL,EAASmQ,SAAUrW,EAAMqO,mBAClHsF,GAAUzN,EAAU0N,OEzB1B0C,GAAmB,CACrBrR,eAAgB4P,GAAmB,CAC/Bd,4BAAAA,GACAiB,kBAAmBzF,MCL3B,SAASgH,GAAY9G,EAAQ+G,EAAWC,GAAsC,IAA7BrI,EAA6B,uDAAnB,CAAEsI,SAAS,GAElE,OADAjH,EAAOkH,iBAAiBH,EAAWC,EAASrI,GACrC,kBAAMqB,EAAOmH,oBAAoBJ,EAAWC,IAuBvD,SAASI,GAAYvV,EAAKkV,EAAWC,EAASrI,IAC1C1O,EAAAA,EAAAA,YAAU,WACN,IAAM2T,EAAU/R,EAAIX,QACpB,GAAI8V,GAAWpD,EACX,OAAOkD,GAAYlD,EAASmD,EAAWC,EAASrI,KAErD,CAAC9M,EAAKkV,EAAWC,EAASrI,ICjCjC,SAAS0I,GAAaC,GAElB,MAA4B,qBAAjBC,cAAgCD,aAAiBC,eACxB,UAAtBD,EAAME,aAEbF,aAAiBG,WAE5B,SAASC,GAAaJ,GAElB,QADqBA,EAAMK,QCF/B,SAASC,GAAqBC,GAC1B,OAAO,SAACP,GACJ,IAAMD,EAAeC,aAAiBG,aACZJ,GACrBA,GAAiC,IAAjBC,EAAMQ,SAEvBD,EAAaP,KJXzB,SAAWf,GACPA,EAAa,QAAc,UAC3BA,EAAa,MAAY,aACzBA,EAAa,IAAU,WACvBA,EAAa,KAAW,YACxBA,EAAa,MAAY,aACzBA,EAAa,OAAa,cAC1BA,EAAa,KAAW,OAP5B,CAQGA,KAAkBA,GAAgB,KIOrC,IAAMwB,GAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC5C,SAASC,GAAevB,GAAuB,IAApBwB,EAAoB,uDAAR,OAC7BC,EAAezB,EAAEgB,QAAQ,IAAMhB,EAAE0B,eAAe,GAChDC,EAAQF,GAAgBL,GAC9B,MAAO,CACHvP,EAAG8P,EAAMH,EAAY,KACrB1P,EAAG6P,EAAMH,EAAY,MAG7B,SAASI,GAAeD,GAA2B,IAApBH,EAAoB,uDAAR,OACvC,MAAO,CACH3P,EAAG8P,EAAMH,EAAY,KACrB1P,EAAG6P,EAAMH,EAAY,MAG7B,SAASK,GAAiBlB,GAA2B,IAApBa,EAAoB,uDAAR,OACzC,MAAO,CACHG,MAAOZ,GAAaJ,GACdY,GAAeZ,EAAOa,GACtBI,GAAejB,EAAOa,IAGpC,IAAMM,GAAc,SAACzB,GAAgD,IAAvC0B,EAAuC,wDAC3DC,EAAW,SAACrB,GAAD,OAAWN,EAAQM,EAAOkB,GAAiBlB,KAC5D,OAAOoB,EACDd,GAAqBe,GACrBA,GCtCJC,GAAkB,CACpBC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,cAAe,cACfC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,aAAc,cAEZC,GAAkB,CACpBR,YAAa,aACbC,YAAa,YACbC,UAAW,WACXC,cAAe,eAEnB,SAASM,GAAoB1W,GACzB,OClBgC/C,GAAsC,OAAzB0Z,OAAOC,cDmBzC5W,EClBmB/C,GAAqC,OAAxB0Z,OAAOE,aDqBvCJ,GAAgBzW,GCpBG/C,GAAoC,OAAvB0Z,OAAOG,YDuBvCd,GAAgBhW,GAEpBA,EAEX,SAAS+W,GAAgB3J,EAAQ+G,EAAWC,EAASrI,GACjD,OAAOmI,GAAY9G,EAAQsJ,GAAoBvC,GAAY0B,GAAYzB,EAAuB,gBAAdD,GAA8BpI,GAElH,SAASiL,GAAgB/X,EAAKkV,EAAWC,EAASrI,GAC9C,OAAOyI,GAAYvV,EAAKyX,GAAoBvC,GAAYC,GAAWyB,GAAYzB,EAAuB,gBAAdD,GAA8BpI,GEpC1H,SAASkL,GAAWjX,GAChB,IAAIkX,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOlX,EAJM,WACbkX,EAAO,QASnB,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAclW,GACnB,IAAI+V,GAAO,EACX,GAAa,MAAT/V,EACA+V,EAAOE,UAEN,GAAa,MAATjW,EACL+V,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,MAKAD,GACAA,IACAC,GACAA,KAGZ,OAAOL,EAEX,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,GC5CX,SAASC,GAAiB3Z,EAAe4Z,EAAUC,GAC/C,OAAO,SAAClD,EAAOmD,GACNpD,GAAaC,KAAU8C,OAKxBzZ,EAAcc,gBACdd,EAAcc,eAAeiZ,UAAUnE,GAAcoE,MAAOJ,GAEhEC,GAAYA,EAASlD,EAAOmD,KCRpC,IAAMG,GAAgB,SAAhBA,EAAiBna,EAAQoa,GAC3B,QAAKA,IAGIpa,IAAWoa,GAITD,EAAcna,EAAQoa,EAAMC,iBCb3C,SAASC,GAAiBP,GACtB,OAAOva,EAAAA,EAAAA,YAAU,kBAAM,kBAAMua,OAAY,ICI7C,IAAMQ,GAAmB,SAACnS,EAAGC,GAAJ,OAAU,SAAC3G,GAAD,OAAO2G,EAAED,EAAE1G,MACxC8Y,GAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAqBA,EAAaC,OAAOH,KCRvC,IAAI/S,I,gBCKbmT,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMhB,EAAWY,GAAkB/T,IAAImU,EAAMxL,QAC7CwK,GAAYA,EAASgB,IAEnBC,GAA2B,SAACC,GAC9BA,EAAQxF,QAAQqF,KAqBpB,SAASI,GAAoB/H,EAASjF,EAAS6L,GAC3C,IAAMoB,EApBV,YAAwD,IAApBC,EAAoB,EAApBA,KAASlN,GAAW,cAC9CmN,EAAaD,GAAQ/b,SAItBwb,GAAU/T,IAAIuU,IACfR,GAAU9T,IAAIsU,EAAY,IAE9B,IAAMC,EAAgBT,GAAUjU,IAAIyU,GAC9BpW,EAAMsW,KAAKC,UAAUtN,GAQ3B,OAHKoN,EAAcrW,KACfqW,EAAcrW,GAAO,IAAIwW,qBAAqBT,IAAzB,QAAqDI,KAAAA,GAASlN,KAEhFoN,EAAcrW,GAGayW,CAAyBxN,GAG3D,OAFAyM,GAAkB5T,IAAIoM,EAAS4G,GAC/BoB,EAA0BQ,QAAQxI,GAC3B,WACHwH,GAAkBiB,OAAOzI,GACzBgI,EAA0BU,UAAU1I,ICzB5C,IAAM2I,GAAiB,CACnB5Z,KAAM,EACN6Z,IAAK,GAET,SAASC,GAAwBC,EAAejO,EAAO9N,EAAvD,GAA2H,IAAnDkb,EAAmD,EAAnDA,KAAcc,EAAqC,EAA7C/P,OAA6C,IAAzBgQ,OAAAA,OAAyB,MAAhB,OAAgB,EAARC,EAAQ,EAARA,MAC/G5c,EAAAA,EAAAA,YAAU,WACN,GAAKyc,GAAkB/b,EAAcO,QAArC,CAEA,IAAMyN,EAAU,CACZkN,KAAe,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAK3a,QACvDyb,WAAAA,EACAG,UAA6B,kBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOjB,GAAoBhb,EAAcO,QAASyN,GA/BrB,SAAC6M,GAC1B,IAAQuB,EAAmBvB,EAAnBuB,eAIR,GAAItO,EAAMuO,WAAaD,IAEvBtO,EAAMuO,SAAWD,GAKbF,GAASE,IAAkBtO,EAAMwO,gBAArC,CAGSF,IACLtO,EAAMwO,gBAAiB,GAEvBtc,EAAcc,gBACdd,EAAcc,eAAeiZ,UAAUnE,GAAc2G,OAAQH,GAMjE,IAAMxc,EAAQI,EAAcwc,WACtB3C,EAAWuC,EACXxc,EAAM6c,gBACN7c,EAAM8c,gBACZ7C,GAAYA,EAASgB,UAG1B,CAACkB,EAAeb,EAAMc,EAAYC,IAOzC,SAASU,GAA+BZ,EAAejO,EAAO9N,EAA9D,GAAkG,QAAnB4c,SAAAA,OAAmB,UAC9Ftd,EAAAA,EAAAA,YAAU,WACDyc,GAAkBa,GAavBC,uBAAsB,WAClB/O,EAAMwO,gBAAiB,EACvB,IAAQG,EAAoBzc,EAAcwc,WAAlCC,gBACRA,GAAmBA,EAAgB,MAC/Bzc,EAAcc,gBACdd,EAAcc,eAAeiZ,UAAUnE,GAAc2G,QAAQ,QAGtE,CAACR,IC9FR,IAAMe,GAA0B,SAACC,GAAD,OAAU,SAACnd,GAEvC,OADAmd,EAAKnd,GACE,OCILod,GAAoB,CACtBvZ,OAAQqZ,IFDZ,YAAuG,IAAhF9c,EAAgF,EAAhFA,cAAeid,EAAiE,EAAjEA,YAAaR,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,gBAAmC,IAAlBQ,SAAAA,OAAkB,MAAP,GAAO,EAC7FpP,GAAQzN,EAAAA,EAAAA,QAAO,CACjBic,gBAAgB,EAChBD,UAAU,IAEVN,EAAgB5Z,QAAQ8a,GAAeR,GAAmBC,GAC1DQ,EAAShB,MAAQpO,EAAMvN,QAAQ+b,iBAC/BP,GAAgB,IACgC,qBAAzBR,qBACrBoB,GACAb,IACMC,EAAejO,EAAMvN,QAASP,EAAekd,METzD3Z,IAAKuZ,ICIT,YAAqF,IAA5DK,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAUtd,EAAkB,EAAlBA,cACzDud,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAand,EAAAA,EAAAA,SAAO,GACpBod,GAA4Bpd,EAAAA,EAAAA,QAAO,MAInCqd,EAAe,CACjBpH,UAAW8G,GAAcD,GAASE,GAAeM,IAErD,SAASC,IACLH,EAA0Bld,SAAWkd,EAA0Bld,UAC/Dkd,EAA0Bld,QAAU,KAExC,SAASsd,IAKL,OAJAD,IACAJ,EAAWjd,SAAU,EACrBP,EAAcc,gBACVd,EAAcc,eAAeiZ,UAAUnE,GAAckI,KAAK,IACtDrE,KAEZ,SAASsE,EAAYpH,EAAOmD,GACnB+D,MAMJ5D,GAAcja,EAAcO,QAASoW,EAAMtH,QAEtC8N,GAASA,EAAMxG,EAAOmD,GADtBuD,GAAeA,EAAY1G,EAAOmD,IAG5C,SAASkE,EAAgBrH,EAAOmD,GACvB+D,KAELR,GAAeA,EAAY1G,EAAOmD,GAEtC,SAAS6D,EAAchH,EAAOmD,GAC1B8D,IACIJ,EAAWjd,UAEfid,EAAWjd,SAAU,EACrBkd,EAA0Bld,QAAU+Z,GAAKtB,GAAgBJ,OAAQ,YAAamF,EAAaL,GAAe1E,GAAgBJ,OAAQ,gBAAiBoF,EAAiBN,IAIpK1d,EAAcc,gBACVd,EAAcc,eAAeiZ,UAAUnE,GAAckI,KAAK,GAC9DV,GAAcA,EAAWzG,EAAOmD,IAEpCb,GAAgBjZ,EAAe,cAAeud,EAAoBI,OAAgBjd,EAAWgd,GAC7FtD,GAAiBwD,MDtDjBva,MAAOyZ,IEAX,YAAyD,IAA9BmB,EAA8B,EAA9BA,WAAYje,EAAkB,EAAlBA,cAC3Bc,EAAmBd,EAAnBc,eAOR2V,GAAYzW,EAAe,QAASie,EANpB,WACZnd,GAAkBA,EAAeiZ,UAAUnE,GAAcsI,OAAO,SAKTxd,GAC3D+V,GAAYzW,EAAe,OAAQie,EAJpB,WACXnd,GAAkBA,EAAeiZ,UAAUnE,GAAcsI,OAAO,SAGXxd,MFRzD4C,MAAOwZ,IRQX,YAAmF,IAAxDqB,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,WAAYre,EAAkB,EAAlBA,cAC7DiZ,GAAgBjZ,EAAe,eAAgBme,GAAgBE,EACzD1E,GAAiB3Z,GAAe,EAAMme,QACtCzd,EAAW,CAAE4V,SAAU6H,IAC7BlF,GAAgBjZ,EAAe,eAAgBoe,GAAcC,EACvD1E,GAAiB3Z,GAAe,EAAOoe,QACvC1d,EAAW,CAAE4V,SAAU8H,Q,UWEjC,SAASE,KACL,IAAMhc,GAAUvC,EAAAA,EAAAA,YAAWd,GAC3B,GAAgB,OAAZqD,EACA,MAAO,EAAC,EAAM,MAClB,IAAQic,EAAwCjc,EAAxCic,UAAWC,EAA6Blc,EAA7Bkc,eAAgBC,EAAanc,EAAbmc,SAI7Bhe,GAAKie,EAAAA,EAAAA,UACXpf,EAAAA,EAAAA,YAAU,kBAAMmf,EAAShe,KAAK,IAE9B,OAAQ8d,GAAaC,EAAiB,EAAC,EADlB,kBAAMA,GAAkBA,EAAe/d,KACE,EAAC,G,0BCrCnE,SAASke,GAAeC,EAAMC,GAC1B,IAAKpd,MAAMC,QAAQmd,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKtV,OACxB,GAAIuV,IAAeF,EAAKrV,OACpB,OAAO,EACX,IAAK,IAAIwV,EAAI,EAAGA,EAAID,EAAYC,IAC5B,GAAIF,EAAKE,KAAOH,EAAKG,GACjB,OAAO,EAEf,OAAO,ECJX,IAAMC,GAAwB,SAACC,GAAD,OAAuB,IAAVA,GCN3C,IAAMC,GAAO,SAACC,GAAD,OAASA,GCoBhBC,GAAa,SAACC,EAAGC,EAAIC,GAAR,SAAkB,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,GAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOV,GACX,IAAMW,EAAW,SAACC,GAAD,OArBrB,SAAyBjY,EAAGkY,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAnB,EAAI,EACR,IAEIkB,EAAWb,GADXc,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAO9X,GAC7B,EACXmY,EAAaE,EAGbH,EAAaG,QAEZvX,KAAKwX,IAAIF,GAfO,QAgBnBlB,EAfuB,IAgB7B,OAAOmB,EAMkBE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,IAExD,OAAO,SAACN,GAAD,OAAa,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,IC7CxE,IAAMS,GAAe,SAACC,GAAD,OAAY,SAACzhB,GAAD,OAAOA,GAAK,GAAMyhB,EAAO,EAAIzhB,GAAK,GAAK,EAAIyhB,EAAO,GAAK,EAAIzhB,KAAO,ICA7F0hB,GAAgB,SAACD,GAAD,OAAY,SAACzhB,GAAD,OAAO,EAAIyhB,EAAO,EAAIzhB,KCClD2hB,GAAS,SAAC3hB,GAAD,OAAOA,EAAIA,GACpB4hB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,ICFzBG,GAAS,SAAC9hB,GAAD,OAAO,EAAI8J,KAAKiY,IAAIjY,KAAKkY,KAAKhiB,KACvCiiB,GAAUP,GAAcI,IACxBI,GAAYV,GAAaS,ICFzBE,GAAe,eAACC,EAAD,uDAAS,MAAT,OAAmB,SAACpiB,GAAD,OAAOA,EAAIA,IAAMoiB,EAAQ,GAAKpiB,EAAIoiB,KACpEC,GAASF,KACTG,GAAUZ,GAAcW,IACxBE,GAAYf,GAAaa,ICEzBG,GANmB,SAACJ,GACtB,IAAMK,EAAaN,GAAaC,GAChC,OAAO,SAACpiB,GAAD,OAAQA,GAAK,GAAK,EACnB,GAAMyiB,EAAWziB,GACjB,IAAO,EAAI8J,KAAK4Y,IAAI,GAAI,IAAM1iB,EAAI,MAEzB2iB,GCAbC,GAAe,CACjBC,OAAQxC,GACRsB,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAI,UAAAA,GACAD,QAAAA,GACAI,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,WAAAA,IAEEM,GAA6B,SAAC3N,GAChC,GAAIvS,MAAMC,QAAQsS,GAAa,CAEjBA,EAAWzK,OACrB,eAAyByK,EAAzB,GACA,OAAOwL,GADP,qBAGC,MAA0B,kBAAfxL,GAEH,+BAAiEA,EAAjE,KACFyN,GAAazN,IAEjBA,GC/BL4N,GAAgB,SAACtZ,EAAMuZ,GAAP,OAAoB,SAACrgB,GACvC,OAAOW,QAAS+G,EAAS1H,IAAMyH,EAAiB/B,KAAK1F,IAAMA,EAAEiG,WAAWa,IACnEuZ,GAAY1gB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGqgB,MAEvDC,GAAa,SAACC,EAAOC,EAAOC,GAAf,OAAyB,SAACzgB,GAAM,MAC/C,IAAK0H,EAAS1H,GACV,OAAOA,EACX,MAAyBA,EAAE0gB,MAAMnZ,GAAjC,gBAAOb,EAAP,KAAUC,EAAV,KAAaga,EAAb,KAAgBjY,EAAhB,KACA,uBACK6X,EAAQtY,WAAWvB,KADxB,UAEK8Z,EAAQvY,WAAWtB,KAFxB,UAGK8Z,EAAQxY,WAAW0Y,KAHxB,uBAIqBzhB,IAAVwJ,EAAsBT,WAAWS,GAAS,GAJrD,ICNEkY,GAAe5Z,EAAM,EAAG,KACxB6Z,GAAUlhB,OAAO6I,OAAO7I,OAAO6I,OAAO,GAAIC,IAAS,CAAE1B,UAAW,SAAC/G,GAAD,OAAOmH,KAAK2B,MAAM8X,GAAa5gB,OAC/F8gB,GAAO,CACTpb,KAAM0a,GAAc,MAAO,OAC3BpY,MAAOsY,GAAW,MAAO,QAAS,QAClCvZ,UAAW,gBAAGga,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAf,IAAqBvY,MAAOwY,OAA5B,MAAsC,EAAtC,QAA8C,QACrDL,GAAQ9Z,UAAUga,GAClB,KACAF,GAAQ9Z,UAAUia,GAClB,KACAH,GAAQ9Z,UAAUka,GAClB,KACA7Z,EAASsB,GAAM3B,UAAUma,IACzB,MCcR,IAAMC,GAAM,CACRzb,KAAM0a,GAAc,KACpBpY,MA9BJ,SAAkBhI,GACd,IAAIohB,EAAI,GACJC,EAAI,GACJ1a,EAAI,GACJD,EAAI,GAiBR,OAhBI1G,EAAE+H,OAAS,GACXqZ,EAAIphB,EAAEshB,OAAO,EAAG,GAChBD,EAAIrhB,EAAEshB,OAAO,EAAG,GAChB3a,EAAI3G,EAAEshB,OAAO,EAAG,GAChB5a,EAAI1G,EAAEshB,OAAO,EAAG,KAGhBF,EAAIphB,EAAEshB,OAAO,EAAG,GAChBD,EAAIrhB,EAAEshB,OAAO,EAAG,GAChB3a,EAAI3G,EAAEshB,OAAO,EAAG,GAChB5a,EAAI1G,EAAEshB,OAAO,EAAG,GAChBF,GAAKA,EACLC,GAAKA,EACL1a,GAAKA,EACLD,GAAKA,GAEF,CACHqa,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAAS5a,EAAG,IAClB+B,MAAOhC,EAAI6a,SAAS7a,EAAG,IAAM,IAAM,IAMvCK,UAAW+Z,GAAK/Z,WC7Bdya,GAAO,CACT9b,KAAM0a,GAAc,MAAO,OAC3BpY,MAAOsY,GAAW,MAAO,aAAc,aACvCvZ,UAAW,YAAwD,IAArD0a,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,UAAoC,IAAzBjZ,MAAOwY,OAAkB,MAAR,EAAQ,EAC/D,MAAQ,QACJ/Z,KAAK2B,MAAM2Y,GACX,KACAtZ,GAAQpB,UAAUK,EAASsa,IAC3B,KACAvZ,GAAQpB,UAAUK,EAASua,IAC3B,KACAva,EAASsB,GAAM3B,UAAUma,IACzB,MCZNU,GAAQ,CACVlc,KAAM,SAAC1F,GAAD,OAAO8gB,GAAKpb,KAAK1F,IAAMmhB,GAAIzb,KAAK1F,IAAMwhB,GAAK9b,KAAK1F,IACtDgI,MAAO,SAAChI,GACJ,OAAI8gB,GAAKpb,KAAK1F,GACH8gB,GAAK9Y,MAAMhI,GAEbwhB,GAAK9b,KAAK1F,GACRwhB,GAAKxZ,MAAMhI,GAGXmhB,GAAInZ,MAAMhI,IAGzB+G,UAAW,SAAC/G,GACR,OAAO0H,EAAS1H,GACVA,EACAA,EAAEH,eAAe,OACbihB,GAAK/Z,UAAU/G,GACfwhB,GAAKza,UAAU/G,KCnB3B6hB,GAAa,OACbC,GAAc,OAOpB,SAASC,GAAQ/hB,GACI,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAMyT,EAAS,GACXuO,EAAY,EACVC,EAASjiB,EAAE0gB,MAAMlZ,GACnBya,IACAD,EAAYC,EAAOla,OACnB/H,EAAIA,EAAEuR,QAAQ/J,EAAYqa,IAC1BpO,EAAOtG,KAAP,MAAAsG,GAAM,QAASwO,EAAOC,IAAIN,GAAM5Z,UAEpC,IAAMma,EAAUniB,EAAE0gB,MAAMnZ,GAKxB,OAJI4a,IACAniB,EAAIA,EAAEuR,QAAQhK,EAAYua,IAC1BrO,EAAOtG,KAAP,MAAAsG,GAAM,QAAS0O,EAAQD,IAAIzZ,GAAOT,UAE/B,CAAEyL,OAAAA,EAAQuO,UAAAA,EAAWI,UAAWpiB,GAE3C,SAASgI,GAAMhI,GACX,OAAO+hB,GAAQ/hB,GAAGyT,OAEtB,SAAS4O,GAAkBriB,GACvB,MAAyC+hB,GAAQ/hB,GAAzCyT,EAAR,EAAQA,OAAQuO,EAAhB,EAAgBA,UAAWI,EAA3B,EAA2BA,UACrBE,EAAY7O,EAAO1L,OACzB,OAAO,SAAC/H,GAEJ,IADA,IAAIuiB,EAASH,EACJ7E,EAAI,EAAGA,EAAI+E,EAAW/E,IAC3BgF,EAASA,EAAOhR,QAAQgM,EAAIyE,EAAYH,GAAaC,GAAavE,EAAIyE,EAAYJ,GAAM7a,UAAU/G,EAAEud,IAAMnW,EAASpH,EAAEud,KAEzH,OAAOgF,GAGf,IAAMC,GAAuB,SAACxiB,GAAD,MAAoB,kBAANA,EAAiB,EAAIA,GAMhE,IAAMyiB,GAAU,CAAE/c,KA5ClB,SAAc1F,GACV,IAAI+O,EAAI2T,EAAIC,EAAIC,EAChB,OAAQC,MAAM7iB,IACV0H,EAAS1H,KAC6E,QAApF0iB,EAAoC,QAA9B3T,EAAK/O,EAAE0gB,MAAMnZ,UAAgC,IAAPwH,OAAgB,EAASA,EAAGhH,cAA2B,IAAP2a,EAAgBA,EAAK,IAA2F,QAApFE,EAAoC,QAA9BD,EAAK3iB,EAAE0gB,MAAMlZ,UAAgC,IAAPmb,OAAgB,EAASA,EAAG5a,cAA2B,IAAP6a,EAAgBA,EAAK,GAAK,GAwChO5a,MAAAA,GAAOqa,kBAAAA,GAAmBS,kBALlD,SAA2B9iB,GACvB,IAAM+iB,EAAS/a,GAAMhI,GAErB,OADoBqiB,GAAkBriB,EAC/BgjB,CAAYD,EAAOb,IAAIM,OCrC5BS,GAAe,SAAC1f,EAAKa,GAEvB,MAAY,WAARb,MAKiB,kBAAVa,IAAsBnE,MAAMC,QAAQkE,OAE1B,kBAAVA,IACPqe,GAAQ/c,KAAKtB,IACZA,EAAM6B,WAAW,WCpBpBid,GAAoB,iBAAO,CAC7Bpc,KAAM,SACNqc,UAAW,IACXC,QAAS,GACTC,UAAW,KAETC,GAAyB,SAACC,GAAD,MAAS,CACpCzc,KAAM,SACNqc,UAAW,IACXC,QAAgB,IAAPG,EAAW,EAAIpc,KAAKqc,KAAK,KAAO,GACzCH,UAAW,KAETI,GAAc,iBAAO,CACvB3c,KAAM,YACN4c,KAAM,SACNC,SAAU,KAERC,GAAY,SAACnQ,GAAD,MAAa,CAC3B3M,KAAM,YACN6c,SAAU,GACVlQ,OAAAA,IAEEoQ,GAAqB,CACvBxd,EAAG6c,GACH5c,EAAG4c,GACH3c,EAAG2c,GACHpY,OAAQoY,GACRnY,QAASmY,GACTlY,QAASkY,GACTjY,QAASiY,GACThY,OAAQoY,GACRnY,OAAQmY,GACR3a,MAAO2a,GACPzX,QAAS4X,GACTK,gBAAiBL,GACjB7B,MAAO6B,GACP7a,QAAS0a,ICnCPS,GAAc,IAAIje,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASke,GAAmBhkB,GACxB,MAAoBA,EAAEikB,MAAM,GAAI,GAAGnc,MAAM,KAAzC,gBAAKrH,EAAL,KAAW2D,EAAX,KACA,GAAa,gBAAT3D,EACA,OAAOT,EACX,MAAiBoE,EAAMsc,MAAMnZ,IAAe,GAArCkB,GAAP,gBACA,IAAKA,EACD,OAAOzI,EACX,IAAM4H,EAAOxD,EAAMmN,QAAQ9I,EAAQ,IAC/Byb,EAAeH,GAAY3e,IAAI3E,GAAQ,EAAI,EAG/C,OAFIgI,IAAWrE,IACX8f,GAAgB,KACbzjB,EAAO,IAAMyjB,EAAetc,EAAO,IAE9C,IAAMuc,GAAgB,oBAChBC,GAASzkB,OAAO6I,OAAO7I,OAAO6I,OAAO,GAAIia,IAAU,CAAEK,kBAAmB,SAAC9iB,GACvE,IAAMqkB,EAAYrkB,EAAE0gB,MAAMyD,IAC1B,OAAOE,EAAYA,EAAUnC,IAAI8B,IAAoB5iB,KAAK,KAAOpB,KCdnEskB,IAAoB,kBACnBvb,IADgB,IAGnB6Y,MAAAA,GACAkC,gBAAiBlC,GACjB2C,aAAc3C,GACd4C,KAAM5C,GACN6C,OAAQ7C,GAER8C,YAAa9C,GACb+C,eAAgB/C,GAChBgD,iBAAkBhD,GAClBiD,kBAAmBjD,GACnBkD,gBAAiBlD,GACjBwC,OAAAA,GACAW,aAAcX,KAKZY,GAAsB,SAACzhB,GAAD,OAAS+gB,GAAkB/gB,ICvBvD,SAASuf,GAAkBvf,EAAKa,GAC5B,IAAI2K,EACAkW,EAAmBD,GAAoBzhB,GAI3C,OAHI0hB,IAAqBb,KACrBa,EAAmBxC,IAE8B,QAA7C1T,EAAKkW,EAAiBnC,yBAAsC,IAAP/T,OAAgB,EAASA,EAAGjP,KAAKmlB,EAAkB7gB,GCTpH,IAAM8gB,IACO,ECDPC,GAAmB,EAAI,GAAM,IAC7BC,GAAwC,qBAAhBC,YACxB,kBAAMA,YAAYC,OAClB,kBAAMC,KAAKD,OACXE,GAAgC,qBAAXpO,OACrB,SAACiB,GAAD,OAAcjB,OAAOiE,sBAAsBhD,IAC3C,SAACA,GAAD,OAAcoN,YAAW,kBAAMpN,EAAS+M,QAAmBD,KCHjE,IACIO,IAAoB,EACpBC,IAAe,EACfC,IAAe,EACbC,GAAQ,CACVC,MAAO,EACPC,UAAW,GAETC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWhN,QAAO,SAACkN,EAAK3iB,GAElC,OADA2iB,EAAI3iB,GCnBR,SAA0BoiB,GACtB,IAAIQ,EAAQ,GACRC,EAAiB,GACjBC,EAAW,EACXT,GAAe,EACfU,GAAiB,EACfC,EAAc,IAAIC,QAClBC,EAAO,CACTC,SAAU,SAACrO,GAAmD,IACpDsO,EADoD,yDACnBf,EACjCgB,EAASD,EAAoBR,EAAQC,EAQ3C,OAV0D,yDAItDG,EAAYM,IAAIxO,IACc,IAA9BuO,EAAOnhB,QAAQ4S,KACfuO,EAAOzZ,KAAKkL,GACRsO,GAAqBf,IACrBS,EAAWF,EAAMpe,SAElBsQ,GAEXyO,OAAQ,SAACzO,GACL,IAAM0O,EAAQX,EAAe3gB,QAAQ4S,IACtB,IAAX0O,GACAX,EAAeY,OAAOD,EAAO,GACjCR,EAAYrM,OAAO7B,IAEvB4O,QAAS,SAACC,GACN,GAAItB,EACAU,GAAiB,MADrB,CAIAV,GAAe,EALK,MAMM,CAACQ,EAAgBD,GAG3C,GAHCA,EANmB,MAMZC,EANY,MAOLre,OAAS,EACxBse,EAAWF,EAAMpe,OAEb,IAAK,IAAIwV,EAAI,EAAGA,EAAI8I,EAAU9I,IAAK,CAC/B,IAAMlF,EAAW8N,EAAM5I,GACvBlF,EAAS6O,GACLX,EAAYnhB,IAAIiT,KAChBoO,EAAKC,SAASrO,GACdsN,KAIZC,GAAe,EACXU,IACAA,GAAiB,EACjBG,EAAKQ,QAAQC,OAIzB,OAAOT,EDjCIU,EAAiB,kBAAOxB,IAAe,KAC3CO,IACR,IACGkB,GAAOpB,GAAWhN,QAAO,SAACkN,EAAK3iB,GACjC,IAAMkjB,EAAOR,GAAM1iB,GAMnB,OALA2iB,EAAI3iB,GAAO,SAAC0jB,GAAkD,IAAzCI,EAAyC,wDAAtBC,EAAsB,wDAG1D,OAFK3B,IACD4B,KACGd,EAAKC,SAASO,EAASI,EAAWC,IAEtCpB,IACR,IACGsB,GAAaxB,GAAWhN,QAAO,SAACkN,EAAK3iB,GAEvC,OADA2iB,EAAI3iB,GAAO0iB,GAAM1iB,GAAKujB,OACfZ,IACR,IACGuB,GAAYzB,GAAWhN,QAAO,SAACkN,EAAK3iB,GAEtC,OADA2iB,EAAI3iB,GAAO,kBAAM0iB,GAAM1iB,GAAK0jB,QAAQpB,KAC7BK,IACR,IACGwB,GAAc,SAACC,GAAD,OAAY1B,GAAM0B,GAAQV,QAAQpB,KAChD+B,GAAe,SAAfA,EAAgB7B,GAClBJ,IAAe,EACfE,GAAMC,MAAQJ,GACRP,GACAhe,KAAKD,IAAIC,KAAKF,IAAI8e,EAAYF,GAAME,UAzC3B,IAyCmD,GAClEF,GAAME,UAAYA,EAClBH,IAAe,EACfI,GAAWjS,QAAQ2T,IACnB9B,IAAe,EACXD,KACAD,IAAoB,EACpBF,GAAYoC,KAGdL,GAAY,WACd5B,IAAe,EACfD,IAAoB,EACfE,IACDJ,GAAYoC,KAEdC,GAAe,kBAAMhC,IAE3B,ME5DA,SAASiC,GAAMzP,EAAU0P,GACrB,IAAM3nB,EAAQilB,YAAYC,MACpB0C,EAAe,SAAfA,EAAgB,GAAkB,IAC9BC,EAD8B,EAAhBlC,UACQ3lB,EACxB6nB,GAAWF,IACXP,GAAWU,KAAKF,GAChB3P,EAAS4P,EAAUF,KAI3B,OADAX,GAAAA,KAAUY,GAAc,GACjB,kBAAMR,GAAWU,KAAKF,ICZjC,IAAMhhB,GAAQ,SAACC,EAAKC,EAAKlH,GAAX,OAAiBmH,KAAKF,IAAIE,KAAKD,IAAIlH,EAAGiH,GAAMC,ICqBpD6L,GAAM,SAACoV,EAAM5E,EAAI6E,GAAX,OAAyBA,EAAWD,EAAOC,EAAW7E,EAAK4E,GCpBvE,SAASE,GAAShrB,EAAGirB,EAAGzK,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDxgB,EAAc,GAATirB,EAAIjrB,GAASwgB,EACzBA,EAAI,GACGyK,EACPzK,EAAI,EAAI,EACDxgB,GAAKirB,EAAIjrB,IAAM,EAAI,EAAIwgB,GAAK,EAChCxgB,ECJX,IAAMkrB,GAAiB,SAACJ,EAAM5E,EAAIvjB,GAC9B,IAAMwoB,EAAWL,EAAOA,EACxB,OAAOhhB,KAAKqc,KAAKrc,KAAKD,IAAI,EAAGlH,GAAKujB,EAAKA,EAAKiF,GAAYA,KAEtDC,GAAa,CAACtH,GAAKL,GAAMU,IAE/B,SAASkH,GAAO9G,GACZ,IAFkB5hB,EAEZ8G,GAFY9G,EAEQ4hB,EAFF6G,GAAWE,MAAK,SAAC7hB,GAAD,OAAUA,EAAKpB,KAAK1F,OAGlDW,QAAQmG,GAAT,WAAoB8a,EAApB,wEACT,IAAIgH,EAAQ9hB,EAAKkB,MAAM4Z,GAIvB,OAHI9a,IAAS0a,KACToH,EDLR,YAA2D,IAArCnH,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAWjZ,EAAS,EAATA,MAC9C+Y,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAM4G,EAAI3G,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCrkB,EAAI,EAAIskB,EAAY2G,EAC1BvH,EAAMsH,GAAShrB,EAAGirB,EAAG7G,EAAM,EAAI,GAC/BT,EAAQqH,GAAShrB,EAAGirB,EAAG7G,GACvBR,EAAOoH,GAAShrB,EAAGirB,EAAG7G,EAAM,EAAI,QAThCV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAK5Z,KAAK2B,MAAY,IAANiY,GAChBC,MAAO7Z,KAAK2B,MAAc,IAARkY,GAClBC,KAAM9Z,KAAK2B,MAAa,IAAPmY,GACjBvY,MAAAA,GClBQmgB,CAAWD,IAEhBA,EAEX,IAAME,GAAW,SAACX,EAAM5E,GACpB,IAAMwF,EAAWL,GAAOP,GAClBa,EAASN,GAAOnF,GAChB0F,GAAU,UAAKF,GACrB,OAAO,SAAC/oB,GAKJ,OAJAipB,EAAQlI,IAAMwH,GAAeQ,EAAShI,IAAKiI,EAAOjI,IAAK/gB,GACvDipB,EAAQjI,MAAQuH,GAAeQ,EAAS/H,MAAOgI,EAAOhI,MAAOhhB,GAC7DipB,EAAQhI,KAAOsH,GAAeQ,EAAS9H,KAAM+H,EAAO/H,KAAMjhB,GAC1DipB,EAAQvgB,MAAQqK,GAAIgW,EAASrgB,MAAOsgB,EAAOtgB,MAAO1I,GAC3C8gB,GAAK/Z,UAAUkiB,KC1B9B,SAASC,GAAS7Z,EAAQxB,GACtB,MAAsB,kBAAXwB,EACA,SAACrP,GAAD,OAAO+S,GAAI1D,EAAQxB,EAAQ7N,IAE7B4hB,GAAMlc,KAAK2J,GACTyZ,GAASzZ,EAAQxB,GAGjBsb,GAAW9Z,EAAQxB,GAGlC,IAAMub,GAAW,SAACjB,EAAM5E,GACpB,IAAMhB,GAAS,QAAI4F,GACb7F,EAAYC,EAAOxa,OACnBshB,EAAalB,EAAKjG,KAAI,SAACoH,EAAU/L,GAAX,OAAiB2L,GAASI,EAAU/F,EAAGhG,OACnE,OAAO,SAACvd,GACJ,IAAK,IAAIud,EAAI,EAAGA,EAAI+E,EAAW/E,IAC3BgF,EAAOhF,GAAK8L,EAAW9L,GAAGvd,GAE9B,OAAOuiB,IAGTgH,GAAY,SAACla,EAAQxB,GACvB,IAAM0U,GAAS,kBAAKlT,GAAWxB,GACzBwb,EAAa,GACnB,IAAK,IAAM9lB,KAAOgf,OACMrjB,IAAhBmQ,EAAO9L,SAAsCrE,IAAhB2O,EAAOtK,KACpC8lB,EAAW9lB,GAAO2lB,GAAS7Z,EAAO9L,GAAMsK,EAAOtK,KAGvD,OAAO,SAACvD,GACJ,IAAK,IAAMuD,KAAO8lB,EACd9G,EAAOhf,GAAO8lB,EAAW9lB,GAAKvD,GAElC,OAAOuiB,IAMf,SAASR,GAAQ3d,GAKb,IAJA,IAAM2e,EAASN,GAAQza,MAAM5D,GACvBke,EAAYS,EAAOhb,OACrByhB,EAAa,EACbxH,EAAY,EACPzE,EAAI,EAAGA,EAAI+E,EAAW/E,IAGvBiM,GAAmC,kBAAdzG,EAAOxF,GAC5BiM,IAGAxH,IAGR,MAAO,CAAEe,OAAAA,EAAQyG,WAAAA,EAAYxH,UAAAA,GAEjC,IAAMmH,GAAa,SAAC9Z,EAAQxB,GACxB,IAAM4b,EAAWhH,GAAQJ,kBAAkBxU,GACrC6b,EAAc3H,GAAQ1S,GACtBsa,EAAc5H,GAAQlU,GAG5B,OAFuB6b,EAAY1H,YAAc2H,EAAY3H,WACzD0H,EAAYF,YAAcG,EAAYH,WAE/B1Q,GAAKsQ,GAASM,EAAY3G,OAAQ4G,EAAY5G,QAAS0G,IAGvD,0BAA0Bpa,EAA1B,kBAA0CxB,EAA1C,4KACA,SAACxQ,GAAD,gBAAUA,EAAI,EAAIwQ,EAASwB,MC9DpC+Y,GAAW,SAACD,EAAM5E,EAAInf,GACxB,IAAMwlB,EAAmBrG,EAAK4E,EAC9B,OAA4B,IAArByB,EAAyB,GAAKxlB,EAAQ+jB,GAAQyB,GCLnDC,GAAY,SAAC1B,EAAM5E,GAAP,OAAc,SAAClmB,GAAD,OAAO0V,GAAIoV,EAAM5E,EAAIlmB,KAqBrD,SAASysB,GAAavH,EAAQmB,EAAMqG,GAIhC,IAHA,IArBwB/pB,EAqBlBgqB,EAAS,GACTC,EAAeF,IArBJ,kBADO/pB,EAsB+BuiB,EAAO,IApBnDsH,GAEW,kBAAN7pB,EACR4hB,GAAMlc,KAAK1F,GACJ8oB,GAGAK,GAGNlpB,MAAMC,QAAQF,GACZopB,GAEW,kBAANppB,EACLupB,GAEJM,IAKDK,EAAY3H,EAAOxa,OAAS,EACzBwV,EAAI,EAAGA,EAAI2M,EAAW3M,IAAK,CAChC,IAAI4M,EAAQF,EAAa1H,EAAOhF,GAAIgF,EAAOhF,EAAI,IAC/C,GAAImG,EAAM,CACN,IAAM0G,EAAiBnqB,MAAMC,QAAQwjB,GAAQA,EAAKnG,GAAKmG,EACvDyG,EAAQrR,GAAKsR,EAAgBD,GAEjCH,EAAO7c,KAAKgd,GAEhB,OAAOH,EAqBX,SAASK,GAAYC,EAAO/H,GAAqD,6DAAJ,GAAI,IAA3Cvb,MAAOujB,OAAoC,SAApB7G,EAAoB,EAApBA,KAAMyG,EAAc,EAAdA,MACzDK,EAAcF,EAAMviB,OACAwa,EAAOxa,QACtB2b,IAASzjB,MAAMC,QAAQwjB,IAASA,EAAK3b,OAE5CuiB,EAAM,GAAKA,EAAME,EAAc,KAC/BF,GAAQ,QAAIA,GAAOG,UACnBlI,GAAS,QAAIA,GAAQkI,WAEzB,IAAMT,EAASF,GAAavH,EAAQmB,EAAMyG,GACpCD,EAAYF,EAAOjiB,OACnB2iB,EAAe,SAAC1qB,GAClB,IAAIud,EAAI,EACR,GAAI2M,EAAY,EACZ,KAAO3M,EAAI+M,EAAMviB,OAAS,KAClB/H,EAAIsqB,EAAM/M,EAAI,IADOA,KAKjC,IAAMoN,EAAkBvC,GAASkC,EAAM/M,GAAI+M,EAAM/M,EAAI,GAAIvd,GACzD,OAAOgqB,EAAOzM,GAAGoN,IAErB,OAAOJ,EACD,SAACvqB,GAAD,OAAO0qB,EAAa1jB,GAAMsjB,EAAM,GAAIA,EAAME,EAAc,GAAIxqB,KAC5D0qB,ECpFV,SAASE,GAAcnX,EAAQqL,GAC3B,OAAOrL,EAAOyO,KAAI,kBAAMpD,GAAUI,MAAW8H,OAAO,EAAGvT,EAAO1L,OAAS,GCD3E,IAAM8iB,GAAU,KAKhB,SAASC,GAAT,GAAgF,IACxEC,EACAC,EAFwE,IAA1DrH,SAAAA,OAA0D,MAA/C,IAA+C,MAA1CsH,OAAAA,OAA0C,MAAjC,IAAiC,MAA3BC,SAAAA,OAA2B,MAAhB,EAAgB,MAAbC,KAAAA,OAAa,MAAN,EAAM,EAIxEC,EAAe,EAAIH,EAIvBG,EAAepkB,GAVA,IACA,EAS8BokB,GAC7CzH,EAAW3c,GAbK,IACA,GAY2B2c,EAAW,KAClDyH,EAAe,GAIfL,EAAW,SAACM,GACR,IAAMC,EAAmBD,EAAeD,EAClCtF,EAAQwF,EAAmB3H,EAC3Bjd,EAAI4kB,EAAmBJ,EACvBvkB,EAAI4kB,GAAgBF,EAAcD,GAClCzK,EAAIxZ,KAAKqkB,KAAK1F,GACpB,OAAO+E,GAAWnkB,EAAIC,EAAKga,GAE/BqK,EAAa,SAACK,GACV,IACMvF,EADmBuF,EAAeD,EACPzH,EAC3B8H,EAAI3F,EAAQoF,EAAWA,EACvB1W,EAAIrN,KAAK4Y,IAAIqL,EAAc,GAAKjkB,KAAK4Y,IAAIsL,EAAc,GAAK1H,EAC5D+H,EAAIvkB,KAAKqkB,KAAK1F,GACdzE,EAAIkK,GAAgBpkB,KAAK4Y,IAAIsL,EAAc,GAAID,GAErD,QADgBL,EAASM,GAAgBR,GAAU,GAAK,EAAI,KACzCY,EAAIjX,GAAKkX,GAAMrK,KAOtC0J,EAAW,SAACM,GAGR,OAFUlkB,KAAKqkB,KAAKH,EAAe1H,KACxB0H,EAAeH,GAAYvH,EAAW,GAC1C,MAEXqH,EAAa,SAACK,GAGV,OAFUlkB,KAAKqkB,KAAKH,EAAe1H,IACIA,EAAWA,GAAvCuH,EAAWG,MAI9B,IACMA,EAmBV,SAAyBN,EAAUC,EAAYW,GAE3C,IADA,IAAIC,EAASD,EACJpO,EAAI,EAAGA,EAHG,GAGiBA,IAChCqO,GAAkBb,EAASa,GAAUZ,EAAWY,GAEpD,OAAOA,EAxBcC,CAAgBd,EAAUC,EAD1B,EAAIrH,GAGzB,GADAA,GAAsB,IAClBd,MAAMwI,GACN,MAAO,CACHlI,UAAW,IACXC,QAAS,GACTO,SAAAA,GAIJ,IAAMR,EAAYhc,KAAK4Y,IAAIsL,EAAc,GAAKF,EAC9C,MAAO,CACHhI,UAAAA,EACAC,QAAwB,EAAfgI,EAAmBjkB,KAAKqc,KAAK2H,EAAOhI,GAC7CQ,SAAAA,GAYZ,SAAS4H,GAAgBF,EAAcD,GACnC,OAAOC,EAAelkB,KAAKqc,KAAK,EAAI4H,EAAeA,G,6CClFjDU,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAaxf,EAASiE,GAC3B,OAAOA,EAAKjQ,MAAK,SAAC+C,GAAD,YAA0BrE,IAAjBsN,EAAQjJ,MA4BtC,SAAS0oB,GAAT,GAAuF,QAArE9D,KAAAA,OAAqE,MAA9D,EAA8D,MAAzD5E,GAAAA,OAAyD,MAApD,EAAoD,MAA/CF,UAAAA,OAA+C,MAAnC,EAAmC,MAAhC6I,UAAAA,OAAgC,MAApB,IAAoB,EAAX1f,GAAW,cAK7EF,EAAQ,CAAE6f,MAAM,EAAO/nB,MAAO+jB,GACpC,EAhCJ,SAA0B3b,GACtB,IAAI4f,GAAgB,QAChBlB,SAAU,EACV/H,UAAW,IACXC,QAAS,GACT+H,KAAM,EACNkB,wBAAwB,GACrB7f,GAGP,IAAKwf,GAAaxf,EAASuf,KACvBC,GAAaxf,EAASsf,IAAe,CACrC,IAAMQ,EAAUxB,GAAWte,IAC3B4f,GAAgB,0BACTA,GACAE,GAFM,IAGTpB,SAAU,EACVC,KAAM,KAEIkB,wBAAyB,EAE3C,OAAOD,EAWyEG,CAAiB/f,GAA3F2W,EAAN,EAAMA,UAAWC,EAAjB,EAAiBA,QAAS+H,EAA1B,EAA0BA,KAAMD,EAAhC,EAAgCA,SAAUvH,EAA1C,EAA0CA,SAAU0I,EAApD,EAAoDA,uBAChDG,EAAgBC,GAChBC,EAAkBD,GACtB,SAASE,IACL,IAAMC,EAAkB1B,GAAaA,EAAW,IAAQ,EAClD2B,EAAetJ,EAAK4E,EACpBiD,EAAehI,GAAW,EAAIjc,KAAKqc,KAAKL,EAAYgI,IACpD2B,EAAsB3lB,KAAKqc,KAAKL,EAAYgI,GAAQ,IAQ1D,QAHkBjsB,IAAdgtB,IACAA,EAAY/kB,KAAKF,IAAIE,KAAKwX,IAAI4E,EAAK4E,GAAQ,IAAK,KAEhDiD,EAAe,EAAG,CAClB,IAAM2B,EAAcxB,GAAgBuB,EAAqB1B,GAEzDoB,EAAgB,SAAC3O,GACb,IAAMkN,EAAW5jB,KAAKqkB,KAAKJ,EAAe0B,EAAsBjP,GAChE,OAAQ0F,EACJwH,IACO6B,EACCxB,EAAe0B,EAAsBD,GACrCE,EACA5lB,KAAKiY,IAAI2N,EAAclP,GACvBgP,EAAe1lB,KAAK6lB,IAAID,EAAclP,KAEtD6O,EAAkB,SAAC7O,GAEf,IAAMkN,EAAW5jB,KAAKqkB,KAAKJ,EAAe0B,EAAsBjP,GAChE,OAAQuN,EACJ0B,EACA/B,GACE5jB,KAAKiY,IAAI2N,EAAclP,IACpB+O,EACGxB,EACI0B,EACAD,GACRE,EACAF,EAAe1lB,KAAK6lB,IAAID,EAAclP,IAC1CkN,GACK5jB,KAAK6lB,IAAID,EAAclP,IACnB+O,EACGxB,EACI0B,EACAD,GACRE,EACIF,EACA1lB,KAAKiY,IAAI2N,EAAclP,UAG1C,GAAqB,IAAjBuN,EAELoB,EAAgB,SAAC3O,GAAD,OAAO0F,EACnBpc,KAAKqkB,KAAKsB,EAAsBjP,IAC3BgP,GACID,EAAkBE,EAAsBD,GACrChP,QAEf,CAED,IAAMoP,EAAoBH,EAAsB3lB,KAAKqc,KAAK4H,EAAeA,EAAe,GACxFoB,EAAgB,SAAC3O,GACb,IAAMkN,EAAW5jB,KAAKqkB,KAAKJ,EAAe0B,EAAsBjP,GAE1DqP,EAAW/lB,KAAKF,IAAIgmB,EAAoBpP,EAAG,KACjD,OAAQ0F,EACHwH,IACK6B,EACExB,EAAe0B,EAAsBD,GACrC1lB,KAAKgmB,KAAKD,GACVD,EACIJ,EACA1lB,KAAKimB,KAAKF,IAClBD,IAKpB,OADAN,IACO,CACHvP,KAAM,SAACS,GACH,IAAM9e,EAAUytB,EAAc3O,GAC9B,GAAKwO,EAQD/f,EAAM6f,KAAOtO,GAAK8F,MARO,CACzB,IAAMjR,EAAuC,IAArBga,EAAgB7O,GAClCwP,EAA2BlmB,KAAKwX,IAAIjM,IAAoB2Q,EACxDiK,EAA+BnmB,KAAKwX,IAAI4E,EAAKxkB,IAAYmtB,EAC/D5f,EAAM6f,KACFkB,GAA4BC,EAMpC,OADAhhB,EAAMlI,MAAQkI,EAAM6f,KAAO5I,EAAKxkB,EACzBuN,GAEXihB,WAAY,WACRrC,GAAYA,EADE,MAED,CAAC3H,EAAI4E,GAAjBA,EAFa,KAEP5E,EAFO,KAGdoJ,MAIZV,GAAOuB,mBAAqB,SAAC9mB,EAAGC,GAAJ,MAAuB,kBAAND,GAA+B,kBAANC,GACtE,IAAM8lB,GAAO,SAACgB,GAAD,OAAQ,G,8ICzIfC,GAAQ,CAAEC,MCNhB,YAA4G,QAA3FzC,SAAAA,OAA2F,MAAhF,EAAgF,MAA7E/C,KAAAA,OAA6E,MAAtE,EAAsE,MAAnE1I,MAAAA,OAAmE,MAA3D,GAA2D,MAAtDmO,aAAAA,OAAsD,MAAvC,IAAuC,MAAlC1B,UAAAA,OAAkC,MAAtB,GAAsB,EAAjB2B,EAAiB,EAAjBA,aAKjFvhB,EAAQ,CAAE6f,MAAM,EAAO/nB,MAAO+jB,GAChC2F,EAAYrO,EAAQyL,EAClB6C,EAAQ5F,EAAO2F,EACfjgB,OAA0B3O,IAAjB2uB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFIlgB,IAAWkgB,IACXD,EAAYjgB,EAASsa,GAClB,CACH/K,KAAM,SAACS,GACH,IAAMiI,GAASgI,EAAY3mB,KAAKqkB,KAAK3N,EAAI+P,GAGzC,OAFAthB,EAAM6f,OAASrG,EAAQoG,GAAapG,GAASoG,GAC7C5f,EAAMlI,MAAQkI,EAAM6f,KAAOte,EAASA,EAASiY,EACtCxZ,GAEXihB,WAAY,eDhBG3J,UHOvB,YAAwE,QAAnDuE,KAAAA,OAAmD,MAA5C,EAA4C,MAAzC5E,GAAAA,OAAyC,MAApC,EAAoC,EAAjCG,EAAiC,EAAjCA,KAAMpU,EAA2B,EAA3BA,OAA2B,IAAnBqU,SAAAA,OAAmB,MAAR,IAAQ,EAK9DrX,EAAQ,CAAE6f,MAAM,EAAO/nB,MAAO+jB,GAI9B1U,EAASxT,MAAMC,QAAQqjB,GAAMA,EAAK,CAAC4E,EAAM5E,GAIzCyK,EAhBV,SAA8B1e,EAAQqU,GAClC,OAAOrU,EAAO4S,KAAI,SAAC+L,GAAD,OAAOA,EAAItK,KAefuK,CAGd5e,GAAUA,EAAOvH,SAAW0L,EAAO1L,OAC7BuH,EAxBV,SAAuBmE,GACnB,IAAM6O,EAAY7O,EAAO1L,OACzB,OAAO0L,EAAOyO,KAAI,SAACiM,EAAQ5Q,GAAT,OAAqB,IAANA,EAAUA,GAAK+E,EAAY,GAAK,KAuB3D8L,CAAc3a,GAASkQ,GAC7B,SAAS0K,IACL,OAAOhE,GAAY2D,EAAOva,EAAQ,CAC9BiQ,KAAMzjB,MAAMC,QAAQwjB,GAAQA,EAAOkH,GAAcnX,EAAQiQ,KAGjE,IAAIgH,EAAe2D,IACnB,MAAO,CACHjR,KAAM,SAACS,GAGH,OAFAvR,EAAMlI,MAAQsmB,EAAa7M,GAC3BvR,EAAM6f,KAAOtO,GAAK8F,EACXrX,GAEXihB,WAAY,WACR9Z,EAAOgX,UACPC,EAAe2D,OGxCOpC,OAAAA,IAClC,SAASqC,GAAYrG,EAAStE,GAAqB,IAAXmE,EAAW,uDAAH,EAC5C,OAAOG,EAAUtE,EAAWmE,EAUhC,IAAMyG,GAAY,SAACC,GACf,IAAMC,EAAgB,SAAC,GAAD,IAAG3I,EAAH,EAAGA,MAAH,OAAe0I,EAAO1I,IAC5C,MAAO,CACH1lB,MAAO,kBAAMgnB,GAAAA,OAAYqH,GAAe,IACxCC,KAAM,kBAAMlH,GAAWgH,OAAOC,MAGtC,SAASluB,GAAT,GAA0N,IAClNwO,EAAI2T,EAEJiM,EAIAC,EAGAC,EAVW1G,EAAuM,EAAvMA,KAAuM,IAAjM2G,SAAAA,OAAiM,aAAhLC,OAAAA,OAAgL,MAAvKR,GAAuK,MAA5JtG,QAAAA,OAA4J,MAAlJ,EAAkJ,MAA/I+G,OAAQC,OAAuI,MAA3H,EAA2H,MAAxHC,WAAAA,OAAwH,MAA3G,OAA2G,MAAnGC,YAAAA,OAAmG,MAArF,EAAqF,EAAlFC,EAAkF,EAAlFA,OAAQC,EAA0E,EAA1EA,OAAQC,EAAkE,EAAlEA,WAAYC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAA4C,IAAlC1oB,KAAAA,OAAkC,MAA3B,YAA2B,EAAX0F,GAAW,cAEhN+W,EAAO/W,EAAP+W,GAEFkM,EAAc,EACdC,EAAmBljB,EAClBmX,SAEDgM,GAAa,EACbC,GAAoB,EAElBC,EAAWnC,GAAMztB,MAAMC,QAAQqjB,GAAM,YAAczc,IACP,QAA7C4b,GAAM3T,EAAK8gB,GAAUrC,0BAAuC,IAAP9K,OAAgB,EAASA,EAAG5iB,KAAKiP,EAAIoZ,EAAM5E,MACjGsL,EAAwBxE,GAAY,CAAC,EAAG,KAAM,CAAClC,EAAM5E,GAAK,CACtDvc,OAAO,IAEXmhB,EAAO,EACP5E,EAAK,KAET,IAAM7hB,EAAYmuB,GAAS,kBAAKrjB,GAAN,IAAe2b,KAAAA,EAAM5E,GAAAA,KAC/C,SAASyL,IACLS,IACmB,YAAfP,EAEAjH,EAvCZ,SAAwBA,GAA4D,IAAnDtE,EAAmD,uDAAxC,EAAGmE,EAAqC,uDAA7B,EACnD,OADgF,yDAG1EnE,GAAYsE,EAAUtE,GAAYmE,EADlCwG,GAAY3K,GAAYsE,EAAStE,EAAUmE,GAqC/BgI,CAAe7H,EAASyH,EAAkBP,EADpDS,EAAoBH,EAAc,IAAM,IAIxCxH,EAAUqG,GAAYrG,EAASyH,EAAkBP,GAC9B,WAAfD,GACAxtB,EAAU6rB,cAElBoC,GAAa,EACbJ,GAAYA,IAMhB,SAASf,EAAO1I,GAIZ,GAHK8J,IACD9J,GAASA,GACbmC,GAAWnC,GACN6J,EAAY,CACb,IAAMrjB,EAAQ5K,EAAU0b,KAAKjW,KAAKD,IAAI,EAAG+gB,IACzC2G,EAAStiB,EAAMlI,MACXyqB,IACAD,EAASC,EAAsBD,IACnCe,EAAaC,EAAoBtjB,EAAM6f,KAAOlE,GAAW,EAEhD,OAAbuH,QAAkC,IAAbA,GAA+BA,EAASZ,GACzDe,IACoB,IAAhBF,IACqB,OAArBC,QAAkD,IAArBA,IAAkDA,EAAmBzH,IAClGwH,EAAcR,EA/D9B,SAA+BhH,EAAStE,EAAUmE,EAAO8H,GACrD,OAAOA,EAAoB3H,GAAWtE,EAAWmE,EAAQG,IAAYH,EA+DzDiI,CAAsB9H,EAASyH,EAAkBP,EAAaS,IAAsBZ,KAnB5FL,EAAeD,OACfY,GAAcA,MA+BlB,OADAR,IAJe,OAAXM,QAA8B,IAAXA,GAA6BA,KAChDT,EAAiBI,EAAOP,IACTpuB,SAGZ,CACHsuB,KAAM,WACS,OAAXW,QAA8B,IAAXA,GAA6BA,IAChDV,EAAeD,SEzF3B,SAASsB,GAAkB9E,EAAU+E,GACjC,OAAOA,EAAgB/E,GAAY,IAAO+E,GAAiB,E,iKCiB/D,SAASC,GAAT,GAA+F,IAAhDxM,EAAgD,EAAhDA,KAAMsK,EAA0C,EAA1CA,MAAOmC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAASnc,GAAc,cACrF1H,GAAU,UAAK0H,GA+CrB,OA9CI8Z,IACAxhB,EAAO,OAAawhB,GAIpB9Z,EAAWyP,WACXnX,EAAO,SAAegR,GAAsBtJ,EAAWyP,WACvDzP,EAAWib,cACX3iB,EAAQ2iB,YAAc3R,GAAsBtJ,EAAWib,cAIvDzL,IACAlX,EAAO,K9BJO,SAACkX,GACnB,OAAOzjB,MAAMC,QAAQwjB,IAA4B,kBAAZA,EAAK,G8BGpB4M,CAAc5M,GAC1BA,EAAKxB,IAAI/B,IACTA,GAA2BuD,IAKb,UAApBxP,EAAWpN,OACX0F,EAAQ1F,KAAO,cAIfqpB,GAAQE,GAAQD,MAEM,EAClBD,EACA3jB,EAAQ0iB,WAAa,UAEhBmB,EACL7jB,EAAQ0iB,WAAa,OAEhBkB,IACL5jB,EAAQ0iB,WAAa,UAEzB1iB,EAAQwiB,OAASqB,GAAQF,GAAQC,GAAQlc,EAAW8a,QAOhC,WAApB9a,EAAWpN,OACX0F,EAAQ1F,KAAO,aACZ0F,EAKX,SAAS+jB,GAAuBrc,EAAY3Q,GACxC,IAAIwL,EAAI2T,EAER,OAAiG,QAAzFA,EAAsC,QAAhC3T,GADUyhB,GAAmBtc,EAAY3Q,IAAQ,IAC5BukB,aAA0B,IAAP/Y,EAAgBA,EAAKmF,EAAW4T,aAA0B,IAAPpF,EAAgBA,EAAK,EASlI,SAAS+N,GAA6Bvc,EAAY1H,EAASjJ,GAcvD,OAbItD,MAAMC,QAAQsM,EAAQ+W,UAA+BrkB,IAAxBgV,EAAWyP,WACxCzP,EAAWyP,SAAW,IAT9B,SAA0BnX,GAClBvM,MAAMC,QAAQsM,EAAQ+W,KAAyB,OAAlB/W,EAAQ+W,GAAG,KACxC/W,EAAQ+W,IAAR,QAAiB/W,EAAQ+W,IACzB/W,EAAQ+W,GAAG,GAAK/W,EAAQ2b,MAQ5BuI,CAAiBlkB,GA5ErB,YAA8J,EAA/HmkB,KAA+H,EAAzH7I,MAAyH,EAA1G8I,cAA0G,EAA3FC,gBAA2F,EAA1EC,iBAA0E,EAAxD9B,OAAwD,EAAhDE,WAAgD,EAApCC,YAAoC,EAAvBhH,KAAuB,IAAdjU,GAAc,cAC1J,QAASvU,OAAO8Q,KAAKyD,GAAYnM,OA+E5BgpB,CAAoB7c,KACrBA,GAAa,kBACNA,GtB3Dc,SAAC8c,EAAUzN,GACpC,IAAI0N,EAQJ,OANIA,EADAte,GAAkB4Q,GACEK,GAIhBC,GAAmBmN,IAAanN,GAAmBjb,SAE3D,QAAS2a,GAAAA,GAAO0N,EAAkB1N,IsBmDvB2N,CAAqB3tB,EAAKiJ,EAAQ+W,OAG7C,kBACO/W,GACA0jB,GAAoChc,IAM/C,SAASid,GAAa5tB,EAAKa,EAAOyJ,EAAQqG,EAAYob,GAClD,IAAM8B,EAAkBZ,GAAmBtc,EAAY3Q,IAAQ,GAC3D8L,OAAkCnQ,IAAzBkyB,EAAgBjJ,KAAqBiJ,EAAgBjJ,KAAO/jB,EAAMc,MACzEmsB,EAAqBpO,GAAa1f,EAAKsK,GAC9B,SAAXwB,GAAqBgiB,GAAwC,kBAAXxjB,EAKlDwB,EAASyT,GAAkBvf,EAAKsK,GAE3ByjB,GAAOjiB,IAA6B,kBAAXxB,EAC9BwB,EAASkiB,GAAY1jB,IAEf5N,MAAMC,QAAQ2N,IACpByjB,GAAOzjB,IACW,kBAAXwB,IACPxB,EAAS0jB,GAAYliB,IAEzB,IAAMmiB,EAAqBvO,GAAa1f,EAAK8L,GAiC7C,MAhCO,oCAAyE9L,EAAzE,kBAAsF8L,EAAtF,iBAAqGxB,EAArG,cAAiHwB,EAAjH,sEAAqLA,EAArL,qCAAwNxB,EAAxN,8BAgCC2jB,GACHH,IACwB,IAAzBD,EAAgBtqB,KAjCpB,WACI,IAAM0F,EAAU,CACZ2b,KAAM9Y,EACNkU,GAAI1V,EACJqd,SAAU9mB,EAAM+B,cAChBmpB,WAAAA,EACAE,SAAU,SAACxvB,GAAD,OAAOoE,EAAMiB,IAAIrF,KAE/B,MAAgC,YAAzBoxB,EAAgBtqB,MACM,UAAzBsqB,EAAgBtqB,KCzI5B,YAAuM,IAC/L2qB,EAD+L,IAApLtJ,KAAAA,OAAoL,MAA7K,EAA6K,MAA1K+C,SAAAA,OAA0K,MAA/J,EAA+J,EAA5JjkB,EAA4J,EAA5JA,IAAKC,EAAuJ,EAAvJA,IAAuJ,IAAlJuY,MAAAA,OAAkJ,MAA1I,GAA0I,MAArImO,aAAAA,OAAqI,MAAtH,IAAsH,MAAjH8D,gBAAAA,OAAiH,MAA/F,IAA+F,MAA1FC,cAAAA,OAA0F,MAA1E,GAA0E,MAAtEzF,UAAAA,OAAsE,MAA1D,EAA0D,EAAvD2B,EAAuD,EAAvDA,aAAckB,EAAyC,EAAzCA,OAAQS,EAAiC,EAAjCA,SAAUF,EAAuB,EAAvBA,WAAYD,EAAW,EAAXA,OAExL,SAASuC,EAAc5xB,GACnB,YAAgBd,IAAR+H,GAAqBjH,EAAIiH,QAAiB/H,IAARgI,GAAqBlH,EAAIkH,EAEvE,SAAS2qB,EAAgB7xB,GACrB,YAAYd,IAAR+H,EACOC,OACChI,IAARgI,GAEGC,KAAKwX,IAAI1X,EAAMjH,GAAKmH,KAAKwX,IAAIzX,EAAMlH,GAD/BiH,EAC0CC,EAEzD,SAAS4qB,EAAetlB,GACC,OAArBilB,QAAkD,IAArBA,GAAuCA,EAAiB/C,OACrF+C,EAAmBlxB,IAAQ,kBACpBiM,GADmB,IAEtBuiB,OAAAA,EACAS,SAAU,SAACxvB,GACP,IAAI+O,EACS,OAAbygB,QAAkC,IAAbA,GAA+BA,EAASxvB,GACjC,QAA3B+O,EAAKvC,EAAQgjB,gBAA6B,IAAPzgB,GAAyBA,EAAGjP,KAAK0M,EAASxM,IAElFsvB,WAAAA,EACAD,OAAAA,KAGR,SAAS0C,EAAYvlB,GACjBslB,GAAe,QACXhrB,KAAM,SACNqc,UAAWuO,EACXtO,QAASuO,EACTzF,UAAAA,GACG1f,IAGX,GAAIolB,EAAczJ,GAEd4J,EAAY,CAAE5J,KAAAA,EAAM+C,SAAAA,EAAU3H,GAAIsO,EAAgB1J,SAEjD,CASD,IAAIta,EAAS4R,EAAQyL,EAAW/C,EACJ,qBAAjB0F,IACPhgB,EAASggB,EAAahgB,IAC1B,IAEIwP,EACAte,EAHEizB,EAAWH,EAAgBhkB,GAC3BokB,EAAUD,IAAa/qB,GAAO,EAAI,EAYxC6qB,EAAe,CACXhrB,KAAM,QACNqhB,KAAAA,EACA+C,SAAAA,EACA0C,aAAAA,EACAnO,MAAAA,EACAyM,UAAAA,EACA2B,aAAAA,EACA2B,SAAUoC,EAAc/jB,GAjBN,SAAC7N,GACnBqd,EAAOte,EACPA,EAAUiB,EACVkrB,EAAW8E,GAAkBhwB,EAAIqd,EAAMwK,KAAe/B,QACrC,IAAZmM,GAAiBjyB,EAAIgyB,IACR,IAAbC,GAAkBjyB,EAAIgyB,IACvBD,EAAY,CAAE5J,KAAMnoB,EAAGujB,GAAIyO,EAAU9G,SAAAA,UAWShsB,IAG1D,MAAO,CACHwvB,KAAM,kBAA2B,OAArB+C,QAAkD,IAArBA,OAA8B,EAASA,EAAiB/C,SD8D3FwD,EAAQ,kBAAK1lB,GAAY4kB,IACzB7wB,IAAQ,kBACHkwB,GAA6BW,EAAiB5kB,EAASjJ,IADrD,IAELisB,SAAU,SAACxvB,GACPwM,EAAQgjB,SAASxvB,GACjBoxB,EAAgB5B,UAAY4B,EAAgB5B,SAASxvB,IAEzDsvB,WAAY,WACR9iB,EAAQ8iB,aACR8B,EAAgB9B,YAAc8B,EAAgB9B,kBAI9D,WACI,IAAM6C,EAAcvf,GAA6B/E,GAKjD,OAJAzJ,EAAMiB,IAAI8sB,GACV7C,IACA8B,EAAgB5B,UAAY4B,EAAgB5B,SAAS2C,GACrDf,EAAgB9B,YAAc8B,EAAgB9B,aACvC,CAAEZ,KAAM,eAQvB,SAAS4C,GAAOltB,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtB6D,WAAW7D,KACa,IAAxBA,EAAMqB,QAAQ,KAE1B,SAAS8rB,GAAYa,GACjB,MAAoC,kBAAtBA,EACR,EACAtP,GAAkB,GAAIsP,GAEhC,SAAS5B,GAAmBtc,EAAY3Q,GACpC,OAAO2Q,EAAW3Q,IAAQ2Q,EAAU,SAAeA,EAMvD,SAAS4d,GAAevuB,EAAKa,EAAOyJ,GAAyB,IAAjBqG,EAAiB,uDAAJ,GAIrD,OAHIgR,KACAhR,EAAa,CAAEpN,MAAM,IAElB1C,EAAMhE,OAAM,SAACkvB,GAChB,IAAI+C,EAIAC,EAHE5wB,EAAYyvB,GAAa5tB,EAAKa,EAAOyJ,EAAQqG,EAAYob,GACzDiD,EAAUhC,GAAuBrc,EAAY3Q,GAC7CnD,EAAQ,kBAAOiyB,EAAW3wB,KAQhC,OANI6wB,EACAD,EAAcxK,GAAM1nB,EAAOod,GAAsB+U,IAGjDnyB,IAEG,WACHkyB,GAAeA,IACfD,GAAYA,EAAS3D,WE1MjC,ICAM8D,GAAoB,SAACxyB,GAAD,MAAO,aAAa0F,KAAK1F,ICHnD,SAASyyB,GAAcC,EAAKC,IACG,IAAvBD,EAAIjtB,QAAQktB,IACZD,EAAIvlB,KAAKwlB,GAEjB,SAASC,GAAWF,EAAKC,GACrB,IAAM5L,EAAQ2L,EAAIjtB,QAAQktB,GACtB5L,GAAS,GACT2L,EAAI1L,OAAOD,EAAO,G,ICLpB8L,GAAAA,WACF,cAAc,eACVpwB,KAAKqwB,cAAgB,G,kCAEzB,SAAIje,GAAS,WAET,OADA4d,GAAchwB,KAAKqwB,cAAeje,GAC3B,kBAAM+d,GAAW,EAAKE,cAAeje,M,oBAEhD,SAAOnO,EAAGC,EAAGga,GACT,IAAMoS,EAAmBtwB,KAAKqwB,cAAc/qB,OAC5C,GAAKgrB,EAEL,GAAyB,IAArBA,EAIAtwB,KAAKqwB,cAAc,GAAGpsB,EAAGC,EAAGga,QAG5B,IAAK,IAAIpD,EAAI,EAAGA,EAAIwV,EAAkBxV,IAAK,CAKvC,IAAM1I,EAAUpS,KAAKqwB,cAAcvV,GACnC1I,GAAWA,EAAQnO,EAAGC,EAAGga,M,qBAIrC,WACI,OAAOle,KAAKqwB,cAAc/qB,S,mBAE9B,WACItF,KAAKqwB,cAAc/qB,OAAS,M,EAjC9B8qB,GCUAG,GAAAA,WASF,WAAY7wB,GAAM,IAjBLiC,EAiBK,uBAKd3B,KAAKwwB,QAAU,SAMfxwB,KAAKywB,UAAY,EAMjBzwB,KAAK0wB,YAAc,EAMnB1wB,KAAK2wB,kBAAoB,IAAIP,GAM7BpwB,KAAK4wB,0BAA4B,IAAIR,GAMrCpwB,KAAK6wB,kBAAoB,IAAIT,GAQ7BpwB,KAAK8wB,kBAAmB,EACxB9wB,KAAK+wB,gBAAkB,SAACxzB,GAAqB,IAAlBX,IAAkB,yDACzC,EAAKge,KAAO,EAAKte,QACjB,EAAKA,QAAUiB,EAEf,MAA6B6nB,KAArB/B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACX,EAAKoN,cAAgBpN,IACrB,EAAKmN,UAAYpN,EACjB,EAAKqN,YAAcpN,EACnBqB,GAAAA,WAAgB,EAAKqM,wBAGrB,EAAKpW,OAAS,EAAKte,SACnB,EAAKq0B,kBAAkB5zB,OAAO,EAAKT,SAGnC,EAAKs0B,0BAA0BK,WAC/B,EAAKL,0BAA0B7zB,OAAO,EAAK2G,eAG3C9G,GACA,EAAKi0B,kBAAkB9zB,OAAO,EAAKT,UAW3C0D,KAAKgxB,sBAAwB,kBAAMrM,GAAAA,WAAgB,EAAKuM,gBAUxDlxB,KAAKkxB,cAAgB,YAAmB,EAAhB5N,YACF,EAAKoN,cACnB,EAAK9V,KAAO,EAAKte,QACjB,EAAKs0B,0BAA0B7zB,OAAO,EAAK2G,iBAGnD1D,KAAKmxB,aAAc,EACnBnxB,KAAK4a,KAAO5a,KAAK1D,QAAUoD,EAC3BM,KAAK8wB,kBA9GInvB,EA8GuB3B,KAAK1D,SA7GjC8jB,MAAM5a,WAAW7D,K,uCA+JzB,SAASyvB,GACL,OAAOpxB,KAAK2wB,kBAAkBvM,IAAIgN,K,4BAEtC,WACIpxB,KAAK2wB,kBAAkBU,U,6BAU3B,SAAgBD,GAGZ,OADAA,EAAapxB,KAAKyC,OACXzC,KAAK6wB,kBAAkBzM,IAAIgN,K,oBAOtC,SAAOE,GACHtxB,KAAKsxB,cAAgBA,I,iBAiBzB,SAAI/zB,GAAkB,IAAfX,IAAe,yDACbA,GAAWoD,KAAKsxB,cAIjBtxB,KAAKsxB,cAAc/zB,EAAGyC,KAAK+wB,iBAH3B/wB,KAAK+wB,gBAAgBxzB,EAAGX,K,iBAahC,WACI,OAAOoD,KAAK1D,U,yBAKhB,WACI,OAAO0D,KAAK4a,O,yBAShB,WAEI,OAAO5a,KAAK8wB,iBAEJvD,GAAkB/nB,WAAWxF,KAAK1D,SAC9BkJ,WAAWxF,KAAK4a,MAAO5a,KAAKywB,WAClC,I,mBAcV,SAAMxxB,GAAW,WAEb,OADAe,KAAKisB,OACE,IAAIsF,SAAQ,SAACC,GAChB,EAAKL,aAAc,EACnB,EAAKM,cAAgBxyB,EAAUuyB,MAChCE,MAAK,kBAAM,EAAKC,sB,kBAOvB,WACQ3xB,KAAKyxB,eACLzxB,KAAKyxB,gBACTzxB,KAAK2xB,mB,yBAOT,WACI,QAAS3xB,KAAKyxB,gB,4BAElB,WACIzxB,KAAKyxB,cAAgB,O,qBAWzB,WACIzxB,KAAK2wB,kBAAkBU,QACvBrxB,KAAK6wB,kBAAkBQ,QACvBrxB,KAAKisB,W,EA7RPsE,GAgSN,SAASqB,GAAYlyB,GACjB,OAAO,IAAI6wB,GAAY7wB,GC1S3B,IAAMmyB,GAAgB,SAACt0B,GAAD,OAAO,SAAC8G,GAAD,OAAUA,EAAKpB,KAAK1F,KCI3Cu0B,GAAsB,CAAC9rB,GAAQL,GAAID,GAASD,GAASI,GAAID,GCJlD,CACT3C,KAAM,SAAC1F,GAAD,MAAa,SAANA,GACbgI,MAAO,SAAChI,GAAD,OAAOA,KDMZw0B,GAAyB,SAACx0B,GAAD,OAAOu0B,GAAoB5L,KAAK2L,GAAct0B,KEJvEy0B,GAAa,GAAH,gBAAOF,IAAP,CAA4B3S,GAAOa,KAI7CiS,GAAgB,SAAC10B,GAAD,OAAOy0B,GAAW9L,KAAK2L,GAAct0B,KCO3D,SAAS20B,GAAen2B,EAAegU,EAAY3N,GAC/C,IAAMzG,EAAQI,EAAcwc,WAC5B,OAAOzI,GAAwBnU,EAAOoU,OAAuBtT,IAAX2F,EAAuBA,EAASzG,EAAMyG,OAf5F,SAAoBrG,GAChB,IAAMO,EAAU,GAEhB,OADAP,EAAciV,OAAOM,SAAQ,SAAC3P,EAAOb,GAAR,OAAiBxE,EAAQwE,GAAOa,EAAMc,SAC5DnG,EAYyF61B,CAAWp2B,GAP/G,SAAqBA,GACjB,IAAM0sB,EAAW,GAEjB,OADA1sB,EAAciV,OAAOM,SAAQ,SAAC3P,EAAOb,GAAR,OAAiB2nB,EAAS3nB,GAAOa,EAAM+B,iBAC7D+kB,EAIoH/kB,CAAY3H,I,sCCP3I,SAASq2B,GAAer2B,EAAe+E,EAAKa,GACpC5F,EAAcs2B,SAASvxB,GACvB/E,EAAcu2B,SAASxxB,GAAK8B,IAAIjB,GAGhC5F,EAAcw2B,SAASzxB,EAAK8wB,GAAYjwB,IAGhD,SAAS6wB,GAAUz2B,EAAegU,GAC9B,IAAMwB,EAAW2gB,GAAen2B,EAAegU,GAC/C,EAAyDwB,EAAWxV,EAAc02B,qBAAqBlhB,GAAU,GAAS,GAA1H,IAAMC,cAAAA,OAAN,MAAsB,GAAtB,EAA8CpG,GAA9C,EAA0BqG,YAA1B,eAEA,IAAK,IAAM3Q,KADXsK,GAAS,kBAAKA,GAAWoG,GACC,CAEtB4gB,GAAer2B,EAAe+E,EADhBqP,GAA6B/E,EAAOtK,MAyE1D,SAAS4xB,GAAwB5xB,EAAK2Q,GAClC,GAAKA,EAGL,OADwBA,EAAW3Q,IAAQ2Q,EAAU,SAAeA,GAC7CiU,KCrG3B,SAASiN,GAAwBhxB,GAC7B,OAAOzD,QAAQuF,EAAc9B,IAAUA,EAAMyiB,K,sCCqBjD,SAASwO,GAAe72B,EAAe82B,GAAuB,IACtDvmB,EADwCvC,EAAc,uDAAJ,GAEhDwH,EAAW2gB,GAAen2B,EAAe82B,EAAS9oB,EAAQ3H,QAChE,EAAkEmP,GAAY,GAA9E,IAAME,WAAAA,OAAN,MAAmB1V,EAAc0yB,wBAA0B,GAA3D,EACI1kB,EAAQ+oB,qBACRrhB,EAAa1H,EAAQ+oB,oBAMzB,IAAMpE,EAAend,EACf,kBAAMwhB,GAAch3B,EAAewV,EAAUxH,IAC7C,kBAAMwnB,QAAQC,WAKdwB,GAA+D,QAAxC1mB,EAAKvQ,EAAck3B,uBAAoC,IAAP3mB,OAAgB,EAASA,EAAGhF,MACnG,WAAsB,IAArB4rB,EAAqB,uDAAN,EACd,EAAkEzhB,EAAlE,IAAQ0c,cAAAA,OAAR,MAAwB,EAAxB,EAA2BC,EAA3B,EAA2BA,gBAAiBC,EAA5C,EAA4CA,iBAC5C,OAAO8E,GAAgBp3B,EAAe82B,EAAS1E,EAAgB+E,EAAc9E,EAAiBC,EAAkBtkB,IAElH,kBAAMwnB,QAAQC,WAKpB,EAAiB/f,EAATyc,EAAR,EAAQA,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAACQ,EAAcsE,GACf,CAACA,EAAoBtE,GAF3B,gBAAO0E,EAAP,KAAcC,EAAd,KAGA,OAAOD,IAAQ1B,KAAK2B,GAGpB,OAAO9B,QAAQ3Z,IAAI,CAAC8W,IAAgBsE,EAAmBjpB,EAAQsb,SAMvE,SAAS0N,GAAch3B,EAAegU,GAA0D,IACxFzD,EADwF,yDAAJ,GAAI,IAA5C+Y,MAAAA,OAA4C,MAApC,EAAoC,EAAjCyN,EAAiC,EAAjCA,mBAAoBzuB,EAAa,EAAbA,KAE/E,EAAsFtI,EAAc02B,qBAAqB1iB,GAAzH,IAAM0B,WAAAA,OAAN,MAAmB1V,EAAc0yB,uBAAjC,EAAyDjd,EAAzD,EAAyDA,cAAkBpG,GAA3E,cACMkoB,EAAav3B,EAAcu2B,SAAS,cACtCQ,IACArhB,EAAaqhB,GACjB,IAAMS,EAAa,GACbC,EAAqBnvB,IAAiD,QAAvCiI,EAAKvQ,EAAcc,sBAAmC,IAAPyP,OAAgB,EAASA,EAAGmnB,WAAWpvB,IAP/B,WAQjFvD,GACP,IAAMa,EAAQ5F,EAAcu2B,SAASxxB,GAC/B4Q,EAActG,EAAOtK,GAC3B,IAAKa,QACelF,IAAhBiV,GACC8hB,GACGE,GAAqBF,EAAoB1yB,GAC7C,iBAEJ,IAAI6tB,GAAkB,QAAEtJ,MAAAA,GAAU5T,GAI9B1V,EAAc43B,oBAAsBvwB,EAAeT,IAAI7B,KACvD6tB,GAAkB,kBACXA,GADQ,IAEXtqB,MAAM,EACNghB,MAAO,KAGf,IAAIpmB,EAAYowB,GAAevuB,EAAKa,EAAO+P,EAAaid,GACpDgE,GAAwBW,KACxBA,EAAWlP,IAAItjB,GACf7B,EAAYA,EAAUyyB,MAAK,kBAAM4B,EAAWM,OAAO9yB,OAEvDyyB,EAAW7oB,KAAKzL,IAzBpB,IAAK,IAAM6B,KAAOsK,EAAQ,EAAftK,GA2BX,OAAOywB,QAAQ3Z,IAAI2b,GAAY7B,MAAK,WAChClgB,GAAiBghB,GAAUz2B,EAAeyV,MAGlD,SAAS2hB,GAAgBp3B,EAAe82B,GAAgF,IAAvE1E,EAAuE,uDAAvD,EAAGC,EAAoD,uDAAlC,EAAGC,EAA+B,uDAAZ,EAAGtkB,EAAS,uCAC9GwpB,EAAa,GACbM,GAAsB93B,EAAck3B,gBAAgB3rB,KAAO,GAAK8mB,EAChE0F,EAA+C,IAArBzF,EAC1B,eAACvT,EAAD,uDAAK,EAAL,OAAWA,EAAIsT,GACf,eAACtT,EAAD,uDAAK,EAAL,OAAW+Y,EAAqB/Y,EAAIsT,GAS1C,OARA5wB,MAAMkoB,KAAK3pB,EAAck3B,iBACpBloB,KAAKgpB,IACLziB,SAAQ,SAAC2E,EAAO6E,GACjByY,EAAW7oB,KAAKkoB,GAAe3c,EAAO4c,GAAR,QAAC,UACxB9oB,GADuB,IAE1Bsb,MAAO8I,EAAgB2F,EAAwBhZ,MAChD4W,MAAK,kBAAMzb,EAAMlZ,OAAO,oBAAqB81B,UAE7CtB,QAAQ3Z,IAAI2b,GAKvB,SAASQ,GAAgB9vB,EAAGC,GACxB,OAAOD,EAAE+vB,iBAAiB9vB,GAQ9B,SAASwvB,GAAT,EAAiE5yB,GAAK,IAAtCmzB,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,eACrCC,EAAcF,EAAc72B,eAAe0D,KAAgC,IAAxBozB,EAAepzB,GAExE,OADAozB,EAAepzB,IAAO,EACfqzB,E,sCChILC,GAAuB,CACzBziB,GAAc0iB,QACd1iB,GAAc2G,OACd3G,GAAcsI,MACdtI,GAAcoE,MACdpE,GAAckI,IACdlI,GAAc2iB,KACd3iB,GAAc4iB,MAEZC,GAAuB,UAAIJ,IAAsBpM,UACjDyM,GAAoBL,GAAqB9uB,OAC/C,SAASovB,GAAY34B,GACjB,OAAO,SAACw3B,GAAD,OAAgBhC,QAAQ3Z,IAAI2b,EAAW9T,KAAI,gBAAGxgB,EAAH,EAAGA,UAAW8K,EAAd,EAAcA,QAAd,ODdtD,SAA8BhO,EAAegU,GAA0B,IAE/D9Q,EAFiD8K,EAAc,uDAAJ,GAG/D,GAFAhO,EAAcgB,OAAO,iBAAkBgT,GAEnCvS,MAAMC,QAAQsS,GAAa,CAC3B,IAAMwjB,EAAaxjB,EAAW0P,KAAI,SAACoT,GAAD,OAAaD,GAAe72B,EAAe82B,EAAS9oB,MACtF9K,EAAYsyB,QAAQ3Z,IAAI2b,QAEvB,GAA0B,kBAAfxjB,EACZ9Q,EAAY2zB,GAAe72B,EAAegU,EAAYhG,OAErD,CACD,IAAM4qB,EAA2C,oBAAf5kB,EAC5BmiB,GAAen2B,EAAegU,EAAYhG,EAAQ3H,QAClD2N,EACN9Q,EAAY8zB,GAAch3B,EAAe44B,EAAoB5qB,GAEjE,OAAO9K,EAAUyyB,MAAK,kBAAM31B,EAAcgB,OAAO,oBAAqBgT,MCFQ6kB,CAAqB74B,EAAekD,EAAW8K,QAEjI,SAAS8qB,GAAqB94B,GAC1B,IAAI+B,EAAU42B,GAAY34B,GACpB8N,EAoSV,WAAuB,MACnB,uBACK8H,GAAc0iB,QAAUS,IAAgB,KAD7C,UAEKnjB,GAAc2G,OAASwc,OAF5B,UAGKnjB,GAAcoE,MAAQ+e,OAH3B,UAIKnjB,GAAckI,IAAMib,OAJzB,UAKKnjB,GAAc2iB,KAAOQ,OAL1B,UAMKnjB,GAAcsI,MAAQ6a,OAN3B,UAOKnjB,GAAc4iB,KAAOO,MAP1B,EArScC,GACVC,GAAkB,EAKhBC,EAA0B,SAACxR,EAAK1T,GAClC,IAAMwB,EAAW2gB,GAAen2B,EAAegU,GAC/C,GAAIwB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkBpG,GAAtC,QAAiDmG,EAAjD,IACAkS,GAAM,0BAAKA,GAAQrY,GAAWoG,GAElC,OAAOiS,GAmBX,SAAS3mB,EAAeiN,EAASmrB,GA+B7B,IA9BA,IAAI5oB,EACE3Q,EAAQI,EAAcwc,WACtBla,EAAUtC,EAAco5B,mBAAkB,IAAS,GAKnD5B,EAAa,GAKb6B,EAAc,IAAI/xB,IAMpBgyB,EAAkB,GAKlBC,EAAsBC,EAAAA,EAxBsB,WA+BvCza,GACL,IAAMzW,EAAOmwB,GAAqB1Z,GAC5B0a,EAAY3rB,EAAMxF,GAClB3F,EAA8B,QAAtB4N,EAAK3Q,EAAM0I,UAA0B,IAAPiI,EAAgBA,EAAKjO,EAAQgG,GACnEoxB,EAAgBn4B,EAAeoB,GAK/Bg3B,EAAcrxB,IAAS6wB,EAAoBM,EAAU7f,SAAW,MAClD,IAAhB+f,IACAJ,EAAsBxa,GAO1B,IAAI6a,EAAcj3B,IAASL,EAAQgG,IAAS3F,IAAS/C,EAAM0I,IAASoxB,EAepE,GAXIE,GACAX,GACAj5B,EAAc65B,yBACdD,GAAc,GAMlBH,EAAUvB,eAAV,UAA+BoB,IAI7BG,EAAU7f,UAA4B,OAAhB+f,IAElBh3B,IAAS82B,EAAUK,UAErBn4B,EAAoBgB,IACJ,mBAATA,EACP,iBAOJ,IAAMo3B,EAqKlB,SAAgClb,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAIpd,MAAMC,QAAQkd,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,EA5K0Bmb,CAAuBP,EAAUK,SAAUn3B,GAChEs3B,EAAoBF,GAEnBzxB,IAAS6wB,GACNM,EAAU7f,WACTggB,GACDF,GAEH3a,EAAIwa,GAAuBG,EAK1BQ,EAAiBz4B,MAAMC,QAAQiB,GAAQA,EAAO,CAACA,GAKjDw3B,EAAiBD,EAAe1f,OAAO0e,EAAyB,KAChD,IAAhBS,IACAQ,EAAiB,IAUrB,MAAoCV,EAA5BW,mBAAAA,OAAR,MAA6B,GAA7B,EACMC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAACv1B,GACnBk1B,GAAoB,EACpBZ,EAAY3d,OAAO3W,GACnB00B,EAAUtB,eAAepzB,IAAO,GAEpC,IAAK,IAAMA,KAAOs1B,EAAS,CACvB,IAAMzb,EAAOub,EAAep1B,GACtB8Z,EAAOub,EAAmBr1B,GAE5Bu0B,EAAgBj4B,eAAe0D,KAK/B6Z,IAASC,EAKL1K,GAAkByK,IAASzK,GAAkB0K,IACxCF,GAAeC,EAAMC,IAASkb,EAC/BO,EAAcv1B,GAOd00B,EAAUvB,cAAcnzB,IAAO,OAGrBrE,IAATke,EAEL0b,EAAcv1B,GAIds0B,EAAYhR,IAAItjB,QAGNrE,IAATke,GAAsBya,EAAYzyB,IAAI7B,GAK3Cu1B,EAAcv1B,GAOd00B,EAAUvB,cAAcnzB,IAAO,GAOvC00B,EAAUK,SAAWn3B,EACrB82B,EAAUW,mBAAqBD,EAI3BV,EAAU7f,WACV0f,GAAkB,kBAAKA,GAAoBa,IAE3ClB,GAAmBj5B,EAAcW,wBACjCs5B,GAAoB,GAOpBA,IAAsBL,GACtBpC,EAAW7oB,KAAX,MAAA6oB,GAAU,QAAS0C,EAAexW,KAAI,SAACxgB,GAAD,MAAgB,CAClDA,UAAWA,EACX8K,SAAS,QAAE1F,KAAAA,GAAS0F,UAjKvB+Q,EAAI,EAAGA,EAAI2Z,GAAmB3Z,IAAK,EAAnCA,GA0KT,GAAIsa,EAAY9tB,KAAM,CAClB,IAAMgvB,EAAoB,GAC1BlB,EAAY9jB,SAAQ,SAACxQ,GACjB,IAAMy1B,EAAiBx6B,EAAcy6B,cAAc11B,QAC5BrE,IAAnB85B,IACAD,EAAkBx1B,GAAOy1B,MAGjChD,EAAW7oB,KAAK,CAAEzL,UAAWq3B,IAEjC,IAAIG,EAAgBv4B,QAAQq1B,EAAWjuB,QAOvC,OANI0vB,IACkB,IAAlBr5B,EAAMgB,UACLZ,EAAc65B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB34B,EAAQy1B,GAAchC,QAAQC,UAmBzD,MAAO,CACH10B,eAAAA,EACAgZ,UAhBJ,SAAmBzR,EAAMsR,EAAU5L,GAC/B,IAAIuC,EAEJ,GAAIzC,EAAMxF,GAAMsR,WAAaA,EACzB,OAAO4b,QAAQC,UAEsB,QAAxCllB,EAAKvQ,EAAck3B,uBAAoC,IAAP3mB,GAAyBA,EAAGgF,SAAQ,SAAC2E,GAAY,IAAI3J,EAAI,OAAuC,QAA/BA,EAAK2J,EAAMpZ,sBAAmC,IAAPyP,OAAgB,EAASA,EAAGwJ,UAAUzR,EAAMsR,MACrM9L,EAAMxF,GAAMsR,SAAWA,EACvB,IAAM4d,EAAaz2B,EAAeiN,EAAS1F,GAC3C,IAAK,IAAMvD,KAAO+I,EACdA,EAAM/I,GAAKmzB,cAAgB,GAE/B,OAAOV,GAKPmD,mBA7PJ,SAA4BC,GACxB74B,EAAU64B,EAAa56B,IA6PvB03B,SAAU,kBAAM5pB,IAYxB,SAASirB,KAAkC,IAAlBnf,EAAkB,wDACvC,MAAO,CACHA,SAAAA,EACAse,cAAe,GACfC,eAAgB,GAChBiC,mBAAoB,ICjT5B,IAAM5C,GAAa,CACft0B,UAAW4Z,IAAwB,YAAgC,IAA7B9c,EAA6B,EAA7BA,cAAe+B,EAAc,EAAdA,QAMjD/B,EAAcc,iBAAmBd,EAAcc,eAAiBg4B,GAAqB94B,IAIjF2B,EAAoBI,KACpBzC,EAAAA,EAAAA,YAAU,kBAAMyC,EAAQ84B,UAAU76B,KAAgB,CAAC+B,OAG3DoB,KAAM2Z,IAAwB,SAACld,GAC3B,IAAQyG,EAA0BzG,EAA1ByG,OAAQrG,EAAkBJ,EAAlBI,cAChB,EAAkCse,KAAlC,gBAAOC,EAAP,KAAkBuc,EAAlB,KACM56B,GAAkBH,EAAAA,EAAAA,YAAWd,IACnCK,EAAAA,EAAAA,YAAU,WACNU,EAAcue,UAAYA,EAC1B,IAAMrb,EAAYlD,EAAcc,gBAC5Bd,EAAcc,eAAeiZ,UAAUnE,GAAc4iB,MAAOja,EAAW,CACnElY,OAASnG,GAAmBA,EAAgBmG,QACxCA,IAERnD,IAAcqb,GACdrb,EAAUyyB,KAAKmF,KAEpB,CAACvc,QCrCNvR,GAAW,SAAC9E,EAAGC,GAAJ,OAAUQ,KAAKwX,IAAIjY,EAAIC,IACxC,SAAS4yB,GAAW7yB,EAAGC,GAEnB,IAAM6yB,EAAShuB,GAAS9E,EAAEL,EAAGM,EAAEN,GACzBozB,EAASjuB,GAAS9E,EAAEJ,EAAGK,EAAEL,GAC/B,OAAOa,KAAKqc,KAAK,SAAAgW,EAAU,GAAV,SAAcC,EAAU,I,ICMvCC,GAAAA,WACF,WAAYvkB,EAAOwkB,GAAuC,oEAAJ,GAAvBv8B,EAA2B,EAA3BA,mBA2D3B,IA3DsD,eAItDqF,KAAKm3B,WAAa,KAIlBn3B,KAAKo3B,cAAgB,KAIrBp3B,KAAKq3B,kBAAoB,KAIzBr3B,KAAKk3B,SAAW,GAChBl3B,KAAKs3B,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMxhB,EAAO0hB,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAKN,WAIpBO,EAA0BZ,GAAWjhB,EAAKhJ,OAAQ,CAAEjJ,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAK4zB,GAAiBC,EAAtB,CAEA,IAAQhkB,EAAUmC,EAAVnC,MACA4P,EAAc8B,KAAd9B,UACR,EAAKkU,QAAQ9sB,MAAb,kBAAuBgJ,GAAvB,IAA8B4P,UAAAA,KAC9B,MAA4B,EAAK4T,SAAzBS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OACZH,IACDE,GAAWA,EAAQ,EAAKP,cAAevhB,GACvC,EAAKshB,WAAa,EAAKC,eAE3BQ,GAAUA,EAAO,EAAKR,cAAevhB,MAEzC7V,KAAK63B,kBAAoB,SAACnlB,EAAOmD,GAC7B,EAAKuhB,cAAgB1kB,EACrB,EAAK2kB,kBAAoBS,GAAejiB,EAAM,EAAKlb,oBAE/C8X,GAAaC,IAA4B,IAAlBA,EAAMqlB,QAC7B,EAAKC,gBAAgBtlB,EAAOmD,GAIhC8O,GAAAA,OAAY,EAAK2S,aAAa,IAElCt3B,KAAKg4B,gBAAkB,SAACtlB,EAAOmD,GAC3B,EAAKoiB,MACL,MAAgC,EAAKf,SAA7BgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aACTC,EAAUb,GAAWO,GAAejiB,EAAM,EAAKlb,oBAAqB,EAAK68B,SAC3E,EAAKL,YAAce,GACnBA,EAAMxlB,EAAO0lB,GAEjBD,GAAgBA,EAAazlB,EAAO0lB,MAGpCtlB,GAAaJ,IAAUA,EAAMK,QAAQzN,OAAS,GAAlD,CAEAtF,KAAKk3B,SAAWA,EAChBl3B,KAAKrF,mBAAqBA,EAC1B,IAAMkb,EAAOjC,GAAiBlB,GACxB2lB,EAAcP,GAAejiB,EAAM7V,KAAKrF,oBACtC+Y,EAAU2kB,EAAV3kB,MACR,EAAsB0R,KAAd9B,EAAR,EAAQA,UACRtjB,KAAKw3B,QAAU,EAAC,kBAAK9jB,GAAN,IAAa4P,UAAAA,KAC5B,IAAQgV,EAAmBpB,EAAnBoB,eACRA,GACIA,EAAe5lB,EAAO6kB,GAAWc,EAAar4B,KAAKw3B,UACvDx3B,KAAKu4B,gBAAkBliB,GAAKtB,GAAgBJ,OAAQ,cAAe3U,KAAK63B,mBAAoB9iB,GAAgBJ,OAAQ,YAAa3U,KAAKg4B,iBAAkBjjB,GAAgBJ,OAAQ,gBAAiB3U,KAAKg4B,mB,6CAE1M,SAAed,GACXl3B,KAAKk3B,SAAWA,I,iBAEpB,WACIl3B,KAAKu4B,iBAAmBv4B,KAAKu4B,kBAC7BxT,GAAWgH,OAAO/rB,KAAKs3B,iB,EA/EzBL,GAkFN,SAASa,GAAejiB,EAAMlb,GAC1B,OAAOA,EAAqB,CAAE+Y,MAAO/Y,EAAmBkb,EAAKnC,QAAWmC,EAE5E,SAAS2iB,GAAcv0B,EAAGC,GACtB,MAAO,CAAEN,EAAGK,EAAEL,EAAIM,EAAEN,EAAGC,EAAGI,EAAEJ,EAAIK,EAAEL,GAEtC,SAAS0zB,GAAT,EAA+BC,GAAS,IAAlB9jB,EAAkB,EAAlBA,MAClB,MAAO,CACHA,MAAAA,EACA2P,MAAOmV,GAAc9kB,EAAO+kB,GAAgBjB,IAC5C3qB,OAAQ2rB,GAAc9kB,EAAOglB,GAAiBlB,IAC9C/O,SAAU/kB,GAAY8zB,EAAS,KAGvC,SAASkB,GAAiBlB,GACtB,OAAOA,EAAQ,GAEnB,SAASiB,GAAgBjB,GACrB,OAAOA,EAAQA,EAAQlyB,OAAS,GAEpC,SAAS5B,GAAY8zB,EAAS/G,GAC1B,GAAI+G,EAAQlyB,OAAS,EACjB,MAAO,CAAE1B,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAIiX,EAAI0c,EAAQlyB,OAAS,EACrBqzB,EAAmB,KACjBC,EAAYH,GAAgBjB,GAC3B1c,GAAK,IACR6d,EAAmBnB,EAAQ1c,KACvB8d,EAAUtV,UAAYqV,EAAiBrV,UACvCvI,GAAsB0V,MAG1B3V,IAEJ,IAAK6d,EACD,MAAO,CAAE/0B,EAAG,EAAGC,EAAG,GAEtB,IAAMg1B,GAAQD,EAAUtV,UAAYqV,EAAiBrV,WAAa,IAClE,GAAa,IAATuV,EACA,MAAO,CAAEj1B,EAAG,EAAGC,EAAG,GAEtB,IAAMoM,EAAkB,CACpBrM,GAAIg1B,EAAUh1B,EAAI+0B,EAAiB/0B,GAAKi1B,EACxCh1B,GAAI+0B,EAAU/0B,EAAI80B,EAAiB90B,GAAKg1B,GAQ5C,OANI5oB,EAAgBrM,IAAM2xB,EAAAA,IACtBtlB,EAAgBrM,EAAI,GAEpBqM,EAAgBpM,IAAM0xB,EAAAA,IACtBtlB,EAAgBpM,EAAI,GAEjBoM,EC/IX,SAAS6oB,GAAWC,GAChB,OAAOA,EAAKt0B,IAAMs0B,EAAKv0B,IAE3B,SAASw0B,GAAOr3B,GAAuC,IAAhCyJ,EAAgC,uDAAvB,EAAG6tB,EAAoB,uDAAN,IAC7C,OAAOv0B,KAAKwX,IAAIva,EAAQyJ,IAAW6tB,EAEvC,SAASC,GAAc7V,EAAOhY,EAAQD,GAAsB,IAAdwB,EAAc,uDAAL,GACnDyW,EAAMzW,OAASA,EACfyW,EAAM8V,YAAc7oB,GAAIjF,EAAO7G,IAAK6G,EAAO5G,IAAK4e,EAAMzW,QACtDyW,EAAMnd,MAAQ4yB,GAAW1tB,GAAU0tB,GAAWztB,IAC1C2tB,GAAO3V,EAAMnd,MAAO,EAAG,OAAWka,MAAMiD,EAAMnd,UAC9Cmd,EAAMnd,MAAQ,GAClBmd,EAAM+V,UACF9oB,GAAIlF,EAAO5G,IAAK4G,EAAO3G,IAAK4e,EAAMzW,QAAUyW,EAAM8V,aAClDH,GAAO3V,EAAM+V,YAAchZ,MAAMiD,EAAM+V,cACvC/V,EAAM+V,UAAY,GAE1B,SAASC,GAAahW,EAAOhY,EAAQD,EAAQwB,GACzCssB,GAAc7V,EAAMzf,EAAGyH,EAAOzH,EAAGwH,EAAOxH,EAAc,OAAXgJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOvD,SAClG6vB,GAAc7V,EAAMxf,EAAGwH,EAAOxH,EAAGuH,EAAOvH,EAAc,OAAX+I,QAA8B,IAAXA,OAAoB,EAASA,EAAOtD,SAEtG,SAASgwB,GAAiBluB,EAAQmuB,EAAU19B,GACxCuP,EAAO5G,IAAM3I,EAAO2I,IAAM+0B,EAAS/0B,IACnC4G,EAAO3G,IAAM2G,EAAO5G,IAAMs0B,GAAWS,GAMzC,SAASC,GAAyBpuB,EAAQ7H,EAAQ1H,GAC9CuP,EAAO5G,IAAMjB,EAAOiB,IAAM3I,EAAO2I,IACjC4G,EAAO3G,IAAM2G,EAAO5G,IAAMs0B,GAAWv1B,GAEzC,SAASk2B,GAAqBruB,EAAQ7H,EAAQ1H,GAC1C29B,GAAyBpuB,EAAOxH,EAAGL,EAAOK,EAAG/H,EAAO+H,GACpD41B,GAAyBpuB,EAAOvH,EAAGN,EAAOM,EAAGhI,EAAOgI,GCXxD,SAAS61B,GAA4BX,EAAMv0B,EAAKC,GAC5C,MAAO,CACHD,SAAa/H,IAAR+H,EAAoBu0B,EAAKv0B,IAAMA,OAAM/H,EAC1CgI,SAAahI,IAARgI,EACCs0B,EAAKt0B,IAAMA,GAAOs0B,EAAKt0B,IAAMs0B,EAAKv0B,UAClC/H,GAgBd,SAASk9B,GAA4BC,EAAYC,GAC7C,IAAIr1B,EAAMq1B,EAAgBr1B,IAAMo1B,EAAWp1B,IACvCC,EAAMo1B,EAAgBp1B,IAAMm1B,EAAWn1B,IAG3C,GAAIo1B,EAAgBp1B,IAAMo1B,EAAgBr1B,IACtCo1B,EAAWn1B,IAAMm1B,EAAWp1B,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EADgC,KAC3BC,EAD2B,KAGrC,MAAO,CAAED,IAAAA,EAAKC,IAAAA,GAwClB,IAAMq1B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH11B,IAAK21B,GAAoBH,EAAaC,GACtCx1B,IAAK01B,GAAoBH,EAAaE,IAG9C,SAASC,GAAoBH,EAAaI,GACtC,IAAI9tB,EACJ,MAA8B,kBAAhB0tB,EACRA,EAC8B,QAA7B1tB,EAAK0tB,EAAYI,UAA2B,IAAP9tB,EAAgBA,EAAK,EC1HrE,SAAS+tB,GAASzkB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,MCIpC,SAAS0kB,GAAT,GAAgE,IAA7B/yB,EAA6B,EAA7BA,IAC/B,MAAO,CACH3D,EAAG,CAAEY,IAFmD,EAAxBkD,KAEhBjD,IAFwC,EAAlB+C,OAGtC3D,EAAG,CAAEW,IAAK+C,EAAK9C,IAHyC,EAAXgD,SCLrD,SAAS8yB,GAAgBr0B,GACrB,YAAiBzJ,IAAVyJ,GAAiC,IAAVA,EAElC,SAASs0B,GAAT,GAA6C,IAAzBt0B,EAAyB,EAAzBA,MAAOuC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/B,OAAS6xB,GAAgBr0B,KACpBq0B,GAAgB9xB,KAChB8xB,GAAgB7xB,GAEzB,SAAS2B,GAAa2G,GAClB,OAAQwpB,GAASxpB,IACbypB,GAAezpB,IACfA,EAAOlN,GACPkN,EAAO3I,QACP2I,EAAO1I,SACP0I,EAAOzI,QAEf,SAASkyB,GAAezpB,GACpB,OAAO0pB,GAAc1pB,EAAOpN,IAAM82B,GAAc1pB,EAAOnN,GAE3D,SAAS62B,GAAc/4B,GACnB,OAAOA,GAAmB,OAAVA,ECdpB,SAASg5B,GAAWjnB,EAAOxN,EAAOizB,GAG9B,OAAOA,EADQjzB,GADYwN,EAAQylB,GAOvC,SAASyB,GAAgBlnB,EAAO0lB,EAAWlzB,EAAOizB,EAAa0B,GAI3D,YAHiBp+B,IAAbo+B,IACAnnB,EAAQinB,GAAWjnB,EAAOmnB,EAAU1B,IAEjCwB,GAAWjnB,EAAOxN,EAAOizB,GAAeC,EAKnD,SAAS0B,GAAe/B,GAAuD,IAAjDK,EAAiD,uDAArC,EAAGlzB,EAAkC,uDAA1B,EAAGizB,EAAuB,uCAAV0B,EAAU,uCAC3E9B,EAAKv0B,IAAMo2B,GAAgB7B,EAAKv0B,IAAK40B,EAAWlzB,EAAOizB,EAAa0B,GACpE9B,EAAKt0B,IAAMm2B,GAAgB7B,EAAKt0B,IAAK20B,EAAWlzB,EAAOizB,EAAa0B,GAKxE,SAASE,GAAcC,EAAvB,GAAsC,IAARp3B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAC7Bi3B,GAAeE,EAAIp3B,EAAGA,EAAEw1B,UAAWx1B,EAAEsC,MAAOtC,EAAEu1B,aAC9C2B,GAAeE,EAAIn3B,EAAGA,EAAEu1B,UAAWv1B,EAAEqC,MAAOrC,EAAEs1B,aAiDlD,SAAS8B,GAAc/0B,GACnB,OAAItB,OAAOs2B,UAAUh1B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,EAEvE,SAASi1B,GAAcpC,EAAMhwB,GACzBgwB,EAAKv0B,IAAMu0B,EAAKv0B,IAAMuE,EACtBgwB,EAAKt0B,IAAMs0B,EAAKt0B,IAAMsE,EAO1B,SAASqyB,GAAcrC,EAAMsC,EAA7B,GAAqE,oBAA3Bv6B,EAA2B,KAAtBw6B,EAAsB,KAAZC,EAAY,KAC3DC,OAAuC/+B,IAA1B4+B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EpC,EAAc7oB,GAAIyoB,EAAKv0B,IAAKu0B,EAAKt0B,IAAK+2B,GAE5CV,GAAe/B,EAAMsC,EAAWv6B,GAAMu6B,EAAWC,GAAWnC,EAAakC,EAAWn1B,OAKxF,IAAMu1B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaX,EAAK12B,GACvB82B,GAAcJ,EAAIp3B,EAAGU,EAAWm3B,IAChCL,GAAcJ,EAAIn3B,EAAGS,EAAWo3B,IC5GpC,SAASE,GAAmB/5B,EAAUi2B,GAClC,OAAOwC,GHeX,SAA4B5mB,EAAOokB,GAC/B,IAAKA,EACD,OAAOpkB,EACX,IAAMmoB,EAAU/D,EAAe,CAAEl0B,EAAG8P,EAAMhM,KAAM7D,EAAG6P,EAAMnM,MACnDu0B,EAAchE,EAAe,CAAEl0B,EAAG8P,EAAMlM,MAAO3D,EAAG6P,EAAMjM,SAC9D,MAAO,CACHF,IAAKs0B,EAAQh4B,EACb6D,KAAMm0B,EAAQj4B,EACd6D,OAAQq0B,EAAYj4B,EACpB2D,MAAOs0B,EAAYl4B,GGxBQm4B,CAAmBl6B,EAASiQ,wBAAyBgmB,ICcxF,IAAMkE,GAAsB,IAAIvlB,QAK1BwlB,GAAAA,WACF,WAAYlgC,IAAe,eAIvBiE,KAAKk8B,eAAiB,KACtBl8B,KAAKm8B,YAAa,EAClBn8B,KAAKo8B,iBAAmB,KACxBp8B,KAAKm5B,YAAc,CAAEv1B,EAAG,EAAGC,EAAG,GAI9B7D,KAAKq8B,aAAc,EACnBr8B,KAAKs8B,uBAAwB,EAI7Bt8B,KAAKu8B,QC7BY,CACrB34B,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ID+BjCzE,KAAKjE,cAAgBA,E,oCAEzB,SAAMygC,GAA4C,oEAAJ,GAAI,IAA7BC,aAAAA,OAA6B,SAI9C,IAAqC,IAAjCz8B,KAAKjE,cAAcue,UAAvB,CAEA,IAAMge,EAAiB,SAAC5lB,GAGpB,EAAK+e,gBACDgL,GACA,EAAKA,aAAa7oB,GAAiBlB,EAAO,QAAQgB,QAGpDikB,EAAU,SAACjlB,EAAOmD,GACpB,IAAIvJ,EAEJ,EAA+C,EAAKiM,WAA5CpZ,EAAR,EAAQA,KAAMu9B,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,cAC3Bx9B,GAASu9B,IACL,EAAKR,gBACL,EAAKA,iBACT,EAAKA,eAAiB7mB,GAAclW,GAE/B,EAAK+8B,mBAGd,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKQ,qBACD,EAAK7gC,cAAcmT,aACnB,EAAKnT,cAAcmT,WAAW2tB,oBAAqB,EACnD,EAAK9gC,cAAcmT,WAAW9D,YAAS3O,GAK3C49B,IAAS,SAACtB,GACN,IAAIzsB,EAAI2T,EACJ3jB,EAAU,EAAKwgC,mBAAmB/D,GAAMt2B,OAAS,EAIrD,GAAIiD,GAAQzC,KAAK3G,GAAU,CACvB,IAAMygC,EAA8G,QAA9F9c,EAA8C,QAAxC3T,EAAK,EAAKvQ,cAAcmT,kBAA+B,IAAP5C,OAAgB,EAASA,EAAG/I,cAA2B,IAAP0c,OAAgB,EAASA,EAAG+c,UAAUjE,GAClK,GAAIgE,EAEAzgC,EADew8B,GAAWiE,IACNv3B,WAAWlJ,GAAW,KAGlD,EAAK68B,YAAYJ,GAAQz8B,KAGb,OAAhBqgC,QAAwC,IAAhBA,GAAkCA,EAAYjqB,EAAOmD,GAChC,QAA5CvJ,EAAK,EAAKvQ,cAAcc,sBAAmC,IAAPyP,GAAyBA,EAAGwJ,UAAUnE,GAAc2iB,MAAM,KAE7GsD,EAAS,SAACllB,EAAOmD,GAEnB,MAAyE,EAAK0C,WAAtEmkB,EAAR,EAAQA,gBAAiBO,EAAzB,EAAyBA,kBAAmBC,EAA5C,EAA4CA,gBAAiBC,EAA7D,EAA6DA,OAE7D,GAAKT,GAAoB,EAAKR,eAA9B,CAEA,IAAQrvB,EAAWgJ,EAAXhJ,OAER,GAAIowB,GAA+C,OAA1B,EAAKb,iBAM1B,OALA,EAAKA,iBAAmBgB,GAAoBvwB,QAEd,OAA1B,EAAKuvB,mBACe,OAApBc,QAAgD,IAApBA,GAAsCA,EAAgB,EAAKd,oBAK/F,EAAKiB,WAAW,IAAKxnB,EAAKnC,MAAO7G,GACjC,EAAKwwB,WAAW,IAAKxnB,EAAKnC,MAAO7G,GAOjC,EAAK9Q,cAAca,SAKR,OAAXugC,QAA8B,IAAXA,GAA6BA,EAAOzqB,EAAOmD,KAE5DsiB,EAAe,SAACzlB,EAAOmD,GAAR,OAAiB,EAAKoW,KAAKvZ,EAAOmD,IACvD7V,KAAKs9B,WAAa,IAAIrG,GAAWuF,EAAa,CAC1ClE,eAAAA,EACAX,QAAAA,EACAC,OAAAA,EACAO,aAAAA,GACD,CAAEx9B,mBAAoBqF,KAAKjE,cAAcwhC,6B,kBAEhD,SAAK7qB,EAAOmD,GACR,IAAMsmB,EAAan8B,KAAKm8B,WAExB,GADAn8B,KAAKqkB,SACA8X,EAAL,CAEA,IAAQ1T,EAAa5S,EAAb4S,SACRzoB,KAAKqvB,eAAe5G,GACpB,IAAQ+U,EAAcx9B,KAAKuY,WAAnBilB,UACM,OAAdA,QAAoC,IAAdA,GAAgCA,EAAU9qB,EAAOmD,M,oBAE3E,WACI,IAAIvJ,EAAI2T,EACRjgB,KAAKm8B,YAAa,EACdn8B,KAAKjE,cAAcmT,aACnBlP,KAAKjE,cAAcmT,WAAW2tB,oBAAqB,GAE5B,QAA1BvwB,EAAKtM,KAAKs9B,kBAA+B,IAAPhxB,GAAyBA,EAAG2rB,MAC/Dj4B,KAAKs9B,gBAAa7gC,GACUuD,KAAKuY,WAAzBmkB,iBACgB18B,KAAKk8B,iBACzBl8B,KAAKk8B,iBACLl8B,KAAKk8B,eAAiB,MAEmB,QAA5Cjc,EAAKjgB,KAAKjE,cAAcc,sBAAmC,IAAPojB,GAAyBA,EAAGnK,UAAUnE,GAAc2iB,MAAM,K,wBAEnH,SAAWyE,EAAM0E,EAAQ5wB,GACrB,IAAQ1N,EAASa,KAAKuY,WAAdpZ,KAER,GAAK0N,GAAW6wB,GAAW3E,EAAM55B,EAAMa,KAAKo8B,kBAA5C,CAEA,IAAMuB,EAAY39B,KAAK88B,mBAAmB/D,GACtCpe,EAAO3a,KAAKm5B,YAAYJ,GAAQlsB,EAAOksB,GAEvC/4B,KAAKq8B,aAAer8B,KAAKq8B,YAAYtD,KACrCpe,ENlKZ,SAA0BjH,EAA1B,EAA+C6oB,GAAS,IAArB/3B,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IASpC,YARYhI,IAAR+H,GAAqBkP,EAAQlP,EAE7BkP,EAAQ6oB,EAAUjsB,GAAI9L,EAAKkP,EAAO6oB,EAAQ/3B,KAAOE,KAAKD,IAAIiP,EAAOlP,QAEpD/H,IAARgI,GAAqBiP,EAAQjP,IAElCiP,EAAQ6oB,EAAUjsB,GAAI7L,EAAKiP,EAAO6oB,EAAQ93B,KAAOC,KAAKF,IAAIkP,EAAOjP,IAE9DiP,EMyJQkqB,CAAiBjjB,EAAM3a,KAAKq8B,YAAYtD,GAAO/4B,KAAKu8B,QAAQxD,KAEvE4E,EAAU/6B,IAAI+X,M,gCAElB,WAAqB,WACjB,EAAyC3a,KAAKuY,WAAtCslB,EAAR,EAAQA,gBAAiB7D,EAAzB,EAAyBA,YACjBz2B,GAAWvD,KAAKjE,cAAcmT,YAAc,IAA5C3L,OACFu6B,EAAkB99B,KAAKq8B,YACzBwB,GAAmB7gC,EAAY6gC,GAC1B79B,KAAKq8B,cACNr8B,KAAKq8B,YAAcr8B,KAAK+9B,yBAKxB/9B,KAAKq8B,eADLwB,IAAmBt6B,INpJnC,SAAiCy5B,EAAjC,GAA0E,IAA5Bz1B,EAA4B,EAA5BA,IAAKG,EAAuB,EAAvBA,KAAMD,EAAiB,EAAjBA,OAAQD,EAAS,EAATA,MAC7D,MAAO,CACH5D,EAAG81B,GAA4BsD,EAAUp5B,EAAG8D,EAAMF,GAClD3D,EAAG61B,GAA4BsD,EAAUn5B,EAAG0D,EAAKE,IMkJtBu2B,CAAwBz6B,EAAOy5B,UAAWa,GAMrE79B,KAAKu8B,QN7Fb,WAA0D,IAA9BvC,EAA8B,uDAAhBF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHl2B,EAAGm2B,GAAmBC,EAAa,OAAQ,SAC3Cn2B,EAAGk2B,GAAmBC,EAAa,MAAO,WMoF3BiE,CAAmBjE,GAK9B8D,IAAoB99B,KAAKq8B,aACzB94B,GACAvD,KAAKq8B,cACJr8B,KAAKs8B,uBACNjC,IAAS,SAACtB,GACF,EAAK+D,mBAAmB/D,KACxB,EAAKsD,YAAYtD,GNtHrC,SAA+Bx1B,EAAQ84B,GACnC,IAAM6B,EAAsB,GAO5B,YANwBzhC,IAApB4/B,EAAY73B,MACZ05B,EAAoB15B,IAAM63B,EAAY73B,IAAMjB,EAAOiB,UAE/B/H,IAApB4/B,EAAY53B,MACZy5B,EAAoBz5B,IAAM43B,EAAY53B,IAAMlB,EAAOiB,KAEhD05B,EM8GkCC,CAAsB56B,EAAOy5B,UAAUjE,GAAO,EAAKsD,YAAYtD,U,mCAKxG,WACI,MAAmE/4B,KAAKuY,WAA/C8jB,EAAzB,EAAQwB,gBAA8BO,EAAtC,EAAsCA,yBACtC,IAAK/B,IAAgBr/B,EAAYq/B,GAC7B,OAAO,EACX,IAAMgC,EAAqBhC,EAAY//B,QAE/B4S,EAAelP,KAAKjE,cAApBmT,WAER,IAAKA,IAAeA,EAAW3L,OAC3B,OAAO,EACX,IAAM+6B,EDrNd,SAAwBtvB,EAASuvB,EAAoB5jC,GACjD,IAAM6jC,EAAc5C,GAAmB5sB,EAASrU,GACxC8jC,EAAWF,EAAXE,OAKR,OAJIA,IACAtD,GAAcqD,EAAY56B,EAAG66B,EAAO5xB,OAAOjJ,GAC3Cu3B,GAAcqD,EAAY36B,EAAG46B,EAAO5xB,OAAOhJ,IAExC26B,EC8MoBE,CAAeL,EAAoBnvB,EAAW+H,KAAMjX,KAAKjE,cAAcwhC,yBAC1FoB,EN/JZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACH16B,EAAG+1B,GAA4BqD,EAAUp5B,EAAG06B,EAAe16B,GAC3DC,EAAG81B,GAA4BqD,EAAUn5B,EAAGy6B,EAAez6B,IM4JjC+6B,CAAwB1vB,EAAW3L,OAAOy5B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJvNpC,YAA2C,IAARx6B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAClC,MAAO,CAAE0D,IAAK1D,EAAEW,IAAKgD,MAAO5D,EAAEa,IAAKgD,OAAQ5D,EAAEY,IAAKiD,KAAM9D,EAAEY,KIsNDs6B,CAAwBH,IACzE3+B,KAAKs8B,wBAA0BuC,EAC3BA,IACAF,EAAsBrE,GAAwBuE,IAGtD,OAAOF,I,4BAEX,SAAelW,GAAU,WACrB,EAAoGzoB,KAAKuY,WAAjGpZ,EAAR,EAAQA,KAAM4/B,EAAd,EAAcA,aAAc/E,EAA5B,EAA4BA,YAAagF,EAAzC,EAAyCA,eAAgBC,EAAzD,EAAyDA,iBAAkBC,EAA3E,EAA2EA,oBACrE7C,EAAcr8B,KAAKq8B,aAAe,GAClC8C,EAAqB9E,IAAS,SAACtB,GACjC,IAAIzsB,EACJ,GAAKoxB,GAAW3E,EAAM55B,EAAM,EAAKi9B,kBAAjC,CAGA,IAAI3qB,EAAoG,QAAtFnF,EAAqB,OAAhB+vB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYtD,UAA0B,IAAPzsB,EAAgBA,EAAK,GACjI2yB,IACAxtB,EAAa,CAAEjN,IAAK,EAAGC,IAAK,IAOhC,IAAMwqB,EAAkB+K,EAAc,IAAM,IACtC9K,EAAgB8K,EAAc,GAAK,IACnCvK,GAAU,gBACZprB,KAAM,UACNokB,SAAUsW,EAAetW,EAASsQ,GAAQ,EAC1C9J,gBAAAA,EACAC,cAAAA,EACA/D,aAAc,IACd1B,UAAW,EACX7I,UAAW,IACRoe,GACAvtB,GAKP,OAAO,EAAK2tB,wBAAwBrG,EAAMtJ,OAG9C,OAAO8B,QAAQ3Z,IAAIunB,GAAoBzN,KAAKwN,K,qCAEhD,SAAwBnG,EAAMtnB,GAE1B,OAAO4d,GAAe0J,EADJ/4B,KAAK88B,mBAAmB/D,GACH,EAAGtnB,K,2BAE9C,WAAgB,WACZ4oB,IAAS,SAACtB,GAAD,OAAU,EAAK+D,mBAAmB/D,GAAM9M,Y,gCAQrD,SAAmB8M,GACf,IAAIzsB,EAAI2T,EACFof,EAAU,QAAUtG,EAAKlpB,cACzByvB,EAAsBt/B,KAAKjE,cAAcwc,WAAW8mB,GAC1D,OAAOC,GAEDt/B,KAAKjE,cAAcu2B,SAASyG,EAA4G,QAArG9Y,EAAsD,QAAhD3T,EAAKtM,KAAKjE,cAAcwc,WAAW5b,eAA4B,IAAP2P,OAAgB,EAASA,EAAGysB,UAA0B,IAAP9Y,EAAgBA,EAAK,K,0BAE/K,SAAavM,GAAO,WAChB2mB,IAAS,SAACtB,GAGN,GAAK2E,GAAW3E,EAFC,EAAKxgB,WAAdpZ,KAEoB,EAAKi9B,kBAAjC,CAEA,IAAQltB,EAAe,EAAKnT,cAApBmT,WACFyuB,EAAY,EAAKb,mBAAmB/D,GAC1C,GAAI7pB,GAAcA,EAAW3L,OAAQ,CACjC,MAAqB2L,EAAW3L,OAAOy5B,UAAUjE,GAAzCv0B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACbk5B,EAAU/6B,IAAI8Q,EAAMqlB,GAAQzoB,GAAI9L,EAAKC,EAAK,Y,4CAStD,WAAiC,IACzB6H,EADyB,OAE7B,GAAKtM,KAAKjE,cAAcO,QAAxB,CAEA,MAAkC0D,KAAKuY,WAA/BpZ,EAAR,EAAQA,KAAM0+B,EAAd,EAAcA,gBACN3uB,EAAelP,KAAKjE,cAApBmT,WACR,GAAKlS,EAAY6gC,IAAqB3uB,GAAelP,KAAKq8B,YAA1D,CAMAr8B,KAAKyxB,gBAKL,IAAM8N,EAAc,CAAE37B,EAAG,EAAGC,EAAG,GAC/Bw2B,IAAS,SAACtB,GACN,IAAM4E,EAAY,EAAKb,mBAAmB/D,GAC1C,GAAI4E,EAAW,CACX,IAAMxR,EAASwR,EAAUl7B,MACzB88B,EAAYxG,GNvQ5B,SAAoB1tB,EAAQD,GACxB,IAAIwB,EAAS,GACP4yB,EAAe1G,GAAWztB,GAC1Bo0B,EAAe3G,GAAW1tB,GAOhC,OANIq0B,EAAeD,EACf5yB,EAAS+Y,GAASva,EAAO5G,IAAK4G,EAAO3G,IAAM+6B,EAAcn0B,EAAO7G,KAE3Dg7B,EAAeC,IACpB7yB,EAAS+Y,GAASta,EAAO7G,IAAK6G,EAAO5G,IAAMg7B,EAAcr0B,EAAO5G,MAE7DD,GAAM,EAAG,EAAGqI,GM6PaD,CAAW,CAAEnI,IAAK2nB,EAAQ1nB,IAAK0nB,GAAU,EAAKkQ,YAAYtD,QAMtF,IAAQ/uB,EAAsBhK,KAAKjE,cAAcwc,WAAzCvO,kBACRhK,KAAKjE,cAAcO,QAAQ2N,MAAM3F,UAAY0F,EACvCA,EAAkB,GAAI,IACtB,OACqB,QAA1BsC,EAAK4C,EAAW+H,YAAyB,IAAP3K,GAAyBA,EAAGozB,eAC/DxwB,EAAWywB,eACX3/B,KAAK48B,qBAKLvC,IAAS,SAACtB,GACN,GAAK2E,GAAW3E,EAAM55B,EAAM,MAA5B,CAKA,IAAMw+B,EAAY,EAAKb,mBAAmB/D,GAC1C,EAAqB,EAAKsD,YAAYtD,GAA9Bv0B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACbk5B,EAAU/6B,IAAI0N,GAAI9L,EAAKC,EAAK86B,EAAYxG,a,0BAGhD,WAAe,IACPzsB,EADO,OAEX,GAAKtM,KAAKjE,cAAcO,QAAxB,CAEA0/B,GAAoBp5B,IAAI5C,KAAKjE,cAAeiE,MAC5C,IAIM4/B,EAAsB7qB,GAJZ/U,KAAKjE,cAAcO,QAIkB,eAAe,SAACoW,GACjE,MAAsC,EAAK6F,WAAnCpZ,EAAR,EAAQA,KAAR,IAAcwM,aACdxM,SADA,WACwB,EAAKxB,MAAM+U,MAEjCmtB,EAAyB,WAEvB7iC,EADwB,EAAKub,WAAzBslB,mBAEJ,EAAKxB,YAAc,EAAK0B,0BAGxB7uB,EAAelP,KAAKjE,cAApBmT,WACF4wB,EAA4B5wB,EAAWoD,iBAAiB,UAAWutB,GACrE3wB,IAAeA,EAAW3L,SACC,QAA1B+I,EAAK4C,EAAW+H,YAAyB,IAAP3K,GAAyBA,EAAGozB,eAC/DxwB,EAAWywB,gBAEfE,IAKA,IAAME,EAAqB7tB,GAAYyC,OAAQ,UAAU,kBAAM,EAAKqrB,oCAK9DC,EAA2B/wB,EAAWoD,iBAAiB,aAAc,YAAiC,IAA9B+Q,EAA8B,EAA9BA,MAAO6c,EAAuB,EAAvBA,iBAC7E,EAAK/D,YAAc+D,IACnB7F,IAAS,SAACtB,GACN,IAAMnH,EAAc,EAAKkL,mBAAmB/D,GACvCnH,IAEL,EAAKuH,YAAYJ,IAAS1V,EAAM0V,GAAMK,UACtCxH,EAAYhvB,IAAIgvB,EAAYnvB,MAAQ4gB,EAAM0V,GAAMK,eAEpD,EAAKr9B,cAAca,aAG3B,OAAO,WACHmjC,IACAH,IACAE,IAC6B,OAA7BG,QAAkE,IAA7BA,GAA+CA,Q,sBAG5F,WACI,IAAMtkC,EAAQqE,KAAKjE,cAAcwc,WACjC,EAA0J5c,EAAlJwD,KAAAA,OAAR,WAA0JxD,EAApIshC,kBAAAA,OAAtB,WAA0JthC,EAAzG+gC,gBAAAA,OAAjD,WAA0J/gC,EAAhFkiC,gBAAAA,OAA1E,WAA0JliC,EAAvDq+B,YAAAA,OAAnG,MAAiHF,GAAjH,IAA0Jn+B,EAAzBojC,aAAAA,OAAjI,SACA,yBACOpjC,GADP,IAEIwD,KAAAA,EACA89B,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACA7D,YAAAA,EACA+E,aAAAA,Q,EAnZN9C,GAuZN,SAASyB,GAAWyC,EAAWhhC,EAAMi9B,GACjC,QAAkB,IAATj9B,GAAiBA,IAASghC,KACT,OAArB/D,GAA6BA,IAAqB+D,GAS3D,SAAS/C,GAAoBvwB,GAA4B,IAApBuzB,EAAoB,uDAAJ,GAC7CD,EAAY,KAOhB,OANIz7B,KAAKwX,IAAIrP,EAAOhJ,GAAKu8B,EACrBD,EAAY,IAEPz7B,KAAKwX,IAAIrP,EAAOjJ,GAAKw8B,IAC1BD,EAAY,KAETA,EE7bX,IAAMhhC,GAAO,CACTI,IAAKsZ,ICaT,YAA2F,IAAlEwnB,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,kBAAmBzkC,EAAkB,EAAlBA,cAC/D0kC,EAAeJ,GAASC,GAAcC,GAAYC,EAClDlD,GAAalhC,EAAAA,EAAAA,QAAO,MAClBzB,GAAuBmB,EAAAA,EAAAA,YAAWrB,GAAlCE,mBACFu8B,EAAW,CACboB,eAAgBkI,EAChB7I,QAAS2I,EACT1I,OAAQyI,EACRnI,MAAO,SAACxlB,EAAOmD,GACXynB,EAAWhhC,QAAU,KACrBikC,GAAYA,EAAS7tB,EAAOmD,MAGpCxa,EAAAA,EAAAA,YAAU,WACqB,OAAvBiiC,EAAWhhC,SACXghC,EAAWhhC,QAAQokC,eAAexJ,MAQ1CliB,GAAgBjZ,EAAe,cAAe0kC,GAL9C,SAAuB/tB,GACnB4qB,EAAWhhC,QAAU,IAAI26B,GAAWvkB,EAAOwkB,EAAU,CACjDv8B,mBAAAA,MAIRwb,IAAiB,kBAAMmnB,EAAWhhC,SAAWghC,EAAWhhC,QAAQ27B,YDpChE94B,KAAM0Z,IEGV,SAAiBld,GACb,IAAsBglC,EAAqChlC,EAAnDilC,aAAiC7kC,EAAkBJ,EAAlBI,cACnC6kC,EAAenhC,GAAY,kBAAM,IAAIw8B,GAA0BlgC,OAGrEV,EAAAA,EAAAA,YAAU,kBAAMslC,GAAqBA,EAAkB/J,UAAUgK,KAAe,CAACA,EAAcD,KAE/FtlC,EAAAA,EAAAA,YAAU,kBAAMulC,EAAaC,iBAAgB,CAACD,QCdlD,SAASz8B,GAAcxC,GACnB,MAAwB,kBAAVA,GAAsBA,EAAM6B,WAAW,UAWzD,IAAMs9B,GAAmB,uDACzB,SAASC,GAAiBzkC,GACtB,IAAM2hB,EAAQ6iB,GAAiBE,KAAK1kC,GACpC,IAAK2hB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAA5B,GACA,MAAO,CADP,WAIJ,SAASgjB,GAAiB3kC,EAAS0S,GAAoB,IAAXkyB,EAAW,uDAAH,EACvC,gEAA6E5kC,EAA7E,wDACT,MAA0BykC,GAAiBzkC,GAA3C,gBAAO6kC,EAAP,KAAcxoB,EAAd,KAEA,GAAKwoB,EAAL,CAGA,IAAM5vB,EAAWoD,OAAOysB,iBAAiBpyB,GAASqyB,iBAAiBF,GACnE,OAAI5vB,EACOA,EAASvG,OAEX7G,GAAcwU,GAEZsoB,GAAiBtoB,EAAU3J,EAASkyB,EAAQ,GAG5CvoB,GChCf,IAqBI2oB,GArBEC,GAAiB,IAAIl+B,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEm+B,GAAkB,SAAC1gC,GAAD,OAASygC,GAAe5+B,IAAI7B,IAI9C2gC,GAAsB,SAAC9/B,EAAOmf,GAGhCnf,EAAMiB,IAAIke,GAAI,GACdnf,EAAMiB,IAAIke,IAER4gB,GAAgB,SAACnkC,GAAD,OAAOA,IAAMyI,IAAUzI,IAAMoI,KAEnD,SAAW27B,GACPA,EAAoB,MAAY,QAChCA,EAAoB,OAAa,SACjCA,EAAoB,KAAW,OAC/BA,EAAoB,MAAY,QAChCA,EAAoB,IAAU,MAC9BA,EAAoB,OAAa,SANrC,CAOGA,KAAyBA,GAAuB,KACnD,IAAMK,GAAmB,SAACC,EAAQC,GAAT,OAAiBr8B,WAAWo8B,EAAOv8B,MAAM,MAAMw8B,KAClEC,GAAyB,SAACC,EAAMC,GAAP,OAAgB,SAACC,EAAD,GAA0B,IAAhB39B,EAAgB,EAAhBA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAM49B,EAAW59B,EAAU2Z,MAAM,sBACjC,GAAIikB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASt9B,EAAU2Z,MAAM,oBAC/B,OAAI2jB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,IAIb53B,GAAgB,IAAI9G,IAAI,CAAC,IAAK,IAAK,MACnC8+B,GAAgCh/B,EAAmBwe,QAAO,SAAC7gB,GAAD,OAAUqJ,GAAcxH,IAAI7B,MAC5F,SAASshC,GAAgCrmC,GACrC,IAAMsmC,EAAoB,GAW1B,OAVAF,GAA8B7wB,SAAQ,SAACxQ,GACnC,IAAMa,EAAQ5F,EAAcu2B,SAASxxB,QACvBrE,IAAVkF,IACA0gC,EAAkB33B,KAAK,CAAC5J,EAAKa,EAAMc,QACnCd,EAAMiB,IAAI9B,EAAI0C,WAAW,SAAW,EAAI,OAI5C6+B,EAAkB/8B,QAClBvJ,EAAca,SACXylC,EAEX,IAAMC,GAAmB,CAErBp7B,MAAO,kBAAGtD,EAAH,EAAGA,EAAH,IAAUmE,YAAAA,OAAV,MAAwB,IAAxB,MAA6BF,aAAAA,OAA7B,MAA4C,IAA5C,SAAsDjE,EAAEa,IAAMb,EAAEY,IAAMgB,WAAWuC,GAAevC,WAAWqC,IAClHT,OAAQ,kBAAGvD,EAAH,EAAGA,EAAH,IAAU+D,WAAAA,OAAV,MAAuB,IAAvB,MAA4BE,cAAAA,OAA5B,MAA4C,IAA5C,SAAsDjE,EAAEY,IAAMZ,EAAEW,IAAMgB,WAAWoC,GAAcpC,WAAWsC,IAClHP,IAAK,SAAC06B,EAAD,OAAU16B,EAAV,EAAUA,IAAV,OAAoB/B,WAAW+B,IACpCG,KAAM,SAACu6B,EAAD,OAAUv6B,EAAV,EAAUA,KAAV,OAAqBlC,WAAWkC,IACtCD,OAAQ,kBAAG5D,EAAH,EAAGA,EAAO0D,EAAV,EAAUA,IAAV,OAAoB/B,WAAW+B,IAAQ1D,EAAEY,IAAMZ,EAAEW,MACzDgD,MAAO,kBAAG5D,EAAH,EAAGA,EAAO8D,EAAV,EAAUA,KAAV,OAAqBlC,WAAWkC,IAAS9D,EAAEa,IAAMb,EAAEY,MAE1DZ,EAAGk+B,GAAuB,EAAG,IAC7Bj+B,EAAGi+B,GAAuB,EAAG,KAE3BS,GAA2B,SAACn3B,EAAQrP,EAAeymC,GACrD,IAAMC,EAAa1mC,EAAc6/B,qBAC3B5sB,EAAUjT,EAAcO,QACxBomC,EAAuBtB,iBAAiBpyB,GACtC2zB,EAAYD,EAAZC,QACF/1B,EAAS,GAGC,SAAZ+1B,GACA5mC,EAAc6mC,eAAe,UAAWx3B,EAAOu3B,SAAW,SAK9DH,EAAYlxB,SAAQ,SAACxQ,GACjB8L,EAAO9L,GAAOwhC,GAAiBxhC,GAAK2hC,EAAYC,MAGpD3mC,EAAca,SACd,IAAMimC,EAAa9mC,EAAc6/B,qBAQjC,OAPA4G,EAAYlxB,SAAQ,SAACxQ,GAGjB,IAAMa,EAAQ5F,EAAcu2B,SAASxxB,GACrC2gC,GAAoB9/B,EAAOiL,EAAO9L,IAClCsK,EAAOtK,GAAOwhC,GAAiBxhC,GAAK+hC,EAAYH,MAE7Ct3B,GAoHX,SAAS03B,GAAe/mC,EAAeqP,EAAQwB,EAAQ4E,GACnD,OAjNqB,SAACpG,GACtB,OAAOlO,OAAO8Q,KAAK5C,GAAQrN,KAAKyjC,IAgNzBuB,CAAiB33B,GAnHa,SAACrP,EAAeqP,GAA4C,IAApCwB,EAAoC,uDAA3B,GAAI4E,EAAuB,uDAAP,GAC1FpG,GAAS,UAAKA,GACdoG,GAAgB,UAAKA,GACrB,IAAMwxB,EAAuB9lC,OAAO8Q,KAAK5C,GAAQuW,OAAO6f,IAGpDyB,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqB1xB,SAAQ,SAACxQ,GAC1B,IAAMa,EAAQ5F,EAAcu2B,SAASxxB,GACrC,GAAK/E,EAAcs2B,SAASvxB,GAA5B,CAEA,IAGIsiC,EAHA1d,EAAO9Y,EAAO9L,GACduiC,EAAWtR,GAAuBrM,GAChC5E,EAAK1V,EAAOtK,GAMlB,GAAIoP,GAAkB4Q,GAAK,CACvB,IAAMwiB,EAAexiB,EAAGxb,OAClBi+B,EAAsB,OAAVziB,EAAG,GAAc,EAAI,EACvC4E,EAAO5E,EAAGyiB,GACVF,EAAWtR,GAAuBrM,GAClC,IAAK,IAAI5K,EAAIyoB,EAAWzoB,EAAIwoB,EAAcxoB,IACjCsoB,EAMSrR,GAAuBjR,EAAGhG,KALpCsoB,EAASrR,GAAuBjR,EAAGhG,OACduoB,GAChB3B,GAAc2B,IAAa3B,GAAc0B,QAQtDA,EAASrR,GAAuBjR,GAEpC,GAAIuiB,IAAaD,EAGb,GAAI1B,GAAc2B,IAAa3B,GAAc0B,GAAS,CAClD,IAAM9mC,EAAUqF,EAAMc,MACC,kBAAZnG,GACPqF,EAAMiB,IAAI4C,WAAWlJ,IAEP,kBAAPwkB,EACP1V,EAAOtK,GAAO0E,WAAWsb,GAEpBtjB,MAAMC,QAAQqjB,IAAOsiB,IAAWz9B,KACrCyF,EAAOtK,GAAOggB,EAAGrB,IAAIja,kBAGN,OAAb69B,QAAkC,IAAbA,OAAsB,EAASA,EAAS/+B,aACvD,OAAX8+B,QAA8B,IAAXA,OAAoB,EAASA,EAAO9+B,aAC9C,IAATohB,GAAqB,IAAP5E,GAGF,IAAT4E,EACA/jB,EAAMiB,IAAIwgC,EAAO9+B,UAAUohB,IAG3Bta,EAAOtK,GAAOuiC,EAAS/+B,UAAUwc,IAMhCoiB,IACDD,EACIb,GAAgCrmC,GACpCmnC,GAAsC,GAE1CC,EAAqBz4B,KAAK5J,GAC1B0Q,EAAc1Q,QACarE,IAAvB+U,EAAc1Q,GACR0Q,EAAc1Q,GACdsK,EAAOtK,GACjB2gC,GAAoB9/B,EAAOmf,QAInCqiB,EAAqB79B,OAAQ,CAC7B,IAAMk+B,EAAUL,EAAqBngC,QAAQ,WAAa,EACpD2R,OAAO8uB,YACP,KACAC,EAAkBnB,GAAyBn3B,EAAQrP,EAAeonC,GAaxE,OAXIF,EAAuB39B,QACvB29B,EAAuB3xB,SAAQ,YAAkB,oBAAhBxQ,EAAgB,KAAXa,EAAW,KAC7C5F,EAAcu2B,SAASxxB,GAAK8B,IAAIjB,MAIxC5F,EAAca,SAEV3B,GAAyB,OAAZuoC,GACb7uB,OAAOgvB,SAAS,CAAEp8B,IAAKi8B,IAEpB,CAAEp4B,OAAQs4B,EAAiBlyB,cAAAA,GAGlC,MAAO,CAAEpG,OAAAA,EAAQoG,cAAAA,GAYfoyB,CAAiC7nC,EAAeqP,EAAQwB,EAAQ4E,GAChE,CAAEpG,OAAAA,EAAQoG,cAAAA,GC9NpB,IAAMqyB,GAAkB,SAAC9nC,EAAeqP,EAAQwB,EAAQ4E,GACpD,IAAMD,EFuCV,SAA6BxV,EAA7B,EAA2DyV,GAAe,IAAzBpG,EAAyB,oBAChE4D,EAAUjT,EAAcO,QAC9B,KAAM0S,aAAmB80B,SACrB,MAAO,CAAE14B,OAAAA,EAAQoG,cAAAA,GAiBrB,IAAK,IAAM1Q,KAdP0Q,IACAA,GAAgB,UAAKA,IAGzBzV,EAAciV,OAAOM,SAAQ,SAAC3P,GAC1B,IAAMrF,EAAUqF,EAAMc,MACtB,GAAK0B,GAAc7H,GAAnB,CAEA,IAAMiV,EAAW0vB,GAAiB3kC,EAAS0S,GACvCuC,GACA5P,EAAMiB,IAAI2O,OAIAnG,EAAQ,CACtB,IAAM9O,EAAU8O,EAAOtK,GACvB,GAAKqD,GAAc7H,GAAnB,CAEA,IAAMiV,EAAW0vB,GAAiB3kC,EAAS0S,GACtCuC,IAGLnG,EAAOtK,GAAOyQ,EAIVC,QAAwC/U,IAAvB+U,EAAc1Q,KAC/B0Q,EAAc1Q,GAAOxE,KAG7B,MAAO,CAAE8O,OAAAA,EAAQoG,cAAAA,GE3EAuyB,CAAoBhoC,EAAeqP,EAAQoG,GAG5D,OAAOsxB,GAAe/mC,EAFtBqP,EAASmG,EAASnG,OAE2BwB,EAD7C4E,EAAgBD,EAASC,gBCTvBwyB,GAAuB,CAAE1nC,QAAS,MAClC2nC,GAA2B,CAAE3nC,SAAS,G,sBCkBtC4nC,GAAehnC,OAAO8Q,KAAKjP,GAC3BolC,GAAcD,GAAa5+B,OAC3B8+B,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,2BAMEC,GAAAA,WACF,cAAgF,WAAlExoC,EAAkE,EAAlEA,OAAQF,EAA0D,EAA1DA,MAAOO,EAAmD,EAAnDA,oBAAqBR,EAA8B,EAA9BA,YAAgBqO,EAAc,uDAAJ,IAAI,eAK5E/J,KAAK1D,QAAU,KAIf0D,KAAKE,SAAW,IAAImD,IAIpBrD,KAAK/B,eAAgB,EACrB+B,KAAKnC,uBAAwB,EAQ7BmC,KAAK2zB,mBAAqB,KAM1B3zB,KAAKgR,OAAS,IAAIxO,IAKlBxC,KAAKsa,WAAY,EAKjBta,KAAKskC,mBAAqB,IAAI9hC,IAM9BxC,KAAKukC,iBAAmB,GAIxBvkC,KAAKwkC,OAAS,GAMdxkC,KAAKykC,uBAAyB,GAC9BzkC,KAAK0kC,aAAe,kBAAM,EAAK3nC,OAAO,SAAU,EAAK+M,eACrD9J,KAAKpD,OAAS,WACL,EAAKN,UAEV,EAAKqoC,eACL,EAAKC,eAAe,EAAKtoC,QAAS,EAAKiT,YAAa,EAAK5T,MAAMsO,MAAO,EAAKiF,cAE/ElP,KAAK6kC,eAAiB,kBAAMlgB,GAAAA,OAAY,EAAK/nB,QAAQ,GAAO,IAC5D,IAAQkN,EAA8BpO,EAA9BoO,aAAcyF,EAAgB7T,EAAhB6T,YACtBvP,KAAK8J,aAAeA,EACpB9J,KAAK8kC,YAAL,UAAuBh7B,GACvB9J,KAAK+kC,cAAgBppC,EAAMgB,SAAN,UAAqBmN,GAAiB,GAC3D9J,KAAKuP,YAAcA,EACnBvP,KAAKnE,OAASA,EACdmE,KAAKrE,MAAQA,EACbqE,KAAKkhC,MAAQrlC,EAASA,EAAOqlC,MAAQ,EAAI,EACzClhC,KAAK9D,oBAAsBA,EAC3B8D,KAAK+J,QAAUA,EACf/J,KAAKnC,sBAAwBA,EAAsBlC,GACnDqE,KAAK/B,cAAgBA,EAActC,GAC/BqE,KAAK/B,gBACL+B,KAAKizB,gBAAkB,IAAI5vB,KAE/BrD,KAAK41B,uBAAyB13B,QAAQrC,GAAUA,EAAOS,SAWvD,MAA+C0D,KAAK0P,4BAA4B/T,GAAxE23B,EAAR,EAAQA,WAAe0R,GAAvB,cACA,IAAK,IAAMlkC,KAAOkkC,EAAqB,CACnC,IAAMrjC,EAAQqjC,EAAoBlkC,QACRrE,IAAtBqN,EAAahJ,IAAsB2C,EAAc9B,KACjDA,EAAMiB,IAAIkH,EAAahJ,IAAM,GACzB6xB,GAAwBW,IACxBA,EAAWlP,IAAItjB,K,0DAY/B,SAA4BmkC,GACxB,MAAO,K,mBAEX,SAAMpjC,GAAU,IACRyK,EADQ,OAEZtM,KAAK1D,QAAUuF,EACX7B,KAAKkP,YACLlP,KAAKkP,WAAWpN,MAAMD,GAEtB7B,KAAKnE,QAAUmE,KAAK/B,gBAAkB+B,KAAKnC,wBAC3CmC,KAAKklC,sBAA+C,QAAtB54B,EAAKtM,KAAKnE,cAA2B,IAAPyQ,OAAgB,EAASA,EAAG64B,gBAAgBnlC,OAE5GA,KAAKgR,OAAOM,SAAQ,SAAC3P,EAAOb,GAAR,OAAgB,EAAKskC,kBAAkBtkC,EAAKa,MAC3DsiC,GAAyB3nC,SC1JtC,WAEI,GADA2nC,GAAyB3nC,SAAU,EAC9BrB,EAEL,GAAI0Z,OAAO0wB,WAAY,CACnB,IAAMC,EAAmB3wB,OAAO0wB,WAAW,4BACrCE,EAA8B,kBAAOvB,GAAqB1nC,QAAUgpC,EAAiBE,SAC3FF,EAAiBG,YAAYF,GAC7BA,SAGAvB,GAAqB1nC,SAAU,EDgJ3BopC,GAEJ1lC,KAAK2zB,mBAC4B,UAA7B3zB,KAAK9D,sBAE8B,WAA7B8D,KAAK9D,qBAED8nC,GAAqB1nC,SAC/B0D,KAAKnE,QACLmE,KAAKnE,OAAOqE,SAASkkB,IAAIpkB,MAC7BA,KAAKC,SAASD,KAAKrE,S,qBAEvB,WACI,IAAI2Q,EAAI2T,EAAIC,EAOZ,IAAK,IAAMpf,KANgB,QAA1BwL,EAAKtM,KAAKkP,kBAA+B,IAAP5C,GAAyBA,EAAGvK,UAC/DgjB,GAAWgH,OAAO/rB,KAAK0kC,cACvB3f,GAAWnoB,OAAOoD,KAAKpD,QACvBoD,KAAKskC,mBAAmBhzB,SAAQ,SAACsiB,GAAD,OAAYA,OACN,QAArC3T,EAAKjgB,KAAKklC,6BAA0C,IAAPjlB,GAAyBA,EAAG5iB,KAAK2C,MACxD,QAAtBkgB,EAAKlgB,KAAKnE,cAA2B,IAAPqkB,GAAyBA,EAAGhgB,SAASuX,OAAOzX,MACzDA,KAAKwkC,OACnBxkC,KAAKwkC,OAAO1jC,GAAKuwB,QAErBrxB,KAAK1D,QAAU,O,+BAEnB,SAAkBwE,EAAKa,GAAO,WACpBgkC,EAAmBviC,EAAeT,IAAI7B,GACtC8kC,EAAiBjkC,EAAMkkC,UAAS,SAACC,GACnC,EAAKh8B,aAAahJ,GAAOglC,EACzB,EAAKnqC,MAAMoxB,UACPpI,GAAAA,OAAY,EAAK+f,cAAc,GAAO,GACtCiB,GAAoB,EAAKz2B,aACzB,EAAKA,WAAW62B,kBAAmB,MAGrCC,EAAwBrkC,EAAMskC,gBAAgBjmC,KAAK6kC,gBACzD7kC,KAAKskC,mBAAmB1hC,IAAI9B,GAAK,WAC7B8kC,IACAI,S,8BAGR,SAAiBE,GAIb,OAAKlmC,KAAK1D,SACL0D,KAAKmmC,0BACNnmC,KAAKqE,OAAS6hC,EAAM7hC,KAEjBrE,KAAKmmC,yBAAyBnmC,KAAK1D,QAAS4pC,EAAM5pC,SAD9C,I,0BAGf,SAAa8pC,EAAeC,EAAU5lC,EAAmBa,EAAcglC,EAA2B9kC,GAA0B,WAClHX,EAAW,GAQjB,IAAK,IAAIia,EAAI,EAAGA,EAAIqpB,GAAarpB,IAAK,CAClC,IAAM9c,EAAOkmC,GAAappB,GAC1B,EAAiC/b,EAAmBf,GAA5Cc,EAAR,EAAQA,UAAWrD,EAAnB,EAAmBA,UAMfqD,EAAUsnC,IAAkB3qC,GAC5BoF,EAAS6J,MAAKiE,EAAAA,EAAAA,eAAclT,GAAD,QAAC,QACxBqF,IAAK9C,GACFooC,GAFoB,IAGvBrqC,cAAeiE,SAI3B,IAAKA,KAAKkP,YAAco3B,EAA2B,CAC/CtmC,KAAKkP,WAAa,IAAIo3B,EAA0BhlC,EAActB,KAAK8J,aAAc9J,KAAKnE,QAAUmE,KAAKnE,OAAOqT,YAC5G,IAAQ9N,EAA0DglC,EAA1DhlC,SAAUmC,EAAgD6iC,EAAhD7iC,OAAQpE,EAAwCinC,EAAxCjnC,KAAM0+B,EAAkCuI,EAAlCvI,gBAAiB0I,EAAiBH,EAAjBG,aACjDvmC,KAAKkP,WAAWs3B,WAAW,CACvBplC,SAAAA,EACAmC,OAAAA,EACAkjC,oBAAqBvoC,QAAQiB,IACxB0+B,GAAmB7gC,EAAY6gC,GACpC9hC,cAAeiE,KACf6kC,eAAgB,kBAAM,EAAKA,kBAQ3B6B,cAAiC,kBAAXnjC,EAAsBA,EAAS,OACrDojC,uBAAwBnlC,EACxB+kC,aAAAA,IAGR,OAAO1lC,I,0BAEX,WACIb,KAAK4mC,MAAM5mC,KAAKuP,YAAavP,KAAK8J,aAAc9J,KAAK+J,QAAS/J,KAAKrE,S,gCAOvE,WACI,OAAOqE,KAAK1D,QACN0D,KAAK6mC,2BAA2B7mC,KAAK1D,QAAS0D,KAAKrE,ORjQxC,CACrBiI,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,M,4BQqQrC,SAAe3D,GACX,OAAOd,KAAK8J,aAAahJ,K,4BAE7B,SAAeA,EAAKa,GAChB3B,KAAK8J,aAAahJ,GAAOa,I,kCAS7B,SAAqByJ,GAA0B,IAAlB07B,IAAkB,yDAC3C,OAAO9mC,KAAK+mC,iCAAiC37B,EAAQpL,KAAKrE,MAAOmrC,K,sBAMrE,SAASnrC,IACDA,EAAMqO,mBAAqBhK,KAAKrE,MAAMqO,oBACtChK,KAAK6kC,iBAET7kC,KAAKrE,MAAQA,EAIb,IAAK,IAAImf,EAAI,EAAGA,EAAIspB,GAAkB9+B,OAAQwV,IAAK,CAC/C,IAAMha,EAAMsjC,GAAkBtpB,GAC1B9a,KAAKykC,uBAAuB3jC,KAC5Bd,KAAKykC,uBAAuB3jC,YACrBd,KAAKykC,uBAAuB3jC,IAEvC,IAAMiT,EAAWpY,EAAM,KAAOmF,GAC1BiT,IACA/T,KAAKykC,uBAAuB3jC,GAAOd,KAAKgnC,GAAGlmC,EAAKiT,IAGxD/T,KAAKukC,iBEjTb,SAAqCv1B,EAAS2L,EAAMC,GAChD,IAAQ0Y,EAAe3Y,EAAf2Y,WACR,IAAK,IAAMxyB,KAAO6Z,EAAM,CACpB,IAAMssB,EAAYtsB,EAAK7Z,GACjBomC,EAAYtsB,EAAK9Z,GACvB,GAAI2C,EAAcwjC,GAKdj4B,EAAQujB,SAASzxB,EAAKmmC,GAClBtU,GAAwBW,IACxBA,EAAWlP,IAAItjB,QAUlB,GAAI2C,EAAcyjC,GAKnBl4B,EAAQujB,SAASzxB,EAAK8wB,GAAYqV,IAC9BtU,GAAwBW,IACxBA,EAAWM,OAAO9yB,QAGrB,GAAIomC,IAAcD,EAMnB,GAAIj4B,EAAQqjB,SAASvxB,GAAM,CACvB,IAAMqmC,EAAgBn4B,EAAQsjB,SAASxxB,IAEtCqmC,EAAchW,aAAegW,EAAcvkC,IAAIqkC,OAE/C,CACD,IAAMnB,EAAc92B,EAAQo4B,eAAetmC,GAC3CkO,EAAQujB,SAASzxB,EAAK8wB,QAA4Bn1B,IAAhBqpC,EAA4BA,EAAcmB,KAKxF,IAAK,IAAMnmC,KAAO8Z,OACIne,IAAdke,EAAK7Z,IACLkO,EAAQq4B,YAAYvmC,GAE5B,OAAO6Z,EF2PqB2sB,CAA4BtnC,KAAMA,KAAK0P,4BAA4B/T,GAAQqE,KAAKukC,oB,sBAE5G,WACI,OAAOvkC,KAAKrE,Q,wBAKhB,SAAWqC,GACP,IAAIsO,EACJ,OAAsC,QAA9BA,EAAKtM,KAAKrE,MAAMwC,gBAA6B,IAAPmO,OAAgB,EAASA,EAAGtO,K,kCAK9E,WACI,OAAOgC,KAAKrE,MAAM8V,a,mCAEtB,WACI,OAAOzR,KAAKrE,MAAMhB,qB,mCAEtB,WACI,IAAI2R,EACJ,OAAOtM,KAAK/B,cAAgB+B,KAA8B,QAAtBsM,EAAKtM,KAAKnE,cAA2B,IAAPyQ,OAAgB,EAASA,EAAGi7B,0B,+BAElG,WAAyC,IACjCj7B,EAAI2T,EADMunB,EAAuB,wDAErC,GAAIA,EACA,OAA8B,QAAtBl7B,EAAKtM,KAAKnE,cAA2B,IAAPyQ,OAAgB,EAASA,EAAG6oB,oBACtE,IAAKn1B,KAAKnC,sBAAuB,CAC7B,IAAMQ,GAAkC,QAAtB4hB,EAAKjgB,KAAKnE,cAA2B,IAAPokB,OAAgB,EAASA,EAAGkV,sBAAwB,GAIpG,YAH2B14B,IAAvBuD,KAAKrE,MAAMgB,UACX0B,EAAQ1B,QAAUqD,KAAKrE,MAAMgB,SAE1B0B,EAGX,IADA,IAAMA,EAAU,GACPyc,EAAI,EAAGA,EAAI2sB,GAAiB3sB,IAAK,CACtC,IAAM9c,EAAOJ,GAAakd,GACpBpc,EAAOsB,KAAKrE,MAAMqC,IACpBV,EAAeoB,KAAkB,IAATA,KACxBL,EAAQL,GAAQU,GAGxB,OAAOL,I,6BAKX,SAAgB4X,GACZ,IAAI3J,EACEo7B,EAAqB1nC,KAAKunC,wBAChC,GAAIG,EAEA,OAD8C,QAA7Cp7B,EAAKo7B,EAAmBzU,uBAAoC,IAAP3mB,GAAyBA,EAAG8X,IAAInO,GAC/E,kBAAMyxB,EAAmBzU,gBAAgBxb,OAAOxB,M,sBAM/D,SAASnV,EAAKa,GAEN3B,KAAKqyB,SAASvxB,IACdd,KAAKqnC,YAAYvmC,GACrBd,KAAKgR,OAAOpO,IAAI9B,EAAKa,GACrB3B,KAAK8J,aAAahJ,GAAOa,EAAMc,MAC/BzC,KAAKolC,kBAAkBtkC,EAAKa,K,yBAKhC,SAAYb,GACR,IAAIwL,EACJtM,KAAKgR,OAAOyG,OAAO3W,GACyB,QAA3CwL,EAAKtM,KAAKskC,mBAAmB7hC,IAAI3B,UAAyB,IAAPwL,GAAyBA,IAC7EtM,KAAKskC,mBAAmB7sB,OAAO3W,UACxBd,KAAK8J,aAAahJ,GACzBd,KAAK2nC,2BAA2B7mC,EAAKd,KAAKuP,e,sBAK9C,SAASzO,GACL,OAAOd,KAAKgR,OAAOrO,IAAI7B,K,sBAM3B,SAASA,EAAK2gB,GACV,GAAIzhB,KAAKrE,MAAMqV,QAAUhR,KAAKrE,MAAMqV,OAAOlQ,GACvC,OAAOd,KAAKrE,MAAMqV,OAAOlQ,GAE7B,IAAIa,EAAQ3B,KAAKgR,OAAOvO,IAAI3B,GAK5B,YAJcrE,IAAVkF,QAAwClF,IAAjBglB,IACvB9f,EAAQiwB,GAAYnQ,GACpBzhB,KAAKuyB,SAASzxB,EAAKa,IAEhBA,I,uBAOX,SAAUb,GACN,YAAkCrE,IAA3BuD,KAAK8J,aAAahJ,IAAuBd,KAAK1D,QAE/C0D,KAAK4nC,sBAAsB5nC,KAAK1D,QAASwE,EAAKd,KAAK+J,SADnD/J,KAAK8J,aAAahJ,K,2BAO5B,SAAcA,EAAKa,GACf3B,KAAK8kC,WAAWhkC,GAAOa,I,2BAM3B,SAAcb,GACV,IAAIwL,EACI3P,EAAYqD,KAAKrE,MAAjBgB,QACFkrC,EAAsC,kBAAZlrC,GAA2C,kBAAZA,EACD,QAAvD2P,EAAKwD,GAAwB9P,KAAKrE,MAAOgB,UAA6B,IAAP2P,OAAgB,EAASA,EAAGxL,QAC5FrE,EAIN,GAAIE,QAAgCF,IAArBorC,EACX,OAAOA,EAMX,IAAMz8B,EAASpL,KAAK8nC,uBAAuB9nC,KAAKrE,MAAOmF,GACvD,YAAerE,IAAX2O,GAAyB3H,EAAc2H,QAMR3O,IAA5BuD,KAAK+kC,cAAcjkC,SACDrE,IAArBorC,OACEprC,EACAuD,KAAK8kC,WAAWhkC,GARXsK,I,gBAUf,SAAG+G,EAAWyD,GAIV,OAHK5V,KAAKwkC,OAAOryB,KACbnS,KAAKwkC,OAAOryB,GAAa,IAAIie,IAE1BpwB,KAAKwkC,OAAOryB,GAAWiS,IAAIxO,K,oBAEtC,SAAOzD,GAAoB,UACnB7F,EADmB,mBAANy7B,EAAM,iCAANA,EAAM,kBAEW,QAAjCz7B,EAAKtM,KAAKwkC,OAAOryB,UAA+B,IAAP7F,IAAyB,EAAAA,GAAGvP,OAAH,QAAagrC,O,EA/alF1D,GAkbAzmC,GAAe,CAAC,WAAJ,gBAAkBw2B,KAC9BqT,GAAkB7pC,GAAa0H,O,kCGnd/B0iC,GAAAA,SAAAA,I,+IACF,SAAyB/jC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEgkC,wBAAwB/jC,GAAS,GAAK,I,oCAEnD,SAAuBvI,EAAOmF,GAC1B,IAAIwL,EACJ,OAA8B,QAAtBA,EAAK3Q,EAAMsO,aAA0B,IAAPqC,OAAgB,EAASA,EAAGxL,K,wCAEtE,SAA2BA,EAA3B,GAAiD,IAAfoJ,EAAe,EAAfA,KAAMD,EAAS,EAATA,aAC7BC,EAAKpJ,UACLmJ,EAAMnJ,K,8CAEjB,aAAgGonC,GAAW,IAAxEz2B,EAAwE,EAAxEA,WAAYD,EAA4D,EAA5DA,cAAkBpG,GAA0C,cAA9BI,EAA8B,EAA9BA,gBACrEoB,E1BmFZ,SAAmBxB,EAAQqG,EAAY1V,GACnC,IAAIuQ,EACEM,EAAS,GACf,IAAK,IAAM9L,KAAOsK,EAAQ,CACtB,IAAM+8B,EAAmBzV,GAAwB5xB,EAAK2Q,GACtD7E,EAAO9L,QACkBrE,IAArB0rC,EACMA,EACuC,QAAtC77B,EAAKvQ,EAAcu2B,SAASxxB,UAAyB,IAAPwL,OAAgB,EAASA,EAAG7J,MAEzF,OAAOmK,E0B7FUw7B,CAAUh9B,EAAQqG,GAAc,GAAIzR,MAYjD,GARIwL,IACIgG,IACAA,EAAgBhG,EAAgBgG,IAChCpG,IACAA,EAASI,EAAgBJ,IACzBwB,IACAA,EAASpB,EAAgBoB,KAE7Bs7B,EAAW,E1BkBvB,SAAiCnsC,EAAeqP,EAAQwB,GACpD,IAAIN,EAAI2T,EACFooB,EAAenrC,OAAO8Q,KAAK5C,GAAQuW,QAAO,SAAC7gB,GAAD,OAAU/E,EAAcs2B,SAASvxB,MAC3EwnC,EAAeD,EAAa/iC,OAClC,GAAKgjC,EAEL,IAAK,IAAIxtB,EAAI,EAAGA,EAAIwtB,EAAcxtB,IAAK,CACnC,IAAMha,EAAMunC,EAAavtB,GACnBytB,EAAcn9B,EAAOtK,GACvBa,EAAQ,KAKRnE,MAAMC,QAAQ8qC,KACd5mC,EAAQ4mC,EAAY,IAOV,OAAV5mC,IACAA,EAAoG,QAA3Fse,EAA4B,QAAtB3T,EAAKM,EAAO9L,UAAyB,IAAPwL,EAAgBA,EAAKvQ,EAAcysC,UAAU1nC,UAAyB,IAAPmf,EAAgBA,EAAK7U,EAAOtK,SAM9HrE,IAAVkF,GAAiC,OAAVA,IAEN,kBAAVA,IVhFc,iBAAiBsB,KUiFnBtB,IAAUouB,GAAkBpuB,IAE/CA,EAAQ6D,WAAW7D,IAEbswB,GAActwB,IAAUqe,GAAQ/c,KAAKslC,KAC3C5mC,EAAQ0e,GAAkBvf,EAAKynC,IAEnCxsC,EAAcw2B,SAASzxB,EAAK8wB,GAAYjwB,SACpBlF,IAAhBmQ,EAAO9L,KACP8L,EAAO9L,GAAOa,GAEJ,OAAVA,GACA5F,EAAc0sC,cAAc3nC,EAAKa,K0B7DjC+mC,CAAwB1oC,KAAMoL,EAAQwB,GACtC,IAAM0T,EAASujB,GAAgB7jC,KAAMoL,EAAQwB,EAAQ4E,GACrDA,EAAgB8O,EAAO9O,cACvBpG,EAASkV,EAAOlV,OAEpB,eACIqG,WAAAA,EACAD,cAAAA,GACGpG,O,EAvCT48B,CAAyB3D,I,ICQzBsE,GAAAA,SAAAA,I,4IACF,SAAsB9mC,EAAUf,GAC5B,GAAIsC,EAAeT,IAAI7B,GAAM,CACzB,IAAM8nC,EAAcrmB,GAAoBzhB,GACxC,OAAO8nC,GAAcA,EAAYziC,SAAe,EAGhD,IAVc6I,EAUR65B,GAVQ75B,EAUyBnN,EATxC8S,OAAOysB,iBAAiBpyB,IAUjBrN,GAASwC,EAAcrD,GACvB+nC,EAAcxH,iBAAiBvgC,GAC/B+nC,EAAc/nC,KAAS,EAC7B,MAAwB,kBAAVa,EAAqBA,EAAMqJ,OAASrJ,I,wCAG1D,SAA2BE,EAA3B,GACI,OAAO+5B,GAAmB/5B,EAD+B,EAAtBlH,sB,mBAGvC,SAAM4U,EAAazF,EAAcC,EAASpO,GACtCiO,GAAgB2F,EAAazF,EAAcC,EAASpO,EAAMqO,qB,yCAE9D,SAA4BrO,GACxB,OAAO+T,GAA4B/T,K,4BAEvC,SAAekG,EAAU0N,EAAaN,EAAWC,GAC7CH,GAAWlN,EAAU0N,EAAaN,EAAWC,O,EAxB/Cy5B,CAA0BX,I,sBCD1Bc,GAAAA,SAAAA,I,6BACF,aAAc,6BACV,eAASC,YACJ77B,UAAW,EAFN,E,qDAId,SAAuBvR,EAAOmF,GAC1B,OAAOnF,EAAMmF,K,mCAEjB,SAAsBe,EAAUf,GAC5B,IAAIwL,EACJ,OAAIlJ,EAAeT,IAAI7B,IACyB,QAAnCwL,EAAKiW,GAAoBzhB,UAAyB,IAAPwL,OAAgB,EAASA,EAAGnG,UAAY,GAEhGrF,EAAOuO,GAAoB1M,IAAI7B,GAA0BA,EAAnB8N,GAAY9N,GAC3Ce,EAASmnC,aAAaloC,M,wCAEjC,WACI,MbjBiB,CACrB8C,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,M,yCaoBrC,SAA4B9I,GACxB,OAAO+T,GAA4B/T,K,mBAEvC,SAAM4T,EAAazF,EAAcC,EAASpO,GACtCsR,GAAcsC,EAAazF,EAAcC,EAAS/J,KAAKkN,SAAUvR,EAAMqO,qB,4BAE3E,SAAenI,EAAU0N,EAAaN,EAAWC,GAC7CI,GAAUzN,EAAU0N,EAAaN,EAAWC,K,mBAEhD,SAAMrN,GACF7B,KAAKkN,SAAWA,GAASrL,EAASmQ,UAClC,sDAAYnQ,O,EA9BdinC,CAAyBd,ICPzBiB,GAAyB,SAACxtC,EAAWsO,GACvC,OAAOjH,EAAerH,GAChB,IAAIqtC,GAAiB/+B,EAAS,CAAEa,4BAA4B,IAC5D,IAAI+9B,GAAkB5+B,EAAS,CAAEa,4BAA4B,KCLvE,SAASs+B,GAAgBC,EAAQpQ,GAC7B,OAAIA,EAAKt0B,MAAQs0B,EAAKv0B,IACX,EACH2kC,GAAUpQ,EAAKt0B,IAAMs0B,EAAKv0B,KAAQ,IAS9C,IAAM4kC,GAAsB,CACxBC,QAAS,SAACld,EAAQmd,GACd,IAAKA,EAAKl+B,OACN,OAAO+gB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIxmB,GAAG1C,KAAKkpB,GAIR,OAAOA,EAHPA,EAAS3mB,WAAW2mB,GAU5B,IAAMvoB,EAAIslC,GAAgB/c,EAAQmd,EAAKl+B,OAAOxH,GACxCC,EAAIqlC,GAAgB/c,EAAQmd,EAAKl+B,OAAOvH,GAC9C,gBAAUD,EAAV,aAAgBC,EAAhB,OChCF0lC,GAAW,QACXC,GAAmB,CACrBH,QAAS,SAACld,EAAD,GAA4C,IAAjCsd,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACrBC,EAAWxd,EAIXyd,EAAuBzd,EAAOppB,SAAS,QACvC8mC,EAAe,GACjBD,IACAzd,EAASA,EAAOrd,QAAQgyB,IAAkB,SAAC7iB,GAEvC,OADA4rB,EAAan/B,KAAKuT,GACXsrB,OAGf,IAAMO,EAAS9pB,GAAQza,MAAM4mB,GAE7B,GAAI2d,EAAOxkC,OAAS,EAChB,OAAOqkC,EACX,IAAM3iB,EAAWhH,GAAQJ,kBAAkBuM,GACrCtf,EAA8B,kBAAdi9B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgB9lC,EAAEsC,MAAQujC,EAAU7lC,EAC7ComC,EAASN,EAAgB7lC,EAAEqC,MAAQujC,EAAU5lC,EACnDimC,EAAO,EAAIj9B,IAAWk9B,EACtBD,EAAO,EAAIj9B,IAAWm9B,EAOtB,IAAMC,EAAe35B,GAAIy5B,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIj9B,KAClBi9B,EAAO,EAAIj9B,IAAWo9B,GAEQ,kBAAvBH,EAAO,EAAIj9B,KAClBi9B,EAAO,EAAIj9B,IAAWo9B,GAC1B,IAAInqB,EAASkH,EAAS8iB,GACtB,GAAIF,EAAsB,CACtB,IAAI9uB,EAAI,EACRgF,EAASA,EAAOhR,QAAQy6B,IAAU,WAC9B,IAAMW,EAAcL,EAAa/uB,GAEjC,OADAA,IACOovB,KAGf,OAAOpqB,IC1CTqqB,GAAAA,SAAAA,I,wIAMF,WAAoB,I5IfGC,E4IeH,OAChB,EAAoEpqC,KAAKrE,MAAjEI,EAAR,EAAQA,cAAesuC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,kBAAmBlpC,EAAvD,EAAuDA,SAC/C8N,EAAenT,EAAfmT,W5IjBWk7B,E4IkBDG,G5IjBtBrtC,OAAO6I,OAAO7C,EAAiBknC,G4IkBvBl7B,IACIm7B,EAAYG,OACZH,EAAYG,MAAMpmB,IAAIlV,GACtBo7B,GAAqBA,EAAkB9vB,UAAYpZ,GACnDkpC,EAAkB9vB,SAAStL,GAE/BA,EAAW+H,KAAKwzB,YAChBv7B,EAAWoD,iBAAiB,qBAAqB,WAC7C,EAAKukB,kBAET3nB,EAAWs3B,YAAX,kBACOt3B,EAAWnF,SADlB,IAEIwQ,eAAgB,kBAAM,EAAKsc,oBAGnCl3B,EAAsBE,gBAAiB,I,qCAE3C,SAAwB6qC,GAAW,WAC/B,EAA6D1qC,KAAKrE,MAA1DgvC,EAAR,EAAQA,iBAAkB5uC,EAA1B,EAA0BA,cAAeoD,EAAzC,EAAyCA,KAAMmb,EAA/C,EAA+CA,UACzCpL,EAAanT,EAAcmT,WACjC,OAAKA,GASLA,EAAWoL,UAAYA,EACnBnb,GACAurC,EAAUC,mBAAqBA,QACVluC,IAArBkuC,EACAz7B,EAAW07B,aAGX5qC,KAAK62B,eAEL6T,EAAUpwB,YAAcA,IACpBA,EACApL,EAAW27B,UAEL37B,EAAW47B,YAMjBnmB,GAAAA,YAAgB,WACZ,IAAIrY,GACmC,QAAhCA,EAAK4C,EAAW67B,kBAA+B,IAAPz+B,OAAgB,EAASA,EAAG0+B,QAAQ1lC,SAC/E,EAAKuxB,mBAKd,MAnCI,O,gCAqCf,WACI,IAAQ3nB,EAAelP,KAAKrE,MAAMI,cAA1BmT,WACJA,IACAA,EAAW+H,KAAKwzB,aACXv7B,EAAW8f,kBAAoB9f,EAAW+7B,UAC3CjrC,KAAK62B,kB,kCAIjB,WACI,MAA2E72B,KAAKrE,MAAxEI,EAAR,EAAQA,cAAesuC,EAAvB,EAAuBA,YAAgCa,EAAvD,EAAoCZ,kBAC5Bp7B,EAAenT,EAAfmT,WACJA,IACAA,EAAWi8B,6BACS,OAAhBd,QAAwC,IAAhBA,OAAyB,EAASA,EAAYG,QACtEH,EAAYG,MAAM5W,OAAO1kB,IACN,OAAnBg8B,QAA8C,IAAnBA,OAA4B,EAASA,EAAeE,aAC/EF,EAAeE,WAAWl8B,M,0BAGtC,WACI,IAAQ2nB,EAAiB72B,KAAKrE,MAAtBk7B,aACS,OAAjBA,QAA0C,IAAjBA,GAAmCA,M,oBAEhE,WACI,OAAO,S,EA7FTsT,CAAiChqC,EAAAA,WAqGvC,IAAMoqC,GAAyB,CAC3B3jC,cAAc,kBACPwiC,IADK,IAERiC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRvkC,oBAAqBsiC,GACrBriC,qBAAsBqiC,GACtBniC,uBAAwBmiC,GACxBpiC,wBAAyBoiC,GACzBkC,UAAW9B,IC3HT+B,GAAiB,CACnBvsC,cDuGJ,SAAuBrD,GACnB,MAAkC0e,KAAlC,gBAAOC,EAAP,KAAkBuc,EAAlB,KACMwT,GAAcvuC,EAAAA,EAAAA,YAAWgE,GAC/B,OAAQK,EAAAA,cAA6BgqC,IAA7B,kBAA4DxuC,GAA5D,IAAmE0uC,YAAaA,EAAaC,mBAAmBxuC,EAAAA,EAAAA,YAAWsE,GAA2Bka,UAAWA,EAAWuc,aAAcA,OE9EtM,SAAS/4B,GAAQ4nB,EAAM5E,GAAqB,IAAjBrP,EAAiB,uDAAJ,GAC9B9P,EAAQ8B,EAAciiB,GAAQA,EAAOkM,GAAYlM,GAEvD,OADA2J,GAAe,GAAI1tB,EAAOmf,EAAIrP,GACvB,CACHwa,KAAM,kBAAMtqB,EAAMsqB,QAClBuf,YAAa,kBAAM7pC,EAAM6pC,gBC9BjC,IAAMC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQnmC,OACrBqmC,GAAW,SAAChqC,GAAD,MAA4B,kBAAVA,EAAqB6D,WAAW7D,GAASA,GACtEiqC,GAAO,SAACjqC,GAAD,MAA4B,kBAAVA,GAAsBgE,GAAG1C,KAAKtB,IAC7D,SAASkqC,GAAUzgC,EAAQ0gC,EAAQC,EAAMpmB,EAAUqmB,EAAwBC,GACvE,IAAI3/B,EAAI2T,EAAIC,EAAIC,EACZ6rB,GACA5gC,EAAOhC,QAAUkH,GAAI,EAGG,QAAvBhE,EAAKy/B,EAAK3iC,eAA4B,IAAPkD,EAAgBA,EAAK,EAAG4/B,GAAgBvmB,IACxEva,EAAO+gC,YAAc77B,GAA8B,QAAzB2P,EAAK6rB,EAAO1iC,eAA4B,IAAP6W,EAAgBA,EAAK,EAAG,EAAGmsB,GAAiBzmB,KAElGsmB,IACL7gC,EAAOhC,QAAUkH,GAA8B,QAAzB4P,EAAK4rB,EAAO1iC,eAA4B,IAAP8W,EAAgBA,EAAK,EAA2B,QAAvBC,EAAK4rB,EAAK3iC,eAA4B,IAAP+W,EAAgBA,EAAK,EAAGwF,IAK3I,IAAK,IAAI7K,EAAI,EAAGA,EAAI4wB,GAAY5wB,IAAK,CACjC,IAAMuxB,EAAc,SAAH,OAAYZ,GAAQ3wB,GAApB,UACbwxB,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqB5vC,IAAjB6vC,QAA6C7vC,IAAf+vC,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BphC,EAAOihC,GAAe3nC,KAAKD,IAAI6L,GAAIq7B,GAASW,GAAeX,GAASa,GAAa7mB,GAAW,IACxFjgB,GAAQzC,KAAKupC,IAAe9mC,GAAQzC,KAAKqpC,MACzClhC,EAAOihC,IAAgB,MAI3BjhC,EAAOihC,GAAeG,GAM1BV,EAAOzjC,QAAU0jC,EAAK1jC,UACtB+C,EAAO/C,OAASiI,GAAIw7B,EAAOzjC,QAAU,EAAG0jC,EAAK1jC,QAAU,EAAGsd,IAGlE,SAAS4mB,GAAUv7B,EAAQy7B,GACvB,IAAIngC,EACJ,OAAqC,QAA7BA,EAAK0E,EAAOy7B,UAAgC,IAAPngC,EAAgBA,EAAK0E,EAAOpK,aAyB7E,IAAMslC,GAAkBQ,GAAS,EAAG,GAAK7vB,IACnCuvB,GAAmBM,GAAS,GAAK,IAAMzxB,IAC7C,SAASyxB,GAASloC,EAAKC,EAAK4X,GACxB,OAAO,SAACzhB,GAEJ,OAAIA,EAAI4J,EACG,EACP5J,EAAI6J,EACG,EACJ4X,EAAOsJ,GAASnhB,EAAKC,EAAK7J,KCpFzC,SAAS+xC,GAAa5T,EAAM6T,GACxB7T,EAAKv0B,IAAMooC,EAAWpoC,IACtBu0B,EAAKt0B,IAAMmoC,EAAWnoC,IAO1B,SAASooC,GAAY7R,EAAK8R,GACtBH,GAAa3R,EAAIp3B,EAAGkpC,EAAUlpC,GAC9B+oC,GAAa3R,EAAIn3B,EAAGipC,EAAUjpC,GCTlC,SAASkpC,GAAiBr5B,EAAO0lB,EAAWlzB,EAAOizB,EAAa0B,GAM5D,OAJAnnB,EAAQinB,GADRjnB,GAAS0lB,EACiB,EAAIlzB,EAAOizB,QACpB18B,IAAbo+B,IACAnnB,EAAQinB,GAAWjnB,EAAO,EAAImnB,EAAU1B,IAErCzlB,EAuBX,SAASs5B,GAAqBjU,EAAMsC,EAApC,EAA4EzuB,EAAQqgC,GAAY,oBAA/CnsC,EAA+C,KAA1Cw6B,EAA0C,KAAhCC,EAAgC,MAlBhG,SAAyBxC,GAA8F,IAAxFK,EAAwF,uDAA5E,EAAGlzB,EAAyE,uDAAjE,EAAG0G,EAA8D,uDAArD,GAAKiuB,EAAgD,uCAAtC+R,EAAsC,uDAAzB7T,EAAMkU,EAAmB,uDAANlU,EAC7G,GAAIrzB,GAAQzC,KAAKm2B,GAAY,CACzBA,EAAY5zB,WAAW4zB,GAEvBA,EADyB9oB,GAAI28B,EAAWzoC,IAAKyoC,EAAWxoC,IAAK20B,EAAY,KAC1C6T,EAAWzoC,IAE9C,GAAyB,kBAAd40B,EAAX,CAEA,IAAID,EAAc7oB,GAAIs8B,EAAWpoC,IAAKooC,EAAWnoC,IAAKmI,GAClDmsB,IAAS6T,IACTzT,GAAeC,GACnBL,EAAKv0B,IAAMuoC,GAAiBhU,EAAKv0B,IAAK40B,EAAWlzB,EAAOizB,EAAa0B,GACrE9B,EAAKt0B,IAAMsoC,GAAiBhU,EAAKt0B,IAAK20B,EAAWlzB,EAAOizB,EAAa0B,IAOrEqS,CAAgBnU,EAAMsC,EAAWv6B,GAAMu6B,EAAWC,GAAWD,EAAWE,GAAYF,EAAWn1B,MAAO0G,EAAQqgC,GAKlH,IAAMxR,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASyR,GAAoBnS,EAAKK,EAAYyR,EAAWM,GACrDJ,GAAqBhS,EAAIp3B,EAAGy3B,EAAYI,GAAqB,OAAdqR,QAAoC,IAAdA,OAAuB,EAASA,EAAUlpC,EAAiB,OAAdwpC,QAAoC,IAAdA,OAAuB,EAASA,EAAUxpC,GAClLopC,GAAqBhS,EAAIn3B,EAAGw3B,EAAYK,GAAqB,OAAdoR,QAAoC,IAAdA,OAAuB,EAASA,EAAUjpC,EAAiB,OAAdupC,QAAoC,IAAdA,OAAuB,EAASA,EAAUvpC,GChDtL,SAASwpC,GAAgBhqB,GACrB,OAA2B,IAApBA,EAAM+V,WAAmC,IAAhB/V,EAAMnd,MAE1C,SAASonC,GAAYjqB,GACjB,OAAOgqB,GAAgBhqB,EAAMzf,IAAMypC,GAAgBhqB,EAAMxf,GAE7D,SAAS0pC,GAAUtpC,EAAGC,GAClB,OAAQD,EAAEL,EAAEY,MAAQN,EAAEN,EAAEY,KACpBP,EAAEL,EAAEa,MAAQP,EAAEN,EAAEa,KAChBR,EAAEJ,EAAEW,MAAQN,EAAEL,EAAEW,KAChBP,EAAEJ,EAAEY,MAAQP,EAAEL,EAAEY,IAExB,SAAS+oC,GAAYxS,GACjB,OAAOlC,GAAWkC,EAAIp3B,GAAKk1B,GAAWkC,EAAIn3B,G,ICbxC4pC,GAAAA,WACF,cAAc,eACVztC,KAAKgrC,QAAU,G,kCAEnB,SAAI1B,GACAtZ,GAAchwB,KAAKgrC,QAAS1B,GAC5BA,EAAKzE,mB,oBAET,SAAOyE,GAKH,GAJAnZ,GAAWnwB,KAAKgrC,QAAS1B,GACrBA,IAAStpC,KAAK0tC,WACd1tC,KAAK0tC,cAAWjxC,GAEhB6sC,IAAStpC,KAAK+rC,KAAM,CACpB,IAAM2B,EAAW1tC,KAAKgrC,QAAQhrC,KAAKgrC,QAAQ1lC,OAAS,GAChDooC,GACA1tC,KAAK6qC,QAAQ6C,M,sBAIzB,SAASpE,GACL,IAMIoE,EANEC,EAAc3tC,KAAKgrC,QAAQ4C,WAAU,SAACC,GAAD,OAAYvE,IAASuE,KAChE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAI7yB,EAAI6yB,EAAa7yB,GAAK,EAAGA,IAAK,CACnC,IAAM+yB,EAAS7tC,KAAKgrC,QAAQlwB,GAC5B,IAAyB,IAArB+yB,EAAOvzB,UAAqB,CAC5BozB,EAAWG,EACX,OAGR,QAAIH,IACA1tC,KAAK6qC,QAAQ6C,IACN,K,qBAMf,SAAQpE,EAAMwE,GACV,IAAIxhC,EACEohC,EAAW1tC,KAAK+rC,KAClBzC,IAASoE,IAEb1tC,KAAK0tC,SAAWA,EAChB1tC,KAAK+rC,KAAOzC,EACZA,EAAKyE,OACDL,IACAA,EAAS7rC,UAAY6rC,EAAS7I,iBAC9ByE,EAAKzE,iBACLyE,EAAK0E,WAAaN,EACdI,IACAxE,EAAK0E,WAAWC,iBAAkB,GAElCP,EAASQ,WACT5E,EAAK4E,SAAWR,EAASQ,SACzB5E,EAAK4E,SAASpkC,aACV4jC,EAASS,iBAAmBT,EAAS5jC,eAEpB,QAApBwC,EAAKg9B,EAAKryB,YAAyB,IAAP3K,OAAgB,EAASA,EAAG8hC,cACzD9E,EAAK+E,eAAgB,IAGP,IADI/E,EAAKv/B,QAAnBukC,WAEJZ,EAASa,W,mCAgBrB,WACIvuC,KAAKgrC,QAAQ15B,SAAQ,SAACg4B,GAClB,IAAIh9B,EAAI2T,EAAIC,EAAIC,EAAIquB,EAC0B,QAA7CvuB,GAAM3T,EAAKg9B,EAAKv/B,SAASwQ,sBAAmC,IAAP0F,GAAyBA,EAAG5iB,KAAKiP,GACmB,QAAzGkiC,EAAkC,QAA5BtuB,EAAKopB,EAAKmF,oBAAiC,IAAPvuB,OAAgB,GAAUC,EAAKD,EAAGnW,SAASwQ,sBAAmC,IAAPi0B,GAAyBA,EAAGnxC,KAAK8iB,Q,4BAG3J,WACIngB,KAAKgrC,QAAQ15B,SAAQ,SAACg4B,GAClBA,EAAKznC,UAAYynC,EAAKzE,gBAAe,Q,gCAO7C,WACQ7kC,KAAK+rC,MAAQ/rC,KAAK+rC,KAAKmC,WACvBluC,KAAK+rC,KAAKmC,cAAWzxC,O,EAtG3BgxC,GCFN,SAASiB,GAAyBrrB,EAAOomB,EAAWkF,GAChD,IAAIrqC,EAAY,GAOVsqC,EAAavrB,EAAMzf,EAAEw1B,UAAYqQ,EAAU7lC,EAC3CirC,EAAaxrB,EAAMxf,EAAEu1B,UAAYqQ,EAAU5lC,EAWjD,IAVI+qC,GAAcC,KACdvqC,EAAY,eAAH,OAAkBsqC,EAAlB,eAAmCC,EAAnC,YAMO,IAAhBpF,EAAU7lC,GAA2B,IAAhB6lC,EAAU5lC,IAC/BS,GAAa,SAAJ,OAAa,EAAImlC,EAAU7lC,EAA3B,aAAiC,EAAI6lC,EAAU5lC,EAA/C,OAET8qC,EAAiB,CACjB,IAAQtmC,EAA6BsmC,EAA7BtmC,OAAQC,EAAqBqmC,EAArBrmC,QAASC,EAAYomC,EAAZpmC,QACrBF,IACA/D,GAAa,UAAJ,OAAc+D,EAAd,UACTC,IACAhE,GAAa,WAAJ,OAAegE,EAAf,UACTC,IACAjE,GAAa,WAAJ,OAAeiE,EAAf,UAMjB,IAAMumC,EAAgBzrB,EAAMzf,EAAEsC,MAAQujC,EAAU7lC,EAC1CmrC,EAAgB1rB,EAAMxf,EAAEqC,MAAQujC,EAAU5lC,EAIhD,OAHsB,IAAlBirC,GAAyC,IAAlBC,IACvBzqC,GAAa,SAAJ,OAAawqC,EAAb,aAA+BC,EAA/B,MAENzqC,GAAa,OCtCxB,IAAM0qC,GAAiB,SAAC/qC,EAAGC,GAAJ,OAAUD,EAAEi9B,MAAQh9B,EAAEg9B,OCGvC+N,GAAAA,WACF,cAAc,eACVjvC,KAAKE,SAAW,GAChBF,KAAKkvC,SAAU,E,kCAEnB,SAAIj5B,GACA+Z,GAAchwB,KAAKE,SAAU+V,GAC7BjW,KAAKkvC,SAAU,I,oBAEnB,SAAOj5B,GACHka,GAAWnwB,KAAKE,SAAU+V,GAC1BjW,KAAKkvC,SAAU,I,qBAEnB,SAAQt5B,GACJ5V,KAAKkvC,SAAWlvC,KAAKE,SAAS6K,KAAKikC,IACnChvC,KAAKkvC,SAAU,EACflvC,KAAKE,SAASoR,QAAQsE,O,EAhBxBq5B,GCmBAE,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjC3yC,GAAK,EACT,SAAS4yC,GAAT,GAA0H,IAA1FC,EAA0F,EAA1FA,qBAAsBC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,eACnG,kBACI,WAAYC,GAAsH,WAA3G5lC,EAA2G,uDAA5F,GAAIjO,EAAwF,uDAA7D,OAAlByzC,QAA4C,IAAlBA,OAA2B,EAASA,KAAiB,eAI9HtvC,KAAKxD,GAAKA,KAIVwD,KAAK2vC,YAAc,EAOnB3vC,KAAKE,SAAW,IAAImD,IAKpBrD,KAAK+J,QAAU,GAMf/J,KAAK4vC,iBAAkB,EACvB5vC,KAAK68B,oBAAqB,EAO1B78B,KAAKquC,eAAgB,EACrBruC,KAAK+lC,kBAAmB,EAKxB/lC,KAAK6vC,mBAAoB,EAIzB7vC,KAAK8vC,uBAAwB,EAC7B9vC,KAAK+vC,uBAAwB,EAK7B/vC,KAAKouC,YAAa,EAIlBpuC,KAAKgwC,OAAQ,EAKbhwC,KAAKiwC,YAAa,EAIlBjwC,KAAKkwC,sBAAuB,EAS5BlwC,KAAKypC,UAAY,CAAE7lC,EAAG,EAAGC,EAAG,GAI5B7D,KAAKmwC,cAAgB,IAAI3tC,IAEzBxC,KAAKowC,eAAiB,IAAI5tC,IAC1BxC,KAAKqwC,kBAAoB,WACjB,EAAKjC,aACL,EAAKA,YAAa,EAClB,EAAKkC,sBAQbtwC,KAAKuwC,iBAAmB,WACpB,EAAKC,MAAMl/B,QAAQm/B,IACnB,EAAKD,MAAMl/B,QAAQo/B,IACnB,EAAKF,MAAMl/B,QAAQq/B,KAEvB3wC,KAAK4wC,cAAe,EACpB5wC,KAAK6wC,WAAY,EACjB7wC,KAAK8wC,kBAAoB,EAKzB9wC,KAAK+wC,YAAc,IAAIvuC,IACvBxC,KAAK0vC,UAAYA,EACjB1vC,KAAK8J,aAAeA,EACpB9J,KAAKiX,KAAOpb,EAASA,EAAOob,MAAQpb,EAASmE,KAC7CA,KAAKgxC,KAAOn1C,EAAS,GAAH,gBAAOA,EAAOm1C,MAAd,CAAoBn1C,IAAU,GAChDmE,KAAKnE,OAASA,EACdmE,KAAKkhC,MAAQrlC,EAASA,EAAOqlC,MAAQ,EAAI,EACzCwO,GAAa1vC,KAAKiX,KAAKg6B,sBAAsBvB,EAAW1vC,MACxD,IAAK,IAAI8a,EAAI,EAAGA,EAAI9a,KAAKgxC,KAAK1rC,OAAQwV,IAClC9a,KAAKgxC,KAAKl2B,GAAGo1B,sBAAuB,EAEpClwC,KAAKiX,OAASjX,OACdA,KAAKwwC,MAAQ,IAAIvB,IAnH7B,+CAqHI,SAAiBjxC,EAAMoU,GAInB,OAHKpS,KAAKmwC,cAAcxtC,IAAI3E,IACxBgC,KAAKmwC,cAAcvtC,IAAI5E,EAAM,IAAIoyB,IAE9BpwB,KAAKmwC,cAAc1tC,IAAIzE,GAAMomB,IAAIhS,KAzHhD,6BA2HI,SAAgBpU,GAAe,IAC3B,IAAMkzC,EAAsBlxC,KAAKmwC,cAAc1tC,IAAIzE,GADxB,mBAAN+pC,EAAM,iCAANA,EAAM,kBAEH,OAAxBmJ,QAAwD,IAAxBA,GAA0CA,EAAoBn0C,OAApB,MAAAm0C,EAA8BnJ,KA7HhH,0BA+HI,SAAa/pC,GACT,OAAOgC,KAAKmwC,cAAcxtC,IAAI3E,KAhItC,mCAkII,SAAsB0xC,EAAWpG,GAC7BtpC,KAAKowC,eAAextC,IAAI8sC,EAAWpG,KAnI3C,mBAwII,SAAMznC,GAAiC,IAC/ByK,EAD+B,OAAvB+hC,EAAuB,wDAEnC,IAAIruC,KAAK6B,SAAT,CAEA7B,KAAKgwC,MACDnuC,aAAoBsvC,YAAmC,QAArBtvC,EAASmQ,QAC/ChS,KAAK6B,SAAWA,EAChB,MAA4C7B,KAAK+J,QAAzC3I,EAAR,EAAQA,SAAUmC,EAAlB,EAAkBA,OAAQxH,EAA1B,EAA0BA,cAU1B,GATIA,IAAkBA,EAAcO,SAChCP,EAAc+F,MAAMD,GAExB7B,KAAKiX,KAAKu5B,MAAMpsB,IAAIpkB,MACG,QAAtBsM,EAAKtM,KAAKnE,cAA2B,IAAPyQ,GAAyBA,EAAGpM,SAASkkB,IAAIpkB,MACxEA,KAAK0vC,WAAa1vC,KAAKiX,KAAKm5B,eAAe34B,OAAOzX,KAAK0vC,WACnDrB,IAAkB9qC,GAAUnC,KAC5BpB,KAAKquC,eAAgB,GAErBgB,EAAsB,CACtB,IAAIxf,EACEuhB,EAAsB,kBAAO,EAAKn6B,KAAK84B,uBAAwB,GACrEV,EAAqBxtC,GAAU,WAC3B,EAAKoV,KAAK84B,uBAAwB,EAClClgB,GAAeA,IACfA,EAAcxK,GAAM+rB,EAAqB,KACrCzxC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C,EAAK4wC,MAAMl/B,QAAQ+/B,QAI3BjwC,GACApB,KAAKiX,KAAKq6B,mBAAmBlwC,EAAUpB,OAGd,IAAzBA,KAAK+J,QAAQjM,SACb/B,IACCqF,GAAYmC,IACbvD,KAAKsS,iBAAiB,aAAa,YAA+E,IAC1GhG,EAAI2T,EAAIC,EAAIC,EAAIquB,EADcnrB,EAA4E,EAA5EA,MAAO6c,EAAqE,EAArEA,iBAAkBqR,EAAmD,EAAnDA,yBAAkCC,EAAiB,EAAzBjuC,OAErF,GAAI,EAAKkuC,yBAGL,OAFA,EAAKrmC,YAAS3O,OACd,EAAKi1C,oBAAiBj1C,GAI1B,IAAMk1C,EAAmI,QAA/G1xB,EAAwC,QAAlC3T,EAAK,EAAKvC,QAAQ0H,kBAA+B,IAAPnF,EAAgBA,EAAKvQ,EAAc0yB,8BAA2C,IAAPxO,EAAgBA,EAAK2xB,GACtK,EAA+D71C,EAAcwc,WAArEs5B,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,0BAK1BC,GAAiB,EAAKC,eACvBzE,GAAU,EAAKyE,aAAcR,IAC9BD,EAMEU,GAAgC/R,GAAoBqR,EAC1D,IAAgC,QAA1BrxB,EAAK,EAAK8tB,kBAA+B,IAAP9tB,OAAgB,EAASA,EAAGre,WAChEowC,GACC/R,IACI6R,IAAkB,EAAK/iB,kBAAoB,CAC5C,EAAKgf,aACL,EAAKS,aAAe,EAAKT,WACzB,EAAKS,aAAaA,kBAAehyC,GAErC,EAAKy1C,mBAAmB7uB,EAAO4uB,GAC/B,IAAME,GAAmB,kBAClBpkB,GAAmB4jB,EAAkB,WADtB,IAElBhlB,OAAQklB,EACRhlB,WAAYilB,IAEZ/1C,EAAc43B,qBACdwe,EAAiB9sB,MAAQ,EACzB8sB,EAAiB9tC,MAAO,GAE5B,EAAKgrB,eAAe8iB,QAQfjS,GAC0B,IAA3B,EAAK4Q,mBACLO,GAAgB,GAEpB,EAAKpG,WAA2D,QAA7CuD,GAAMruB,EAAK,EAAKpW,SAASwQ,sBAAmC,IAAPi0B,GAAyBA,EAAGnxC,KAAK8iB,IAE7G,EAAK6xB,aAAeR,QApOpC,qBAwOI,WACI,IAAIllC,EAAI2T,EACRjgB,KAAK+J,QAAQ3I,UAAYpB,KAAK4qC,aAC9B5qC,KAAKiX,KAAKu5B,MAAM5c,OAAO5zB,MACI,QAA1BsM,EAAKtM,KAAK+qC,kBAA+B,IAAPz+B,GAAyBA,EAAGsnB,OAAO5zB,MAC/C,QAAtBigB,EAAKjgB,KAAKnE,cAA2B,IAAPokB,GAAyBA,EAAG/f,SAASuX,OAAOzX,MAC3EA,KAAK6B,cAAWpF,EAChBsoB,GAAWqtB,UAAUpyC,KAAKuwC,oBA/OlC,yBAkPI,WACIvwC,KAAK8vC,uBAAwB,IAnPrC,2BAqPI,WACI9vC,KAAK8vC,uBAAwB,IAtPrC,6BAwPI,WACI,OAAO9vC,KAAK8vC,uBAAyB9vC,KAAK+vC,wBAzPlD,oCA2PI,WACI,IAAIzjC,EACJ,OAAQtM,KAAK68B,qBACe,QAAtBvwB,EAAKtM,KAAKnE,cAA2B,IAAPyQ,OAAgB,EAASA,EAAGmlC,4BAC5D,IA/PZ,yBAkQI,WACI,IAAInlC,EACAtM,KAAKqyC,oBAETryC,KAAKouC,YAAa,EACI,QAArB9hC,EAAKtM,KAAKwwC,aAA0B,IAAPlkC,GAAyBA,EAAGgF,QAAQghC,IAClEtyC,KAAK2vC,iBAxQb,wBA0QI,WAAyC,IACjCrjC,EAAI2T,EAAIC,EADLqyB,IAA8B,yDAErC,GAAIvyC,KAAKiX,KAAKo7B,kBACoC,QAA7CpyB,GAAM3T,EAAKtM,KAAK+J,SAASwQ,sBAAmC,IAAP0F,GAAyBA,EAAG5iB,KAAKiP,QAI3F,IADCtM,KAAKiX,KAAKm3B,YAAcpuC,KAAKiX,KAAKu7B,eAC/BxyC,KAAKquC,cAAT,CAEAruC,KAAKquC,eAAgB,EACrB,IAAK,IAAIvzB,EAAI,EAAGA,EAAI9a,KAAKgxC,KAAK1rC,OAAQwV,IAAK,CACvC,IAAMwuB,EAAOtpC,KAAKgxC,KAAKl2B,GACvBwuB,EAAK4G,sBAAuB,EAC5B5G,EAAK5J,aAAa,YAEtB,MAA6B1/B,KAAK+J,QAA1B3I,EAAR,EAAQA,SAAUmC,EAAlB,EAAkBA,OAClB,QAAiB9G,IAAb2E,GAA2BmC,EAA/B,CAEA,IAAMyG,EAA0D,QAArCkW,EAAKlgB,KAAK+J,QAAQhO,qBAAkC,IAAPmkB,OAAgB,EAASA,EAAG3H,WAAWvO,kBAC/GhK,KAAKyyC,2BAAmD,OAAtBzoC,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBhK,KAAK8J,aAAc,IAC7I9J,KAAK0yC,iBACLH,GAAyBvyC,KAAK2yC,gBAAgB,kBA/RtD,uBAkSI,WAKI,GAJyB3yC,KAAKqyC,kBAQ1B,OAHAryC,KAAK4yC,gBACL5yC,KAAKswC,yBACLtwC,KAAKwwC,MAAMl/B,QAAQuhC,IAGlB7yC,KAAKouC,aAEVpuC,KAAKouC,YAAa,EAOdpuC,KAAKowC,eAAe9oC,OACpBtH,KAAKowC,eAAe9+B,QAAQwhC,IAC5B9yC,KAAKowC,eAAe/e,SAKxBrxB,KAAKwwC,MAAMl/B,QAAQyhC,IAKnB/yC,KAAKwwC,MAAMl/B,QAAQquB,IAKnB3/B,KAAKwwC,MAAMl/B,QAAQ0hC,IACnBhzC,KAAKswC,oBAELtrB,GAAU+G,SACV/G,GAAUotB,YACVptB,GAAUpoB,YA5UlB,+BA8UI,WACIoD,KAAKwwC,MAAMl/B,QAAQ2hC,IACnBjzC,KAAK+wC,YAAYz/B,QAAQ4hC,MAhVjC,sCAkVI,WACIvuB,GAAAA,UAAe3kB,KAAKuwC,kBAAkB,GAAO,KAnVrD,uCAqVI,WAA4B,WAMxB5rB,GAAAA,YAAgB,WACR,EAAK0pB,cACL,EAAKp3B,KAAKwzB,YAGV,EAAKxzB,KAAKo5B,yBAhW1B,4BAuWI,YACQrwC,KAAKkuC,UAAaluC,KAAK6B,WAE3B7B,KAAKkuC,SAAWluC,KAAKmzC,aA1W7B,0BA4WI,WACI,IAAI7mC,EACJ,GAAKtM,KAAK6B,WAGV7B,KAAK0/B,eACC1/B,KAAK+J,QAAQ08B,qBAAuBzmC,KAAKirC,UAC1CjrC,KAAKquC,eADV,CAWA,GAAIruC,KAAKguC,aAAehuC,KAAKguC,WAAWnsC,SACpC,IAAK,IAAIiZ,EAAI,EAAGA,EAAI9a,KAAKgxC,KAAK1rC,OAAQwV,IAAK,CAC1B9a,KAAKgxC,KAAKl2B,GAClB4kB,eAGb,IAAM0T,EAAapzC,KAAKuD,OACxBvD,KAAKuD,OAASvD,KAAKmzC,SAAQ,GAC3BnzC,KAAKqzC,gB5BxZQ,CACrBzvC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B0Z7BzE,KAAKquC,eAAgB,EACrBruC,KAAK0pC,qBAAkBjtC,EACvBuD,KAAK2yC,gBAAgB,UAAW3yC,KAAKuD,OAAOy5B,WACN,QAArC1wB,EAAKtM,KAAK+J,QAAQhO,qBAAkC,IAAPuQ,GAAyBA,EAAGvP,OAAO,gBAAiBiD,KAAKuD,OAAOy5B,UAA0B,OAAfoW,QAAsC,IAAfA,OAAwB,EAASA,EAAWpW,cAzYpM,0BA2YI,WAAgC,IAAnBsW,EAAmB,uDAAX,UACbC,EAAmBr1C,QAAQ8B,KAAK+J,QAAQw8B,cAAgBvmC,KAAK6B,UAC7D7B,KAAKy+B,QACLz+B,KAAKy+B,OAAOkR,cAAgB3vC,KAAKiX,KAAK04B,aACtC3vC,KAAKy+B,OAAO6U,QAAUA,IACtBC,GAAmB,GAEnBA,IACAvzC,KAAKy+B,OAAS,CACVkR,YAAa3vC,KAAKiX,KAAK04B,YACvB2D,MAAAA,EACAE,OAAQhE,EAAkBxvC,KAAK6B,UAC/BgL,OAAQ0iC,EAAcvvC,KAAK6B,cAvZ3C,4BA2ZI,WACI,IAAIyK,EACJ,GAAKmjC,EAAL,CAEA,IAAMgE,EAAmBzzC,KAAKquC,eAAiBruC,KAAKkwC,qBAC9CwD,EAAgB1zC,KAAK0pC,kBAAoB4D,GAAYttC,KAAK0pC,iBAC1D1/B,EAA0D,QAArCsC,EAAKtM,KAAK+J,QAAQhO,qBAAkC,IAAPuQ,OAAgB,EAASA,EAAGiM,WAAWvO,kBACzG2pC,EAA+C,OAAtB3pC,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBhK,KAAK8J,aAAc,IACpI8pC,EAA8BD,IAA2B3zC,KAAKyyC,2BAChEgB,IACCC,GACGrpC,GAAarK,KAAK8J,eAClB8pC,KACJnE,EAAezvC,KAAK6B,SAAU8xC,GAC9B3zC,KAAKkwC,sBAAuB,EAC5BlwC,KAAK6kC,qBA1ajB,qBA6aI,WAAgC,IAAxBgP,IAAwB,yDACtBC,EAAU9zC,KAAK0+B,iBACjB1B,EAAYh9B,KAAK+zC,oBAAoBD,GAUzC,OAJID,IACA7W,EAAYh9B,KAAK6zC,gBAAgB7W,IAErCgX,GAAShX,GACF,CACH2S,YAAa3vC,KAAKiX,KAAK04B,YACvBsE,YAAaH,EACb9W,UAAAA,EACAlzB,aAAc,GACduB,OAAQrL,KAAKxD,MA9bzB,4BAicI,WACI,IAAQT,EAAkBiE,KAAK+J,QAAvBhO,cACR,IAAKA,EACD,M5BvdS,CACrB6H,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4Byd7B,IAAMu2B,EAAMj/B,EAAc6/B,qBAElB6C,EAAWz+B,KAAKiX,KAAhBwnB,OAKR,OAJIA,IACAtD,GAAcH,EAAIp3B,EAAG66B,EAAO5xB,OAAOjJ,GACnCu3B,GAAcH,EAAIn3B,EAAG46B,EAAO5xB,OAAOhJ,IAEhCm3B,IA5cf,iCA8cI,SAAoBA,GAChB,IAAMkZ,E5BleO,CACrBtwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4Boe7BooC,GAAYqH,EAAkBlZ,GAK9B,IAAK,IAAIlgB,EAAI,EAAGA,EAAI9a,KAAKgxC,KAAK1rC,OAAQwV,IAAK,CACvC,IAAMwuB,EAAOtpC,KAAKgxC,KAAKl2B,GACf2jB,EAAoB6K,EAApB7K,OAAQ10B,EAAYu/B,EAAZv/B,QAChB,GAAIu/B,IAAStpC,KAAKiX,MAAQwnB,GAAU10B,EAAQw8B,aAAc,CAKtD,GAAI9H,EAAO+U,OAAQ,CACf3G,GAAYqH,EAAkBlZ,GAC9B,IAAgBmZ,EAAen0C,KAAKiX,KAA5BwnB,OAKJ0V,IACAhZ,GAAc+Y,EAAiBtwC,GAAIuwC,EAAWtnC,OAAOjJ,GACrDu3B,GAAc+Y,EAAiBrwC,GAAIswC,EAAWtnC,OAAOhJ,IAG7Ds3B,GAAc+Y,EAAiBtwC,EAAG66B,EAAO5xB,OAAOjJ,GAChDu3B,GAAc+Y,EAAiBrwC,EAAG46B,EAAO5xB,OAAOhJ,IAGxD,OAAOqwC,IA7ef,4BA+eI,SAAelZ,GAA4B,IAAvBoZ,EAAuB,wDACjCC,E5BngBO,CACrBzwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4BqgB7BooC,GAAYwH,EAAgBrZ,GAC5B,IAAK,IAAIlgB,EAAI,EAAGA,EAAI9a,KAAKgxC,KAAK1rC,OAAQwV,IAAK,CACvC,IAAMwuB,EAAOtpC,KAAKgxC,KAAKl2B,IAClBs5B,GACD9K,EAAKv/B,QAAQw8B,cACb+C,EAAK7K,QACL6K,IAASA,EAAKryB,MACd0kB,GAAa0Y,EAAgB,CACzBzwC,GAAI0lC,EAAK7K,OAAO5xB,OAAOjJ,EACvBC,GAAIylC,EAAK7K,OAAO5xB,OAAOhJ,IAG1BwG,GAAai/B,EAAKx/B,eAEvB6xB,GAAa0Y,EAAgB/K,EAAKx/B,cAKtC,OAHIO,GAAarK,KAAK8J,eAClB6xB,GAAa0Y,EAAgBr0C,KAAK8J,cAE/BuqC,IApgBf,6BAsgBI,SAAgBrZ,GACZ,IAAI1uB,EACEgoC,E5B3hBO,CACrB1wC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B6hB7BooC,GAAYyH,EAAqBtZ,GACjC,IAAK,IAAIlgB,EAAI,EAAGA,EAAI9a,KAAKgxC,KAAK1rC,OAAQwV,IAAK,CACvC,IAAMwuB,EAAOtpC,KAAKgxC,KAAKl2B,GACvB,GAAKwuB,EAAKznC,UAELwI,GAAai/B,EAAKx/B,cAAvB,CAEA0wB,GAAS8O,EAAKx/B,eAAiBw/B,EAAKoJ,iBACpC,IAAMtF,E5BpiBG,CACrBxpC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4BuiBzBooC,GAAYO,EADI9D,EAAK5K,kBAErByO,GAAoBmH,EAAqBhL,EAAKx/B,aAAuC,QAAxBwC,EAAKg9B,EAAK4E,gBAA6B,IAAP5hC,OAAgB,EAASA,EAAG0wB,UAAWoQ,IAKxI,OAHI/iC,GAAarK,KAAK8J,eAClBqjC,GAAoBmH,EAAqBt0C,KAAK8J,cAE3CwqC,IAzhBf,4BA8hBI,SAAejxB,GACXrjB,KAAKu0C,YAAclxB,EACnBrjB,KAAK6vC,mBAAoB,EACzB7vC,KAAKiX,KAAKu9B,6BAjiBlB,wBAmiBI,SAAWzqC,GACP/J,KAAK+J,SAAL,0BACO/J,KAAK+J,SACLA,GAFP,IAGIukC,eAAiC7xC,IAAtBsN,EAAQukC,WAA0BvkC,EAAQukC,cAviBjE,+BA0iBI,WACItuC,KAAKy+B,YAAShiC,EACduD,KAAKuD,YAAS9G,EACduD,KAAKkuC,cAAWzxC,EAChBuD,KAAKyyC,gCAA6Bh2C,EAClCuD,KAAKu0C,iBAAc93C,EACnBuD,KAAKoL,YAAS3O,EACduD,KAAKquC,eAAgB,IAjjB7B,gCAsjBI,WACI,IAAI/hC,EAMEy/B,EAAO/rC,KAAKy0C,UAOlB,GANAz0C,KAAK6vC,oBAAsB7vC,KAAK6vC,kBAAoB9D,EAAK8D,mBACzD7vC,KAAK+lC,mBAAqB/lC,KAAK+lC,iBAAmBgG,EAAKhG,kBAKlD/lC,KAAK6vC,mBAAsB7vC,KAAK00C,+BAArC,CAEA,MAA6B10C,KAAK+J,QAA1BxG,EAAR,EAAQA,OAAQnC,EAAhB,EAAgBA,SAIhB,GAAKpB,KAAKuD,SAAYA,GAAUnC,GAAhC,CAQA,IAAKpB,KAAKu0C,cAAgBv0C,KAAK0xC,eAAgB,CAE3C,IAAMiD,EAAiB30C,KAAK40C,6BACxBD,GAAkBA,EAAepxC,QACjCvD,KAAK20C,eAAiBA,EACtB30C,KAAK0xC,e5B1mBA,CACrB9tC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B4mBrBzE,KAAK60C,qB5B3mBA,CACrBjxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B6mBrBg1B,GAAqBz5B,KAAK60C,qBAAsB70C,KAAKuD,OAAOy5B,UAAW2X,EAAepxC,OAAOy5B,WAC7F6P,GAAY7sC,KAAK0xC,eAAgB1xC,KAAK60C,uBAGtC70C,KAAK20C,eAAiB30C,KAAK0xC,oBAAiBj1C,EpChmBhE,IAAyB2O,EAAQmuB,EAAU19B,EoCumB/B,GAAKmE,KAAK0xC,gBAAmB1xC,KAAKu0C,YAuClC,GAlCKv0C,KAAKoL,SACNpL,KAAKoL,O5B7nBI,CACrBxH,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B+nBzBzE,KAAK80C,qB5B9nBI,CACrBlxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,K4BooBzBzE,KAAK0xC,gBACL1xC,KAAK60C,uBAC2B,QAA9BvoC,EAAKtM,KAAK20C,sBAAmC,IAAProC,OAAgB,EAASA,EAAGlB,SpCrnB3DA,EoCsnBOpL,KAAKoL,OpCtnBJmuB,EoCsnBYv5B,KAAK0xC,epCtnBP71C,EoCsnBuBmE,KAAK20C,eAAevpC,OpCrnBlFkuB,GAAiBluB,EAAOxH,EAAG21B,EAAS31B,EAAG/H,EAAO+H,GAC9C01B,GAAiBluB,EAAOvH,EAAG01B,EAAS11B,EAAGhI,EAAOgI,IoCynB7B7D,KAAKu0C,aACNr2C,QAAQ8B,KAAKyuC,cAEbzuC,KAAKoL,OAASpL,KAAK+0C,eAAe/0C,KAAKuD,OAAOy5B,WAG9C6P,GAAY7sC,KAAKoL,OAAQpL,KAAKuD,OAAOy5B,WAEzCjC,GAAc/6B,KAAKoL,OAAQpL,KAAKu0C,cAMhC1H,GAAY7sC,KAAKoL,OAAQpL,KAAKuD,OAAOy5B,WAKrCh9B,KAAK00C,+BAAgC,CACrC10C,KAAK00C,gCAAiC,EACtC,IAAMC,EAAiB30C,KAAK40C,6BACxBD,GACAz2C,QAAQy2C,EAAelG,gBACnBvwC,QAAQ8B,KAAKyuC,gBAChBkG,EAAe5qC,QAAQw8B,cACxBoO,EAAevpC,QACfpL,KAAK20C,eAAiBA,EACtB30C,KAAK0xC,e5BvqBA,CACrB9tC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4ByqBrBzE,KAAK60C,qB5BxqBA,CACrBjxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B0qBrBg1B,GAAqBz5B,KAAK60C,qBAAsB70C,KAAKoL,OAAQupC,EAAevpC,QAC5EyhC,GAAY7sC,KAAK0xC,eAAgB1xC,KAAK60C,uBAGtC70C,KAAK20C,eAAiB30C,KAAK0xC,oBAAiBj1C,OA1pB5D,wCA8pBI,WACI,GAAKuD,KAAKnE,SACN2+B,GAASx6B,KAAKnE,OAAOiO,gBACrB2wB,GAAez6B,KAAKnE,OAAOiO,cAE/B,OAAK9J,KAAKnE,OAAO61C,gBAAkB1xC,KAAKnE,OAAO04C,cAC3Cv0C,KAAKnE,OAAO0H,OACLvD,KAAKnE,OAGLmE,KAAKnE,OAAO+4C,+BAxqB/B,4BA2qBI,WACI,IAAItoC,EACIujC,EAAwC7vC,KAAxC6vC,kBAAmB9J,EAAqB/lC,KAArB+lC,iBAC3B/lC,KAAK6vC,kBAAoB7vC,KAAK+lC,kBAAmB,EACjD,IAAMgG,EAAO/rC,KAAKy0C,UACZO,EAAW92C,QAAQ8B,KAAKyuC,eAAiBzuC,OAAS+rC,EACpDkJ,GAAU,EAKd,GAJIpF,IACAoF,GAAU,GACVD,GAAYjP,IACZkP,GAAU,IACVA,EAAJ,CAEA,MAA6Bj1C,KAAK+J,QAA1BxG,EAAR,EAAQA,OAAQnC,EAAhB,EAAgBA,SAWhB,GANApB,KAAK4vC,gBAAkB1xC,SAAgC,QAAtBoO,EAAKtM,KAAKnE,cAA2B,IAAPyQ,OAAgB,EAASA,EAAGsjC,kBACvF5vC,KAAKgvB,kBACLhvB,KAAKk1C,kBACJl1C,KAAK4vC,kBACN5vC,KAAKu0C,YAAcv0C,KAAK0xC,oBAAiBj1C,GAExCuD,KAAKuD,SAAYA,GAAUnC,GAAhC,CAMAyrC,GAAY7sC,KAAKqzC,gBAAiBrzC,KAAKuD,OAAOy5B,W/B/rB1D,SAAyBhC,EAAKyO,EAAW0L,GAAsC,IACvE7oC,EAAI2T,EADuCm1B,EAA4B,wDAErEC,EAAaF,EAAS7vC,OAC5B,GAAK+vC,EAAL,CAIA,IAAI/L,EACAjmB,EAFJomB,EAAU7lC,EAAI6lC,EAAU5lC,EAAI,EAG5B,IAAK,IAAIiX,EAAI,EAAGA,EAAIu6B,EAAYv6B,IAE5BuI,GADAimB,EAAO6L,EAASr6B,IACH4uB,gBACuH,cAAjD,QAA7EzpB,EAA8B,QAAxB3T,EAAKg9B,EAAKznC,gBAA6B,IAAPyK,OAAgB,EAASA,EAAGrC,aAA0B,IAAPgW,OAAgB,EAASA,EAAG0iB,WAEnHyS,GACA9L,EAAKv/B,QAAQw8B,cACb+C,EAAK7K,QACL6K,IAASA,EAAKryB,MACd0kB,GAAaX,EAAK,CACdp3B,GAAI0lC,EAAK7K,OAAO5xB,OAAOjJ,EACvBC,GAAIylC,EAAK7K,OAAO5xB,OAAOhJ,IAG3Bwf,IAEAomB,EAAU7lC,GAAKyf,EAAMzf,EAAEsC,MACvBujC,EAAU5lC,GAAKwf,EAAMxf,EAAEqC,MAEvB60B,GAAcC,EAAK3X,IAEnB+xB,GAAsB/qC,GAAai/B,EAAKx/B,eACxC6xB,GAAaX,EAAKsO,EAAKx/B,eAO/B2/B,EAAU7lC,EAAIq3B,GAAcwO,EAAU7lC,GACtC6lC,EAAU5lC,EAAIo3B,GAAcwO,EAAU5lC,I+B6pB9ByxC,CAAgBt1C,KAAKqzC,gBAAiBrzC,KAAKypC,UAAWzpC,KAAKgxC,KAAMgE,GACjE,IAAQ5pC,EAAW2gC,EAAX3gC,OACR,GAAKA,EAAL,CAEKpL,KAAK0pC,kBACN1pC,KAAK0pC,gB5B3uBM,CACvB9lC,EAP2B,CAC3Bw1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,GAIbt1B,EAR2B,CAC3Bu1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,I4B8uBDn5B,KAAKu1C,6B5B5uBM,CACvB3xC,EAP2B,CAC3Bw1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,GAIbt1B,EAR2B,CAC3Bu1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,K4BgvBL,IAAMqc,EAAiBx1C,KAAKypC,UAAU7lC,EAChC6xC,EAAiBz1C,KAAKypC,UAAU5lC,EAChC6xC,EAA0B11C,KAAK21C,oBAUrCtc,GAAar5B,KAAK0pC,gBAAiB1pC,KAAKqzC,gBAAiBjoC,EAAQpL,KAAK8J,cACtE9J,KAAK21C,oBAAsBjH,GAAyB1uC,KAAK0pC,gBAAiB1pC,KAAKypC,WAC3EzpC,KAAK21C,sBAAwBD,GAC7B11C,KAAKypC,UAAU7lC,IAAM4xC,GACrBx1C,KAAKypC,UAAU5lC,IAAM4xC,IACrBz1C,KAAK4wC,cAAe,EACpB5wC,KAAK6kC,iBACL7kC,KAAK2yC,gBAAgB,mBAAoBvnC,SAzuBrD,kBA4uBI,WACIpL,KAAK6wC,WAAY,IA7uBzB,kBAgvBI,WACI7wC,KAAK6wC,WAAY,IAjvBzB,4BAovBI,WAAiC,IACzBvkC,EAAI2T,EAAIC,EADD01B,IAAkB,yDAEiB,QAA7C31B,GAAM3T,EAAKtM,KAAK+J,SAAS86B,sBAAmC,IAAP5kB,GAAyBA,EAAG5iB,KAAKiP,GACvFspC,IAAyC,QAA1B11B,EAAKlgB,KAAK+qC,kBAA+B,IAAP7qB,GAAyBA,EAAG2kB,kBACzE7kC,KAAKyuC,eAAiBzuC,KAAKyuC,aAAa5sC,WACxC7B,KAAKyuC,kBAAehyC,KAzvBhC,gCA4vBI,SAAmB4mB,GAA6C,IACxD/W,EAAI2T,EADoD,OAAtCgyB,EAAsC,wDAEtD/D,EAAWluC,KAAKkuC,SAChB2H,GAAqC,OAAb3H,QAAkC,IAAbA,OAAsB,EAASA,EAASpkC,eAAiB,GACtGgsC,GAAc,UAAK91C,KAAK8J,cACxByqC,E5BzxBS,CACvB3wC,EAP2B,CAC3Bw1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,GAIbt1B,EAR2B,CAC3Bu1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,I4B4xBLn5B,KAAK0xC,eAAiB1xC,KAAK60C,0BAAuBp4C,EAClDuD,KAAK00C,gCAAkCzC,EACvC,IAAM8D,E5BvxBO,CACrBnyC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4ByxBvBuxC,GAAwC,OAAb9H,QAAkC,IAAbA,OAAsB,EAASA,EAAS7iC,WAAoC,QAAtBiB,EAAKtM,KAAKuD,cAA2B,IAAP+I,OAAgB,EAASA,EAAGjB,QAChK4gC,IAA4C,QAA1BhsB,EAAKjgB,KAAK+qC,kBAA+B,IAAP9qB,OAAgB,EAASA,EAAG+qB,QAAQ1lC,SAAW,IAAM,EACzG0mC,EAAyB9tC,QAAQ83C,IAClC/J,IAC0B,IAA3BjsC,KAAK+J,QAAQukC,YACZtuC,KAAKgxC,KAAKjzC,KAAKk4C,KACpBj2C,KAAK8wC,kBAAoB,EACzB9wC,KAAKk2C,eAAiB,SAAC/pB,GACnB,IAAI7f,EACEqZ,EAAWwG,EAAS,IAC1BgqB,GAAa5B,EAAY3wC,EAAGyf,EAAMzf,EAAG+hB,GACrCwwB,GAAa5B,EAAY1wC,EAAGwf,EAAMxf,EAAG8hB,GACrC,EAAKywB,eAAe7B,GAChB,EAAK7C,gBACL,EAAKmD,sBACL,EAAKtxC,SAC2B,QAA9B+I,EAAK,EAAKqoC,sBAAmC,IAAProC,OAAgB,EAASA,EAAG/I,UACpEk2B,GAAqBsc,EAAgB,EAAKxyC,OAAOy5B,UAAW,EAAK2X,eAAepxC,OAAOy5B,WACvFqZ,GAAO,EAAK3E,eAAgB,EAAKmD,qBAAsBkB,EAAgBpwB,IAEvEqwB,IACA,EAAK7H,gBAAkB2H,EACvBjK,GAAUiK,EAAaD,EAAsB,EAAK/rC,aAAc6b,EAAUqmB,EAAwBC,IAEtG,EAAKh1B,KAAKu9B,2BACV,EAAK3P,iBACL,EAAKiM,kBAAoBnrB,GAE7B3lB,KAAKk2C,eAAe,KAjyB5B,4BAmyBI,SAAensC,GAAS,IAChBuC,EAAI2T,EADY,OAEpBjgB,KAAK2yC,gBAAgB,kBACY,QAAhCrmC,EAAKtM,KAAKgvB,wBAAqC,IAAP1iB,GAAyBA,EAAG2f,OACjEjsB,KAAKyuC,eACyC,QAA7CxuB,EAAKjgB,KAAKyuC,aAAazf,wBAAqC,IAAP/O,GAAyBA,EAAGgM,QAElFjsB,KAAKk1C,mBACLnwB,GAAWgH,OAAO/rB,KAAKk1C,kBACvBl1C,KAAKk1C,sBAAmBz4C,GAO5BuD,KAAKk1C,iBAAmBvwB,GAAAA,QAAY,WAChChlB,EAAsBC,wBAAyB,EAC/C,EAAKovB,iBAAmBlxB,GAAQ,EAxzBxB,KAwzBuB,QAAC,UACzBiM,GADwB,IAE3BgjB,SAAU,SAACZ,GACP,IAAI7f,EACJ,EAAK4pC,eAAe/pB,GACQ,QAA3B7f,EAAKvC,EAAQgjB,gBAA6B,IAAPzgB,GAAyBA,EAAGjP,KAAK0M,EAASoiB,IAElFU,WAAY,WACR,IAAIvgB,EAC0B,QAA7BA,EAAKvC,EAAQ8iB,kBAA+B,IAAPvgB,GAAyBA,EAAGjP,KAAK0M,GACvE,EAAKusC,wBAGT,EAAK7H,eACL,EAAKA,aAAazf,iBAAmB,EAAKA,kBAE9C,EAAKkmB,sBAAmBz4C,OAr0BpC,+BAw0BI,WACI,IAAI6P,EACAtM,KAAKyuC,eACLzuC,KAAKyuC,aAAazf,sBAAmBvyB,EACrCuD,KAAKyuC,aAAaR,qBAAkBxxC,GAEb,QAA1B6P,EAAKtM,KAAK+qC,kBAA+B,IAAPz+B,GAAyBA,EAAGiqC,wBAC/Dv2C,KAAKyuC,aACDzuC,KAAKgvB,iBACDhvB,KAAKmuC,qBACD1xC,EACZuD,KAAK2yC,gBAAgB,uBAn1B7B,6BAq1BI,WACI,IAAIrmC,EACAtM,KAAKgvB,mBAC0B,QAA9B1iB,EAAKtM,KAAKk2C,sBAAmC,IAAP5pC,GAAyBA,EAAGjP,KAAK2C,KA31BhE,KA41BRA,KAAKgvB,iBAAiB/C,QAE1BjsB,KAAKs2C,sBA31Bb,qCA61BI,WACI,IAAMvK,EAAO/rC,KAAKy0C,UACZK,EAAuD/I,EAAvD+I,qBAAsB1pC,EAAiC2gC,EAAjC3gC,OAAQ7H,EAAyBwoC,EAAzBxoC,OAAQuG,EAAiBiiC,EAAjBjiC,aAC5C,GAAKgrC,GAAyB1pC,GAAW7H,EAAzC,CAOA,GAAIvD,OAAS+rC,GACT/rC,KAAKuD,QACLA,GACAizC,GAA0Bx2C,KAAK+J,QAAQ28B,cAAe1mC,KAAKuD,OAAOy5B,UAAWz5B,EAAOy5B,WAAY,CAChG5xB,EAASpL,KAAKoL,Q5B93BL,CACrBxH,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4Bg4BzB,IAAMgyC,EAAU3d,GAAW94B,KAAKuD,OAAOy5B,UAAUp5B,GACjDwH,EAAOxH,EAAEY,IAAMunC,EAAK3gC,OAAOxH,EAAEY,IAC7B4G,EAAOxH,EAAEa,IAAM2G,EAAOxH,EAAEY,IAAMiyC,EAC9B,IAAMC,EAAU5d,GAAW94B,KAAKuD,OAAOy5B,UAAUn5B,GACjDuH,EAAOvH,EAAEW,IAAMunC,EAAK3gC,OAAOvH,EAAEW,IAC7B4G,EAAOvH,EAAEY,IAAM2G,EAAOvH,EAAEW,IAAMkyC,EAElC7J,GAAYiI,EAAsB1pC,GAMlCuwB,GAAamZ,EAAsBhrC,GAOnCuvB,GAAar5B,KAAKu1C,6BAA8Bv1C,KAAKqzC,gBAAiByB,EAAsBhrC,MAh4BpG,gCAk4BI,SAAmB1I,EAAUkoC,GACzB,IAAIh9B,EAAI2T,EAAIC,EACPlgB,KAAK+wC,YAAYpuC,IAAIvB,IACtBpB,KAAK+wC,YAAYnuC,IAAIxB,EAAU,IAAIqsC,IAEzBztC,KAAK+wC,YAAYtuC,IAAIrB,GAC7BgjB,IAAIklB,GACVA,EAAKuB,QAAQ,CACTp5B,WAA2D,QAA9CnF,EAAKg9B,EAAKv/B,QAAQ48B,8BAA2C,IAAPr6B,OAAgB,EAASA,EAAGmF,WAC/Fq8B,sBAAiJ,QAAzH5tB,EAAoD,QAA9CD,EAAKqpB,EAAKv/B,QAAQ48B,8BAA2C,IAAP1mB,OAAgB,EAASA,EAAG02B,mCAAgD,IAAPz2B,OAAgB,EAASA,EAAG7iB,KAAK4iB,EAAIqpB,OA34B1M,oBA84BI,WACI,IAAMsN,EAAQ52C,KAAK+qC,WACnB,OAAO6L,GAAQA,EAAM7K,OAAS/rC,OAh5BtC,qBAk5BI,WACI,IAAIsM,EAEJ,OADqBtM,KAAK+J,QAAlB3I,WACsC,QAA1BkL,EAAKtM,KAAK+qC,kBAA+B,IAAPz+B,OAAgB,EAASA,EAAGy/B,OAAgB/rC,OAr5B1G,yBAu5BI,WACI,IAAIsM,EAEJ,OADqBtM,KAAK+J,QAAlB3I,SACqC,QAA1BkL,EAAKtM,KAAK+qC,kBAA+B,IAAPz+B,OAAgB,EAASA,EAAGohC,cAAWjxC,IA15BpG,sBA45BI,WACI,IAAQ2E,EAAapB,KAAK+J,QAAlB3I,SACR,GAAIA,EACA,OAAOpB,KAAKiX,KAAK85B,YAAYtuC,IAAIrB,KA/5B7C,qBAi6BI,WAAiE,6DAAJ,GAAnD6uC,EAAuD,EAAvDA,WAAYx+B,EAA2C,EAA3CA,WAAYq8B,EAA+B,EAA/BA,sBACxB8I,EAAQ52C,KAAK+qC,WACf6L,GACAA,EAAM/L,QAAQ7qC,KAAM8tC,GACpBmC,IACAjwC,KAAK0pC,qBAAkBjtC,EACvBuD,KAAKiwC,YAAa,GAElBx+B,GACAzR,KAAKwmC,WAAW,CAAE/0B,WAAAA,MA16B9B,sBA46BI,WACI,IAAMmlC,EAAQ52C,KAAK+qC,WACnB,QAAI6L,GACOA,EAAM9L,SAAS9qC,QA/6BlC,2BAq7BI,WACI,IAAQjE,EAAkBiE,KAAK+J,QAAvBhO,cACR,GAAKA,EAAL,CAGA,IAAI86C,GAAY,EAKR/sC,EAAiB/N,EAAjB+N,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbquC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,GAEXh8B,EAAI,EAAGA,EAAIq0B,GAAc7pC,OAAQwV,IAAK,CAC3C,IAAMha,EAAM,SAAWquC,GAAcr0B,GAEjChR,EAAahJ,KACbg2C,EAAYh2C,GAAOgJ,EAAahJ,GAChC/E,EAAc6mC,eAAe9hC,EAAK,IAO1C,IAAK,IAAMA,KAFO,OAAlB/E,QAA4C,IAAlBA,GAAoCA,EAAca,SAE1Dk6C,EACd/6C,EAAc6mC,eAAe9hC,EAAKg2C,EAAYh2C,IAIlD/E,EAAc8oC,qBA59BtB,iCA89BI,WAAoC,IAC5Bv4B,EAAI2T,EAAIC,EADIjR,EAAgB,uDAAJ,GAGtB8nC,EAAS,GACf,IAAK/2C,KAAK6B,UAAY7B,KAAKgwC,MACvB,OAAO+G,EACX,IAAK/2C,KAAK6wC,UACN,MAAO,CAAEmG,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAMhtC,EAA0D,QAArCsC,EAAKtM,KAAK+J,QAAQhO,qBAAkC,IAAPuQ,OAAgB,EAASA,EAAGiM,WAAWvO,kBAC/G,GAAIhK,KAAKiwC,WAQL,OAPAjwC,KAAKiwC,YAAa,EAClB8G,EAAO3tC,QAAU,GACjB2tC,EAAOE,cACH7mC,GAAmBnB,EAAUgoC,gBAAkB,GACnDF,EAAOzyC,UAAY0F,EACbA,EAAkBhK,KAAK8J,aAAc,IACrC,OACCitC,EAEX,IAAMhL,EAAO/rC,KAAKy0C,UAClB,IAAKz0C,KAAK0pC,kBAAoB1pC,KAAKuD,SAAWwoC,EAAK3gC,OAAQ,CACvD,IAAM8rC,EAAc,GAepB,OAdIl3C,KAAK+J,QAAQ3I,WACb81C,EAAY9tC,aACsB3M,IAA9BuD,KAAK8J,aAAaV,QACZpJ,KAAK8J,aAAaV,QAClB,EACV8tC,EAAYD,cACR7mC,GAAmBnB,EAAUgoC,gBAAkB,IAEnDj3C,KAAK4wC,eAAiBvmC,GAAarK,KAAK8J,gBACxCotC,EAAY5yC,UAAY0F,EAClBA,EAAkB,GAAI,IACtB,OACNhK,KAAK4wC,cAAe,GAEjBsG,EAEX,IAAMC,EAAiBpL,EAAKoC,iBAAmBpC,EAAKjiC,aACpD9J,KAAKo3C,0BACLL,EAAOzyC,UAAYoqC,GAAyB1uC,KAAKu1C,6BAA8Bv1C,KAAKypC,UAAW0N,GAC3FntC,IACA+sC,EAAOzyC,UAAY0F,EAAkBmtC,EAAgBJ,EAAOzyC,YAEhE,MAAiBtE,KAAK0pC,gBAAd9lC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EA+BX,IAAK,IAAM/C,KA9BXi2C,EAAO3sC,gBAAP,UAAuC,IAAXxG,EAAEgJ,OAA9B,aAA0D,IAAX/I,EAAE+I,OAAjD,OACIm/B,EAAKoC,gBAKL4I,EAAO3tC,QACH2iC,IAAS/rC,KACiG,QAAnGkgB,EAAuC,QAAjCD,EAAKk3B,EAAe/tC,eAA4B,IAAP6W,EAAgBA,EAAKjgB,KAAK8J,aAAaV,eAA4B,IAAP8W,EAAgBA,EAAK,EACjIlgB,KAAKiuC,gBACDjuC,KAAK8J,aAAaV,QAClB+tC,EAAehL,YAO7B4K,EAAO3tC,QACH2iC,IAAS/rC,UACwBvD,IAA3B06C,EAAe/tC,QACX+tC,EAAe/tC,QACf,QAC2B3M,IAA/B06C,EAAehL,YACXgL,EAAehL,YACf,EAKAjpC,EACd,QAA4BzG,IAAxB06C,EAAer2C,GAAnB,CAEA,MAA6BoC,EAAgBpC,GAArCuoC,EAAR,EAAQA,QAASgC,EAAjB,EAAiBA,QACXgM,EAAYhO,EAAQ8N,EAAer2C,GAAMirC,GAC/C,GAAIV,EAEA,IADA,IAAMiM,EAAMjM,EAAQ/lC,OACXwV,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrBi8B,EAAO1L,EAAQvwB,IAAMu8B,OAIzBN,EAAOj2C,GAAOu2C,EActB,OANIr3C,KAAK+J,QAAQ3I,WACb21C,EAAOE,cACHlL,IAAS/rC,KACHoQ,GAAmBnB,EAAUgoC,gBAAkB,GAC/C,QAEPF,IAvkCf,2BAykCI,WACI/2C,KAAKguC,WAAahuC,KAAKkuC,cAAWzxC,IA1kC1C,uBA6kCI,WACIuD,KAAKiX,KAAKu5B,MAAMl/B,SAAQ,SAACg4B,GAAW,IAAIh9B,EAAI,OAAwC,QAAhCA,EAAKg9B,EAAKta,wBAAqC,IAAP1iB,OAAgB,EAASA,EAAG2f,UACxHjsB,KAAKiX,KAAKu5B,MAAMl/B,QAAQuhC,IACxB7yC,KAAKiX,KAAK85B,YAAY1f,YAhlC9B,KAolCJ,SAASsO,GAAa2J,GAClBA,EAAK3J,eAET,SAASqT,GAAmB1J,GACxB,IAAIh9B,EAAI2T,EAAIC,EACNguB,GAAuC,QAA1B5hC,EAAKg9B,EAAK0E,kBAA+B,IAAP1hC,OAAgB,EAASA,EAAG4hC,WAAa5E,EAAK4E,SACnG,GAAI5E,EAAK2B,UACL3B,EAAK/lC,QACL2qC,GACA5E,EAAKiO,aAAa,aAAc,CAChC,MAA2DjO,EAAK/lC,OAA7CA,EAAnB,EAAQy5B,UAAgCwa,EAAxC,EAA2BvD,YACnBvN,EAAkB4C,EAAKv/B,QAAvB28B,cACFsO,EAAW9G,EAAS7iC,SAAWi+B,EAAK/lC,OAAO8H,OAG3B,SAAlBq7B,EACArM,IAAS,SAACtB,GACN,IAAM0e,EAAezC,EACf9G,EAAS+F,YAAYlb,GACrBmV,EAASlR,UAAUjE,GACnBzzB,EAASwzB,GAAW2e,GAC1BA,EAAajzC,IAAMjB,EAAOw1B,GAAMv0B,IAChCizC,EAAahzC,IAAMgzC,EAAajzC,IAAMc,KAGrCkxC,GAA0B9P,EAAewH,EAASlR,UAAWz5B,IAClE82B,IAAS,SAACtB,GACN,IAAM0e,EAAezC,EACf9G,EAAS+F,YAAYlb,GACrBmV,EAASlR,UAAUjE,GACnBzzB,EAASwzB,GAAWv1B,EAAOw1B,IACjC0e,EAAahzC,IAAMgzC,EAAajzC,IAAMc,KAG9C,IAAMoyC,E5B9oCa,CACvB9zC,EAP2B,CAC3Bw1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,GAIbt1B,EAR2B,CAC3Bu1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,I4BipCTE,GAAaqe,EAAan0C,EAAQ2qC,EAASlR,WAC3C,IAAM2a,E5BhpCa,CACvB/zC,EAP2B,CAC3Bw1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,GAIbt1B,EAR2B,CAC3Bu1B,UAAW,EACXlzB,MAAO,EACP0G,OAAQ,EACRusB,YAAa,I4BmpCL6b,EACA3b,GAAase,EAAarO,EAAKyL,eAAeyC,GAAgB,GAAOtJ,EAAS+F,aAG9E5a,GAAase,EAAap0C,EAAQ2qC,EAASlR,WAE/C,IAAMkD,GAAoBoN,GAAYoK,GAClCnG,GAA2B,EAC/B,IAAKjI,EAAK0E,WAAY,CAClB,IAAM2G,EAAiBrL,EAAKsL,6BAK5B,GAAID,IAAmBA,EAAe3G,WAAY,CAC9C,IAAkB4J,EAAyCjD,EAAnDzG,SAAkC2J,EAAiBlD,EAAzBpxC,OAClC,GAAIq0C,GAAkBC,EAAc,CAChC,IAAMC,E5B7pCD,CACrBl0C,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B+pCrBg1B,GAAqBqe,EAAkB5J,EAASlR,UAAW4a,EAAe5a,WAC1E,IAAM+Y,E5B/pCD,CACrBnyC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4BiqCrBg1B,GAAqBsc,EAAgBxyC,EAAQs0C,EAAa7a,WACrDuQ,GAAUuK,EAAkB/B,KAC7BxE,GAA2B,KAK3CjI,EAAKqJ,gBAAgB,YAAa,CAC9BpvC,OAAAA,EACA2qC,SAAAA,EACA7qB,MAAOs0B,EACPD,YAAAA,EACAxX,iBAAAA,EACAqR,yBAAAA,SAGCjI,EAAK2B,WACoC,QAA7C/qB,GAAMD,EAAKqpB,EAAKv/B,SAASwQ,sBAAmC,IAAP2F,GAAyBA,EAAG7iB,KAAK4iB,IAO3FqpB,EAAKv/B,QAAQ0H,gBAAahV,EAE9B,SAASg0C,GAAoBnH,GAKzBA,EAAKuG,oBAAsBvG,EAAKuG,kBAAoB3xC,QAAQorC,EAAKztC,QAAUytC,EAAKztC,OAAOg0C,oBAIvFvG,EAAKvD,mBAAqBuD,EAAKvD,iBAAmB7nC,QAAQorC,EAAKztC,QAAUytC,EAAKztC,OAAOkqC,mBAEzF,SAASkN,GAAc3J,GACnBA,EAAK2J,gBAET,SAASJ,GAAkBvJ,GACvBA,EAAKuJ,oBAET,SAASE,GAAoBzJ,GACzB,IAAQvtC,EAAkButC,EAAKv/B,QAAvBhO,eACc,OAAlBA,QAA4C,IAAlBA,OAA2B,EAASA,EAAcwc,WAAWw/B,wBACvFh8C,EAAcgB,OAAO,uBAEzBusC,EAAKmG,iBAET,SAAS4B,GAAgB/H,GACrBA,EAAK+H,kBACL/H,EAAKiL,YAAcjL,EAAKoI,eAAiBpI,EAAKl+B,YAAS3O,EAE3D,SAASi0C,GAAmBpH,GACxBA,EAAKoH,qBAET,SAASC,GAAerH,GACpBA,EAAKqH,iBAET,SAAS2B,GAAchJ,GACnBA,EAAKgJ,gBAET,SAASY,GAAoB0D,GACzBA,EAAMoB,qBAEV,SAAS7B,GAAar2B,EAAQuD,EAAOzoB,GACjCklB,EAAOsZ,UAAY9oB,GAAI+S,EAAM+V,UAAW,EAAGx+B,GAC3CklB,EAAO5Z,MAAQoK,GAAI+S,EAAMnd,MAAO,EAAGtL,GACnCklB,EAAOlT,OAASyW,EAAMzW,OACtBkT,EAAOqZ,YAAc9V,EAAM8V,YAE/B,SAAS8e,GAAQn4B,EAAQ4F,EAAM5E,EAAIlmB,GAC/BklB,EAAOtb,IAAM8L,GAAIoV,EAAKlhB,IAAKsc,EAAGtc,IAAK5J,GACnCklB,EAAOrb,IAAM6L,GAAIoV,EAAKjhB,IAAKqc,EAAGrc,IAAK7J,GAEvC,SAASy7C,GAAOv2B,EAAQ4F,EAAM5E,EAAIlmB,GAC9Bq9C,GAAQn4B,EAAOlc,EAAG8hB,EAAK9hB,EAAGkd,EAAGld,EAAGhJ,GAChCq9C,GAAQn4B,EAAOjc,EAAG6hB,EAAK7hB,EAAGid,EAAGjd,EAAGjJ,GAEpC,SAASq7C,GAAoB3M,GACzB,OAAQA,EAAK6E,sBAAwD1xC,IAArC6sC,EAAK6E,gBAAgBhC,YAEzD,IAAMyF,GAA0B,CAC5B1wB,SAAU,IACVD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS6xB,GAAexJ,EAAMoG,GAM1B,IADA,IAAIwI,EAAa5O,EAAKryB,KACb6D,EAAIwuB,EAAK0H,KAAK1rC,OAAS,EAAGwV,GAAK,EAAGA,IACvC,GAAI5c,QAAQorC,EAAK0H,KAAKl2B,GAAGjZ,UAAW,CAChCq2C,EAAa5O,EAAK0H,KAAKl2B,GACvB,MAGR,IACM9L,GADgBkpC,GAAcA,IAAe5O,EAAKryB,KAAOihC,EAAWr2C,SAAW3G,UACvDi9C,cAAd,+BAAoDzI,EAApD,OACZ1gC,GACAs6B,EAAKxnC,MAAMkN,GAAS,GAE5B,SAASopC,GAAUrf,GACfA,EAAKv0B,IAAME,KAAK2B,MAAM0yB,EAAKv0B,KAC3Bu0B,EAAKt0B,IAAMC,KAAK2B,MAAM0yB,EAAKt0B,KAE/B,SAASuvC,GAAShZ,GACdod,GAAUpd,EAAIp3B,GACdw0C,GAAUpd,EAAIn3B,GAElB,SAAS2yC,GAA0B9P,EAAewH,EAAU3qC,GACxD,MAA0B,aAAlBmjC,GACe,oBAAlBA,IACI1N,GAAOwU,GAAYU,GAAWV,GAAYjqC,GAAS,IC3xChE,IAAM80C,GAAyBjJ,GAAqB,CAChDC,qBAAsB,SAACpyC,EAAKF,GAAN,OAAiBmV,GAAYjV,EAAK,SAAUF,IAClEwyC,cAAe,iBAAO,CAClB3rC,EAAG1I,SAASo9C,gBAAgBC,YAAcr9C,SAASs9C,KAAKD,WACxD10C,EAAG3I,SAASo9C,gBAAgBG,WAAav9C,SAASs9C,KAAKC,YAE3DjJ,kBAAmB,kBAAM,KCNvBjR,GAAqB,CACvBjiC,aAASG,GAEPi8C,GAAqBtJ,GAAqB,CAC5CG,cAAe,SAAC1tC,GAAD,MAAe,CAC1B+B,EAAG/B,EAAS02C,WACZ10C,EAAGhC,EAAS42C,YAEhBnJ,cAAe,WACX,IAAK/Q,GAAmBjiC,QAAS,CAC7B,IAAMq8C,EAAe,IAAIN,GAAuB,EAAG,IACnDM,EAAa72C,MAAM6S,QACnBgkC,EAAanS,WAAW,CAAED,cAAc,IACxChI,GAAmBjiC,QAAUq8C,EAEjC,OAAOpa,GAAmBjiC,SAE9BmzC,eAAgB,SAAC5tC,EAAUF,GACvBE,EAASoI,MAAM3F,eAAsB7H,IAAVkF,EAAsBA,EAAQ,QAE7D6tC,kBAAmB,SAAC3tC,GAAD,OAAc3D,QAAuD,UAA/CyW,OAAOysB,iBAAiBv/B,GAAU+2C,aCbzEC,IAAgB,kCACftlB,IACAxa,IACA5Z,IACAosC,IAQDuN,GAAuB52C,GAAkB,SAACzG,EAAWgV,GAAZ,OCjB/C,SAA+BhV,EAA/B,EAA0EgF,EAAmB7E,EAAqB8E,GAA2B,QAAjG+L,mBAAAA,OAAiG,SACnIssC,EAAaj2C,EAAerH,GAC5BmW,GACAK,GACN,yBACO8mC,GADP,IAEIt4C,kBAAAA,EACAE,UAAW8N,GAAgBhC,GAC3B7Q,oBAAAA,EACA8E,0BAAAA,EACAjF,UAAAA,IDO8Du9C,CAAsBv9C,EAAWgV,EAAQooC,GAAe5P,GAAwByP","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/style-value-types/dist/es/utils.mjs","../node_modules/style-value-types/dist/es/numbers/units.mjs","../node_modules/style-value-types/dist/es/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/style-value-types/dist/es/color/utils.mjs","../node_modules/style-value-types/dist/es/color/rgba.mjs","../node_modules/style-value-types/dist/es/color/hex.mjs","../node_modules/style-value-types/dist/es/color/hsla.mjs","../node_modules/style-value-types/dist/es/color/index.mjs","../node_modules/style-value-types/dist/es/complex/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framesync/dist/es/on-next-frame.mjs","../node_modules/framesync/dist/es/index.mjs","../node_modules/framesync/dist/es/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.19\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.19\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.19 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","parse","parseFloat","degrees","percent","px","vh","vw","progressPercentage","assign","number","alpha","scale","default","int","round","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substr","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyse","numColors","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","ease","duration","keyframes","defaultTransitions","backgroundColor","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","frame","delta","timestamp","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","frameData","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","getFrameData","delay","timeout","checkElapsed","elapsed","read","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","framesync","update","passTimestamp","stop","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getDelayFromTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","inertia","finalTarget","potentialUnitType","controls","cancelDelay","delayBy","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","subscription","clear","passiveEffect","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","animateVariant","variant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}